<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>基于 webpack 的 chrome 扩展开发探索 - 韩子迟</title>
<link>http://www.cnblogs.com/zichi/p/7758146.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zichi/p/7758146.html</guid>
<description>&lt;p&gt;最近利用闲暇时间在进行一款 chrome 扩展 &lt;a href=&quot;https://github.com/hanzichi/v2ex-helper&quot;&gt;V2EX-HELPER&lt;/a&gt; 的开发（如果巧遇 V 友欢迎试用），今天把它彻底改成了用 webpack 打包依赖的模式，不由得感概 webpack 的强大，记录一二。&lt;/p&gt;

&lt;p&gt;之前的项目开发是非常传统的 chrome 扩展开发方式，代码可以猛戳 &lt;a href=&quot;https://github.com/hanzichi/v2ex-helper/tree/d7f0e688f84898a307f5279fbcac3f92206337f6&quot;&gt;这里&lt;/a&gt;。截止目前，该扩展主要由三部分组成，background-scripts，content-scripts 以及 option 页面。一开始做这个扩展的时候，只是为了实现一个功能，所以就一个 background.js 文件，一个 content.js 文件，甚至都不需要 option 页面，但是随着集成的功能越来越多，js 的依赖也越来越复杂。&lt;/p&gt;
&lt;p&gt;比如有一个查看对话详情的功能，manifest.json 文件中的 content_scripts 项是这样配置的：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;// 对话详情&lt;/span&gt;
  &lt;span class=&quot;st&quot;&gt;&quot;matches&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;&quot;*://www.v2ex.com/t/*&quot;&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;st&quot;&gt;&quot;js&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [
    &lt;span class=&quot;st&quot;&gt;&quot;content-scripts/lib/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;content-scripts/lib/jquery.modal.min.js&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;content-scripts/checkConversation/checkConversation.js&quot;&lt;/span&gt;
  ]&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;st&quot;&gt;&quot;css&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [
    &lt;span class=&quot;st&quot;&gt;&quot;styles/all.css&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;styles/lib/css-loader.css&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;styles/lib/jquery.modal.min.css&quot;&lt;/span&gt;
  ]&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;st&quot;&gt;&quot;run_at&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;document_end&quot;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也就是说，这个功能的实现，页面中插入了三个 js 文件和三个 css 文件。&lt;/p&gt;
&lt;p&gt;我们来看下当时主要文件结构：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;├── background-scripts
│   ├── background.js
│   ├── getCfg.js
│   ├── lib
│   └── notifications.js
├── content-scripts
│   ├── checkConversation
│   ├── checkReply
│   ├── lib
│   ├── signin
│   ├── uploadImg
│   └── zoom
├── manifest.json
├── option
│   ├── option.html
│   └── option.js
└── styles
    ├── all.css
    └── lib&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在 content-scripts 目录下，我为每个功能新增了一个文件夹，然后相应的 js 文件放里面，因为可能会有文件的复用（比如多次复用 jquery），我把这类文件放到一个叫 lib 的目录下。其实理想的想法是，跟组件化思路类似，将一个功能的文件放到一个文件夹下，但是这样的话，可能 checkConversation 文件夹下会有个 jquery 文件，checkReply 文件夹下也有个 jquery 文件，有代码洁癖的人完全不能忍。而且，content_scripts 其实还配置了 css，我将它放在了独立的 styles 文件夹下，文件如此分散实际上相当难以维护。&lt;/p&gt;
&lt;p&gt;理想的目录结构可能会是这样：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;├── content-scripts
│   ├── checkConversation
│   │   └── checkConversation.js
│   │   └── jquery.min.js
│   │   └── A.css
│   ├── checkReply
│   │   ├── insertCheckBtn.js
│   │   └── jump.js
│   │   └── B.css&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;之后，background-scripts 中的文件也越来越多，因为逻辑放在一个文件实在是难以维护。&lt;/p&gt;

&lt;p&gt;决定采用 webpack 做打包工具后，问题迎刃而解。&lt;/p&gt;
&lt;p&gt;来看目前的主要文件结构：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;├── app
│   ├── background-scripts
│   │   ├── background.js
│   │   ├── checkConversation.js
│   │   ├── setNotifications.js
│   │   └── uploadImg.js
│   ├── content-scripts
│   │   ├── checkConversation
│   │   │   ├── checkConversation.js
│   │   │   └── sass
│   │   ├── checkReply
│   │   │   ├── insertCheckBtn.js
│   │   │   └── jump.js
│   │   ├── signin
│   │   │   └── signin.js
│   │   ├── uploadImg
│   │   │   ├── sass
│   │   │   └── uploadImg.js
│   │   └── zoom
│   │       └── zoom.js
│   ├── option
│   │   ├── option.html
│   │   └── option.js
│   ├── popup
│   │   ├── popup.html
│   │   └── popup.js
│   └── settings
│       └── settings.js
├── extension
│   ├── background-scripts
│   │   └── background.js
│   ├── content-scripts
│   │   ├── checkConversation
│   │   │   └── checkConversation.js
│   │   ├── checkReply
│   │   │   ├── insertCheckBtn.js
│   │   │   └── jump.js
│   │   ├── signin
│   │   │   └── signin.js
│   │   ├── uploadImg
│   │   │   └── uploadImg.js
│   │   └── zoom
│   │       └── zoom.js
│   ├── manifest.json
│   ├── option
│   │   ├── option.html
│   │   └── option.js
├── package.json
└── webpack.config.js&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;extension 文件夹內为最终的扩展打包文件，而 app 文件夹为原始开发文件，可以看到，一个独立的功能最终都被打包成了一个 js 文件，用了 npm 当作包管理工具，也不用怕文件多次复制的问题。而 webpack 一切皆为模块的思想，配合 ES6 的模块，成功将多个 js 以及 css 依赖，打包入一个文件，同时也简化了 manifest.json 文件中的 content_scripts 配置，不得不说这正是我期望的效果。&lt;/p&gt;
&lt;p&gt;webpack 的配置（webpack.config.js），多入口不用多说，jquery + jquery 插件的使用遇到了一点问题，记录如下。&lt;/p&gt;
&lt;p&gt;plugins 选项配置如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;plugins&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [
  &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;webpack&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ProvidePlugin&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jquery'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jquery'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;'window.jQuery'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jquery'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;'window.$'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jquery'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)
]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;module 中增加一条 rules（先 npm i expose-loader）：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;require&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'jquery'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'expose-loader'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jQuery'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'expose-loader'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'$'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;]
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后就可以全局使用 jQuery 了（无需另写代码引入），也可以在文件中使用 jquery 插件了。&lt;/p&gt;
&lt;p&gt;比如在查看对话功能中，使用了 jquery 以及 jquery.modal 这个 jquery 插件，js 文件中这样写（当然首先 npm i jquery-modal）：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jquery-modal/jquery.modal.min.css'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'jquery-modal/jquery.modal.min.js'&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;随着对于 webpack 的了解逐渐加深，真心觉得真的是开发利器（当然 npm 也是不逞多让，两者配合开发真是爽歪歪）。&lt;/p&gt;
&lt;p&gt;其实现实工作开发中，webpack 甚至 react、vue 等框架我都还没用过，非常遗憾，有实际的开发需求肯定才有更大动力去探索和填坑，希望自己早日能接触到基于这类的开发吧。&lt;/p&gt;
</description>
<pubDate>Mon, 30 Oct 2017 15:08:00 +0000</pubDate>
<dc:creator>韩子迟</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zichi/p/7758146.html</dc:identifier>
</item>
<item>
<title>JavaWeb之Eclipse中使用Maven构建SpringMVC项目 - 社会主义接班人</title>
<link>http://www.cnblogs.com/5ishare/p/7703513.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/5ishare/p/7703513.html</guid>
<description>&lt;p&gt;为了学习spring和maven我这也是拼了老命了,光使用maven配置springmvc我花了上周一周的时间，下班回来就搞，一直有bug，一个bug接着一个，昨天一整天都在解决配置的问题，让大学同学亲自出马，这里先谢谢蒙了，今天又专门跑去新天下，找之前公司的小伙伴来帮忙。我也是参考的网上的博客，不过根据参考的自己在配置过程中也出现了好多的坑。想着使用Maven配置springmvc主要是先大致的了解下maven和spring,然后再慢慢的深入的了解maven和spring。&lt;/p&gt;
&lt;p&gt;1.Eclipse创建Maven Project&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171024224245019-1212678227.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.选择Archetype，这里是创建web的项目，所以选择的是webapp&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171024230046566-296638837.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3.输入GroupId,Artifact Id和Viesion,这样算是输入了坐标，方便以后查找。关于坐标是maven的概念，这个以后会经常用到。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171024230140769-1378806343.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4.选中项目点右键找到属性，在build path中可以看到有几个文件不存在，可以按照缺失的增加上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171024230317207-1979878450.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030212512058-721617523.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;5.配置仓库&lt;/p&gt;
&lt;p&gt;上面创建完成之后引入spring开始就bug一个接着一个，我现在pom.xml中配置了spring的几个部分，但是发现下面的错误，问了下同学告诉我说的仓库的问题，访问不了。建议使用阿里的国内的，于是我就重新设置了下仓库。需要在maven的安装目录下的conf/下的settings.xml中设置。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
   &amp;lt;localRepository&amp;gt;D:\Maven\repository&amp;lt;/localRepository&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;lt;mirrors&amp;gt;节点中增加mirror.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
     &amp;lt;mirror&amp;gt;
        &amp;lt;id&amp;gt;nexus-aliyun&amp;lt;/id&amp;gt;
        &amp;lt;mirrorOf&amp;gt;*&amp;lt;/mirrorOf&amp;gt;
        &amp;lt;name&amp;gt;Nexus aliyun&amp;lt;/name&amp;gt;
        &amp;lt;url&amp;gt;http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;maven.aliyun.com/nexus/content/groups/public&amp;lt;/url&amp;gt;&lt;/span&gt;
    &amp;lt;/mirror&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030213545761-119433357.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后cmd中mvn help:system下载仓库jar包。其中这里要重点说一下，还有一个地方也要设置。昨天找同学搞了半天一个地方就是这个原因导致的。这里也要注意下，昨天发现这里没有配置正确，导致可以访问jsp文件，但访问Controller时就报404的错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030214924418-307587422.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030214632605-1639062472.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;6.引入springmvc&lt;/p&gt;
&lt;p&gt;在pom.xml中引入jar包，下面的代码是正确的，但在这过程中也出现了好多坑，例如下面的错误&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030215653090-176349099.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个bug是因为版本不一致导致的，在web.xml中设置的是3.0的，所以需要在下图选择比较新的，但直接修改又修改不了，需要在项目的.settings文件下的org.eclipse.wst.common.project.facet.core.xml中修改。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030220625246-207774656.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030220431168-1178242915.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030215808433-1177249056.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面的bug解决之后又出现了下面的一个bug。这个也是spring配置的问题，我在spring-mvc.xml中配置了了几个bean，因为引入的是spring5.0,所以我在每个xsd上加了个5.0.0的版本，导致报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030221122605-42781355.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面的地方我也配置错误了，因为项目的结构在上面有，我又在classpath:加了spring/:spring-mvc.xml导致获取不到。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030221309324-1071768758.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030220840527-438960205.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面的几个不过解决之后又报404的错误，仔细检查发现是一个点应该是英文，失误写成了中文，这些可是都通过了，以为可是能跑成功了，谁知又报500的错误。查看错误信息，看着像是关于jstl的，又找同事看了下，同事让加jstl和standard，于是我就在pom.xml中增加了两个依赖，可这次tomcat都启动不起来的，一直报java.lang.IndexOutOfBoundsException的错误，这也正是我今晚又去新天下找前同事的原因，我们开始觉得是tomcat的问题，于是又下载了tomcat7，还好我的流量多，直接用手机分享热点给电脑下载，可是还是出现这样的问题，于是就排除了tomcat的问题，因为在他电脑上就是可以运行的，我昨天找了一个QQ群的网友帮我看也是可以运行的，我们就怀疑上了是不是我的eclipse的问题，想着总不能还要重新下载eclipse吧，到最后实在是不知道哪出问题了，此时我也是头大，因为这个配置搞了一星期了，哎，同事说回办公室看看在他机子上运行的，我突然觉得不会又是仓库的问题吧，因为他报的错误就是关于jstl和standard的。于是我把pom.xml的依赖删除，把仓库中的jar删除，让它重新下载，当再次启动tomcat时，奇迹发生了，没有报错，输入url没想到成功了。哈哈哈。&lt;/p&gt;
&lt;p&gt;7.代码&lt;/p&gt;
&lt;p&gt;1.pom.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_57a6f084-c5b7-4b3e-95d0-8a533d9760fd&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_57a6f084-c5b7-4b3e-95d0-8a533d9760fd&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_57a6f084-c5b7-4b3e-95d0-8a533d9760fd&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&amp;lt;project xmlns=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:xsi=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  xsi:schemaLocation&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;modelVersion&amp;gt;&lt;span&gt;4.0&lt;/span&gt;.&lt;span&gt;0&lt;/span&gt;&amp;lt;/modelVersion&amp;gt;
  &amp;lt;groupId&amp;gt;com.cuiyw&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;CywWebApp&amp;lt;/artifactId&amp;gt;
  &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;
  &amp;lt;version&amp;gt;&lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;1&lt;/span&gt;-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;name&amp;gt;CywWebApp Maven Webapp&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;maven.apache.org&amp;lt;/url&amp;gt;&lt;/span&gt;
  
      &amp;lt;!-- 定义maven变量 --&amp;gt;
    &amp;lt;properties&amp;gt;
        &amp;lt;!-- spring --&amp;gt;
        &amp;lt;spring.version&amp;gt;&lt;span&gt;5.0&lt;/span&gt;.&lt;span&gt;0&lt;/span&gt;.RELEASE&amp;lt;/spring.version&amp;gt;
        &amp;lt;!-- log --&amp;gt;
        &amp;lt;commons-logging.version&amp;gt;&lt;span&gt;1.1&lt;/span&gt;.&lt;span&gt;3&lt;/span&gt;&amp;lt;/commons-logging.version&amp;gt;
        &amp;lt;!-- Servlet --&amp;gt;
        &amp;lt;servlet.version&amp;gt;&lt;span&gt;3.0&lt;/span&gt;.&lt;span&gt;1&lt;/span&gt;&amp;lt;/servlet.version&amp;gt;
        &amp;lt;jsp-api.version&amp;gt;&lt;span&gt;2.2&lt;/span&gt;&amp;lt;/jsp-api.version&amp;gt;
        &amp;lt;!-- test --&amp;gt;
        &amp;lt;junit.version&amp;gt;&lt;span&gt;3.8&lt;/span&gt;.&lt;span&gt;1&lt;/span&gt;&amp;lt;/junit.version&amp;gt;
        &amp;lt;!-- jdk --&amp;gt;
        &amp;lt;jdk.version&amp;gt;&lt;span&gt;1.8&lt;/span&gt;&amp;lt;/jdk.version&amp;gt;
        &amp;lt;jstl.version&amp;gt;&lt;span&gt;1.2&lt;/span&gt;&amp;lt;/jstl.version&amp;gt;
        &amp;lt;standard.version&amp;gt;&lt;span&gt;1.1&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&amp;lt;/standard.version&amp;gt;
        &amp;lt;maven.compiler.plugin.version&amp;gt;&lt;span&gt;2.3&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&amp;lt;/maven.compiler.plugin.version&amp;gt;
    &amp;lt;/properties&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-core&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-beans&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-context&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;


        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-expression&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-web&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-webmvc&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-tx&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt; 
            &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt; 
             &amp;lt;artifactId&amp;gt;jstl&amp;lt;/artifactId&amp;gt;
             &amp;lt;version&amp;gt;${jstl.version}&amp;lt;/version&amp;gt; 
        &amp;lt;/dependency&amp;gt; 

        &amp;lt;dependency&amp;gt; 
             &amp;lt;groupId&amp;gt;taglibs&amp;lt;/groupId&amp;gt; 
           &amp;lt;artifactId&amp;gt;standard&amp;lt;/artifactId&amp;gt;
           &amp;lt;version&amp;gt;${standard.version}&amp;lt;/version&amp;gt; 
        &amp;lt;/dependency&amp;gt; 

        &amp;lt;!-- Servlet --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;
             &amp;lt;version&amp;gt;${servlet.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;javax.servlet.jsp&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jsp-api&amp;lt;/artifactId&amp;gt;
             &amp;lt;version&amp;gt;${jsp-api.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        

        &amp;lt;!-- test --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${junit.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
    &amp;lt;/dependencies&amp;gt;
  &amp;lt;build&amp;gt;
          &amp;lt;plugins&amp;gt;
            &amp;lt;!-- define the project compile level --&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${maven.compiler.plugin.version}&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;${jdk.version}&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;${jdk.version}&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;finalName&amp;gt;CywWebApp&amp;lt;/finalName&amp;gt;
    
  &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;2.web.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_64b45042-2e31-47d1-9c6f-24819c716966&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_64b45042-2e31-47d1-9c6f-24819c716966&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_64b45042-2e31-47d1-9c6f-24819c716966&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; encoding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;web-app xmlns:xsi=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xmlns&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/xml/ns/javaee&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    id&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;WebApp_ID&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;3.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;display-name&amp;gt;test-spring&amp;lt;/display-name&amp;gt;

    &amp;lt;!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 --&amp;gt;
    &amp;lt;context-param&amp;gt;
        &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
        &amp;lt;param-value&amp;gt;classpath:spring-content.xml&amp;lt;/param-value&amp;gt;
    &amp;lt;/context-param&amp;gt;

    &amp;lt;!-- Spring配置 --&amp;gt;
    &amp;lt;listener&amp;gt;
        &amp;lt;listener-&lt;span&gt;class&lt;/span&gt;&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-&lt;span&gt;class&lt;/span&gt;&amp;gt;
    &amp;lt;/listener&amp;gt;

    &amp;lt;!-- Spring MVC配置 --&amp;gt;
    &amp;lt;servlet&amp;gt;
        &amp;lt;servlet-name&amp;gt;spring&amp;lt;/servlet-name&amp;gt;
        &amp;lt;servlet-&lt;span&gt;class&lt;/span&gt;&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-&lt;span&gt;class&lt;/span&gt;&amp;gt;
        &amp;lt;!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[&amp;lt;servlet-name&amp;gt;]-servlet.xml，如spring-servlet.xml --&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;classpath:spring-mvc.xml&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;load-on-startup&amp;gt;&lt;span&gt;1&lt;/span&gt;&amp;lt;/load-on-startup&amp;gt;
    &amp;lt;/servlet&amp;gt;

    &amp;lt;servlet-mapping&amp;gt;
        &amp;lt;servlet-name&amp;gt;spring&amp;lt;/servlet-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;*.&lt;span&gt;do&lt;/span&gt;&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/servlet-mapping&amp;gt;

    &amp;lt;!-- 中文过滤器 --&amp;gt;
    &amp;lt;filter&amp;gt;
        &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt;
        &amp;lt;filter-&lt;span&gt;class&lt;/span&gt;&amp;gt;org.springframework.web.filter.CharacterEncodingFilter&amp;lt;/filter-&lt;span&gt;class&lt;/span&gt;&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;encoding&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;UTF-&lt;span&gt;8&lt;/span&gt;&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;forceEncoding&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;&lt;span&gt;true&lt;/span&gt;&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
    &amp;lt;/filter&amp;gt;
    &amp;lt;filter-mapping&amp;gt;
        &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/filter-mapping&amp;gt;

    &amp;lt;welcome-file-list&amp;gt;
        &amp;lt;welcome-file&amp;gt;index.jsp&amp;lt;/welcome-file&amp;gt;
    &amp;lt;/welcome-file-list&amp;gt;
&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;3.spring-mvc.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_31d31489-5e03-496b-ac29-0fbcbed2b013&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_31d31489-5e03-496b-ac29-0fbcbed2b013&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_31d31489-5e03-496b-ac29-0fbcbed2b013&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; encoding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; standalone=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;beans xmlns=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/beans&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/context&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/aop&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:mvc=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/mvc&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:p&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/p&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:xsi=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd &lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/context &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/context/spring-context.xsd&lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/mvc &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/mvc/spring-mvc.xsd&lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/aop &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/aop/spring-aop.xsd&lt;/span&gt;&lt;span&gt;&quot;&amp;gt;&lt;/span&gt;

    &amp;lt;!-- 自动扫描的包名 --&amp;gt;
    &amp;lt;context:component-scan &lt;span&gt;base&lt;/span&gt;-package=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;com.cyw.web.Controller&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;

    &amp;lt;!-- 默认的注解映射的支持 --&amp;gt;
    
    &amp;lt;mvc:annotation-driven&amp;gt;
    
       &amp;lt;mvc:message-converters&amp;gt;
            &amp;lt;bean &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;org.springframework.http.converter.StringHttpMessageConverter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
            &amp;lt;&lt;span&gt;bean
                &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;org.springframework.http.converter.ResourceHttpMessageConverter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
        &amp;lt;/mvc:message-converters&amp;gt;
    &amp;lt;/mvc:annotation-driven&amp;gt;
    
    
    &amp;lt;!-- 视图解释类,定义跳转的文件的前后缀 --&amp;gt;
    &amp;lt;!-- &amp;lt;bean &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;org.springframework.web.servlet.view.InternalResourceViewResolver&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt; 
        &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;viewClass&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;org.springframework.web.servlet.view.JstlView&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; 
        /&amp;gt; &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/views/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt; &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;suffix&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.jsp&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; 
        /&amp;gt; &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;requestContextAttribute&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rc&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt; &amp;lt;/bean&amp;gt; --&amp;gt;
    &amp;lt;bean id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;viewResolver&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
        &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;org.springframework.web.servlet.view.InternalResourceViewResolver&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
        &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;viewClass&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
            value&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;org.springframework.web.servlet.view.JstlView&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
        &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/view/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
        &amp;lt;property name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;suffix&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.jsp&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;/bean&amp;gt;


    &amp;lt;!-- 拦截器 --&amp;gt;
    &amp;lt;!-- &amp;lt;mvc:interceptors&amp;gt; &amp;lt;bean &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;com.fpx.ce.foundation.preference.PreferenceChangeInterceptor&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; 
        /&amp;gt; &amp;lt;mvc:interceptor&amp;gt; &amp;lt;mvc:mapping path=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/page/home&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt; &amp;lt;bean &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;com.fpx.ce.foundation.user.UserInterceptor&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; 
        /&amp;gt; &amp;lt;/mvc:interceptor&amp;gt; &amp;lt;mvc:interceptor&amp;gt; &amp;lt;mvc:mapping path=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/service/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt; 
        &amp;lt;bean &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;com.fpx.ce.foundation.log.LogHandlerInterceptor&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt; &amp;lt;/mvc:interceptor&amp;gt; 
        &amp;lt;mvc:interceptor&amp;gt; &amp;lt;mvc:mapping path=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/test/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt; &amp;lt;mvc:mapping path=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/service/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; 
        /&amp;gt; &amp;lt;bean &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;com.lemon.finder.web.SharedRenderVariableInterceptor&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt; 
        &amp;lt;/mvc:interceptor&amp;gt; &amp;lt;/mvc:interceptors&amp;gt; --&amp;gt;


    &amp;lt;!-- 对静态资源文件的访问 方案一 （二选一） --&amp;gt;
    &amp;lt;mvc:&lt;span&gt;default&lt;/span&gt;-servlet-handler /&amp;gt;

    &amp;lt;!-- 对静态资源文件的访问 方案二 （二选一） --&amp;gt;
    &amp;lt;!-- &amp;lt;mvc:resources mapping=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/images/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; location=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/images/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; cache-period=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;31556926&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt; 
        &amp;lt;mvc:resources mapping=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/js/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; location=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/js/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; cache-period=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;31556926&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt; 
        &amp;lt;mvc:resources mapping=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/css/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; location=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/css/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; cache-period=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;31556926&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt; --&amp;gt;
&amp;lt;/beans&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;4.spring-content.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_1dc0dcf2-7670-459c-a1a8-8bd900a96aa7&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1dc0dcf2-7670-459c-a1a8-8bd900a96aa7&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1dc0dcf2-7670-459c-a1a8-8bd900a96aa7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; encoding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;beans xmlns=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/beans&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:xsi=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:mvc=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/mvc&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/context&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:tx=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/tx&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; xmlns:util=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/util&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/aop&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/mvc &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/mvc/spring-mvc.xsd&lt;/span&gt;    
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/context &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/context/spring-context.xsd&lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/util &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/util/spring-util.xsd&lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/tx &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/tx/spring-tx.xsd&lt;/span&gt;
        http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;www.springframework.org/schema/aop &lt;/span&gt;&lt;span&gt;http://www.springframework.org/schema/aop/spring-aop.xsd&lt;/span&gt;&lt;span&gt;&quot;&amp;gt;&lt;/span&gt;

    
    &amp;lt;!-- 注解注册 --&amp;gt;
      
    &amp;lt;context:annotation-config /&amp;gt;
    
    &amp;lt;context:component-scan &lt;span&gt;base&lt;/span&gt;-package=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;com.cyw.web.Controller&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
    
&amp;lt;/beans&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;5.创建Controller，添加注解，在上面的配置文件中也有注册注解。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_8fb92080-e860-4ec6-97eb-ab5dfd7f6e0e&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_8fb92080-e860-4ec6-97eb-ab5dfd7f6e0e&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_8fb92080-e860-4ec6-97eb-ab5dfd7f6e0e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package com.cyw.web.Controller;

import javax.servlet.http.HttpServletRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; IndexController {

    @RequestMapping(value&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/hello.do&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
   
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView getTest(HttpServletRequest request){
        ModelAndView modelAndView &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ModelAndView(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;HelloWorld&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; modelAndView;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;6.在webapp下创建view文件夹，然后在view下创建HelloWorld.jsp&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030223426199-1037750588.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;7.整个的项目结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030223523152-1604376332.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733213/201710/733213-20171030224219480-1992387405.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后要吐槽下，学习java真时麻烦，各种坑。&lt;/p&gt;

</description>
<pubDate>Mon, 30 Oct 2017 14:38:00 +0000</pubDate>
<dc:creator>社会主义接班人</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/5ishare/p/7703513.html</dc:identifier>
</item>
<item>
<title>SpringMVC的流程分析（一）—— 整体流程概括 - 周小小儿java</title>
<link>http://www.cnblogs.com/zcmzex/p/7738027.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zcmzex/p/7738027.html</guid>
<description>&lt;p&gt;之前也写过springmvc的流程分析，只是当时理解的还不透彻所以那篇文章就放弃了，现在比之前好了些，想着写下来分享下，也能增强记忆，也希望可以帮助到别人，如果文章中有什么错误的地方欢迎各位指出。（本文针对有一定的springmvc使用经验的it人员）。&lt;/p&gt;
&lt;h2&gt;1.springmvc存在的意义&lt;/h2&gt;
&lt;p&gt;　　任何一个框架都有其存在的价值，可以或多或少帮助我们解决一个繁琐的问题，springmvc也不例外，说白了其实他也没啥了不起，他就是个彻头彻尾的Servlet，&lt;/p&gt;
&lt;p&gt;一个封装许多任务的servlet，正是这些封装我们才感觉不到他单单是个servlet，因为他太厉害了，每个人在使用的时候应该都有过配置web.xml的经验，其中可以清晰的看到springmvc的配置，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/WEB-INF/classes/spring/spring-servlet.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　我们可以看到springmvc的配置就是一个servlet的配置，对所有的url进行拦截。所以我们可以总结springmvc的作用：作为一个总的servlet对客户端的请求进行分发，然后对不同的请求处理，并返回相应的数据。&lt;/p&gt;
&lt;h2&gt;2.springmvc的设计类图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1016414/201710/1016414-20171030212139058-1684200808.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;3.springmvc的入口&lt;/h2&gt;
&lt;p&gt;　　上图中黄色标识的DispatcherServlet就是sprigmvc请求的核心入口类，可以看到这类通过FrameworkServelt间接继承了HttpServletBean，FrameworkServelt实现了ApplicationContextAware，用来设置springmvc的全局上下文，当客户发送请求时会先进入DispatcherServlet的doService方法：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;protected void doService(HttpServletRequest request, HttpServletResponse response) throws Exception {
  
       //省略不重要代码。。。
        try {
            this.doDispatch(request, response);
        } finally {
            if (!WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted() &amp;amp;&amp;amp; attributesSnapshot1 != null) {
                this.restoreAttributesAfterInclude(request, attributesSnapshot1);
            }
        }

    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 　　其实是调用了&lt;em&gt;&lt;strong&gt;doDispatch&lt;/strong&gt;&lt;/em&gt;方法，这个方法十分重要，基本上对请求的所有处理都是在这个方法中完成的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;56&quot;&gt;
&lt;pre&gt;
&lt;span&gt;protected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {
        HttpServletRequest processedRequest = request;
        HandlerExecutionChain mappedHandler = null;
        boolean multipartRequestParsed = false;
        WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);

        try {
            try {
                ModelAndView err = null;
                Exception dispatchException = null;

                try {
                    processedRequest = this.checkMultipart(request);
                    multipartRequestParsed = processedRequest != request;
                    mappedHandler = this.getHandler(processedRequest);
                    if (mappedHandler == null || mappedHandler.getHandler() == null) {
                        this.noHandlerFound(processedRequest, response);
                        return;
                    }

                    HandlerAdapter ex = this.getHandlerAdapter(mappedHandler.getHandler());
                    String method = request.getMethod();
                    boolean isGet = &quot;GET&quot;.equals(method);
                    if (isGet || &quot;HEAD&quot;.equals(method)) {
                        long lastModified = ex.getLastModified(request, mappedHandler.getHandler());
                        if (this.logger.isDebugEnabled()) {
                            this.logger.debug(
                                    &quot;Last-Modified value for [&quot; + getRequestUri(request) + &quot;] is: &quot; + lastModified);
                        }

                        if ((new ServletWebRequest(request, response)).checkNotModified(lastModified) &amp;amp;&amp;amp; isGet) {
                            return;
                        }
                    }

                    if (!mappedHandler.applyPreHandle(processedRequest, response)) {
                        return;
                    }

                    err = ex.handle(processedRequest, response, mappedHandler.getHandler());
                    if (asyncManager.isConcurrentHandlingStarted()) {
                        return;
                    }

                    this.applyDefaultViewName(request, err);
                    mappedHandler.applyPostHandle(processedRequest, response, err);
                } catch (Exception arg18) {
                    dispatchException = arg18;
                }

                this.processDispatchResult(processedRequest, response, mappedHandler, err, dispatchException);
            } catch (Exception arg19) {
                this.triggerAfterCompletion(processedRequest, response, mappedHandler, arg19);
            } catch (Error arg20) {
                this.triggerAfterCompletionWithError(processedRequest, response, mappedHandler, arg20);
            }

        } finally {
            if (asyncManager.isConcurrentHandlingStarted()) {
                if (mappedHandler != null) {
                    mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);
                }
            } else if (multipartRequestParsed) {
                this.cleanupMultipart(processedRequest);
            }
　　　　　　　
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;首先一上来是检查是否是文件上传请求，（这个检查的目的是为了在finally中清除文件上传相应的信息），然后就是获取handler&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;  mappedHandler = this.getHandler(processedRequest);&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;　　什么是handler呢？其实handler是springmvc自己定义的一个处理具体请求的不同类的总称，我们知道客户端的请求有很多类型，例如静态资源的请求，动态资源的请求，restful风格的请求，也可能有原始servlet类型的请求，这些处理类的总称就是handler,具体如何得到handler我会另起一个章节讲解。好了，得到了hander（处理请求类）后我们是不是可以直接来处理请求了呢，就像这样：&lt;br/&gt;　　handler.methodname(request,response);&lt;br/&gt;其实还真是这样，哈哈，肯定是这样的呀，不过人家springmvc的设计者比咱们高明多了，才不会这么lou的写，好了，我们看看他们是怎么高明的吧：&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;  HandlerAdapter ex = this.getHandlerAdapter(mappedHandler.getHandler());&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;　　HandlerAdapter？这是什么鬼呀，怎么得到了handler怎么还在得到HandlerAdapter呢，其实这就是人家的高明之处了，这里使用了适配器设计模式，每一种handler都会有一个对应的适配器，这样子我们就不用每次都判断handler的类型，然后调用不同的方法了，举个例子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
class Handler1{&lt;br/&gt;　　Object handle1(HttpRequest request,HttpResponse response){&lt;br/&gt;　　　　&lt;br/&gt;　　}&lt;br/&gt;}
&lt;/pre&gt;
&lt;pre&gt;
class Handler2{&lt;br/&gt;　　Object handle2(HttpRequest request,HttpResponse response){&lt;br/&gt;　　　　&lt;br/&gt;　　}&lt;br/&gt;}
&lt;/pre&gt;
&lt;pre&gt;
class Handler3{&lt;br/&gt;　　Object handle3(HttpRequest request,HttpResponse response){&lt;br/&gt;　　　　&lt;br/&gt;　　}&lt;br/&gt;}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里有3个处理类，正常我们的调用是这样的：　　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
if (handle instanceof Handler1) {&lt;br/&gt;　　handle.handle1();&lt;br/&gt;}
&lt;/pre&gt;
&lt;pre&gt;
if (handle instanceof Handler2) {&lt;br/&gt;　　handle.handle2();&lt;br/&gt;}
&lt;/pre&gt;
&lt;pre&gt;
if (handle instanceof Handler3) {&lt;br/&gt;　　handle.handle3();&lt;br/&gt;}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　如果我们此时又多了一个Handler4怎么办，难道们需要更改Springmvc的源代码吗，这显然不符合代码设计的开闭原则，适配器模式就是解决这个问题的最好方式每一个处理器都要有一个对应的适配器，这样我们就可以不用更改源代码也能添加handler了。&lt;br/&gt;　　接下来我们看到&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt; err = ex.handle(processedRequest, response, mappedHandler.getHandler());&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;　　这个方法是请求的最终执行，不同类型的handler会有不同的实现，当处理器处理完各自的逻辑后都会放回一个ModelAndView参数，ModelAndView是springmvc对处理器返回的结果的抽象，不论处理器实际返回的是什么，Springmvc都会讲他包装成为ModelAndView，然后对ModelAndView进行处理，这里很有意思，也给我们一种启发，如果我们会得到很多不同的结果，我们可以将它抽象为一个统一的类型数据，然后针对这个类型的数据进行统一的处理，这样我们就可以不用针对每种情况后处理了。&lt;br/&gt;　　最后，Spingmvc会对ModelAndView进行处理，然后返回给浏览器。&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;span readability=&quot;6&quot;&gt; this.processDispatchResult(processedRequest, response, mappedHandler, err, dispatchException);&lt;p&gt;上面这个方法就是对ModelAndView的处理。至此，springmvc的大体流程就结束了。以上只是我对springmvc的一个整体概述，之后我还会讲解Springmvc的Handler,HandlerAdapter,视图处理，拦截器，异常处理等内容。&lt;/p&gt;&lt;/span&gt;
&lt;/pre&gt;

</description>
<pubDate>Mon, 30 Oct 2017 14:25:00 +0000</pubDate>
<dc:creator>周小小儿java</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zcmzex/p/7738027.html</dc:identifier>
</item>
<item>
<title>Spring Cloud官方文档中文版-Spring Cloud Config（下）-客户端等 - dreamingodd</title>
<link>http://www.cnblogs.com/dreamingodd/p/7757658.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dreamingodd/p/7757658.html</guid>
<description>&lt;p&gt;官方文档地址为：&lt;a href=&quot;http://cloud.spring.io/spring-cloud-static/Dalston.SR2/#_serving_alternative_formats&quot; target=&quot;_blank&quot;&gt;http://cloud.spring.io/spring-cloud-static/Dalston.SR2/#_serving_alternative_formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文中例子我做了一些测试在：&lt;a href=&quot;http://git.oschina.net/dreamingodd/spring-cloud-preparation&quot; target=&quot;_blank&quot;&gt;http://git.oschina.net/dreamingodd/spring-cloud-preparation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方项目：&lt;a href=&quot;https://github.com/spring-cloud-samples/config-repo&quot; target=&quot;_blank&quot;&gt;https://github.com/spring-cloud-samples/config-repo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;6serving-alternative-formats-提供替代格式&quot; data-source-line=&quot;1030&quot;&gt;6.提供替代格式&lt;/h2&gt;
&lt;p data-source-line=&quot;1031&quot;&gt;&lt;span&gt;由于Spring应用直接映射到环境抽象，来自环境链接的默认JSON格式完全适用于Spring应用的消费。如果愿意，开发人员可以通过给资源路径加上后缀的方式来使用YAML或Java属性来消费同样的数据。这对于不关心JSON链接返回结构的应用消费或其提供的额外元数据可能很有帮助，例如一个不使用Spring的应用就可以直接用这种方式。&lt;/span&gt;&lt;/p&gt;
&lt;p data-source-line=&quot;1040&quot;&gt;YAML和属性表示有一个额外的标识（作为布尔查询参数resolvePlaceholders提供）用于标记标准Spring ${}格式的源文件中的占位符，在渲染之前尽可能在输出中解析。对于不了解Spring占位符约定的消费者来说，这是一个有用的功能。&lt;/p&gt;
&lt;blockquote data-source-line=&quot;1042&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;注意&lt;/em&gt; 使用YAML或属性格式有一些限制，主要是与元数据的丢失有关。JSON格式是一个属性源的有序列表结构，例如，名称与源相关联。即使属性值有多个源，而且源属性文件的名称已丢失，YAML和属性表会合并成一个映射。YAML表示不必是后端仓库中YAML源的忠实表示：它由明文属性源的列表构成，而且必须对密钥的形式作出假设。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;7serving-plain-text-提供明文&quot; data-source-line=&quot;1045&quot;&gt;7.Serving Plain Text 提供明文&lt;/h2&gt;
&lt;p data-source-line=&quot;1050&quot;&gt;应用程序根据环境可能需要通用的纯文本配置文件，而不是环境抽象（或YAML中的其他替代表示或属性格式）。配置中心提供这些附属链接，/{name}/{profile}/{label}/{path}，其中的&quot;name&quot;,&quot;profile&quot;等的含义与常规环境链接相同，只有&quot;path&quot;是一个文件名(如log.xml)。此链接的源文件通过和环境链接同样的方式定位：与属性或YAML文件具有相同的搜索路径，但它只匹配符合的第一个，而不是聚合所有匹配的资源。&lt;/p&gt;
&lt;p data-source-line=&quot;1052&quot;&gt;当定位了一个源之后，有效环境中的普通格式(${...})的占位符解析为应用名称，profile和提供的label。资源链接和环境链接以这种方式紧密结合。例如，当存在这样的Git(或SVN)仓库：&lt;/p&gt;
&lt;p data-source-line=&quot;1054&quot;&gt;&lt;em&gt;application.yml&lt;/em&gt; &lt;em&gt;nginx.conf&lt;/em&gt;&lt;/p&gt;
&lt;p data-source-line=&quot;1057&quot;&gt;nginx.conf像这样:&lt;/p&gt;
&lt;pre data-source-line=&quot;1059&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;server {
    &lt;span class=&quot;hljs-title&quot;&gt;listen              &lt;span class=&quot;hljs-number&quot;&gt;80;
    &lt;span class=&quot;hljs-title&quot;&gt;server_name         &lt;span class=&quot;hljs-variable&quot;&gt;${nginx.server.name};
}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1063&quot;&gt;而application.yml像这样:&lt;/p&gt;
&lt;pre data-source-line=&quot;1065&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;nginx:
&lt;span class=&quot;hljs-code&quot;&gt;  server:
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1074&quot;&gt;然后/foo/default/master/nginx.conf resource像这样:&lt;/p&gt;
&lt;pre data-source-line=&quot;1076&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;server {
    &lt;span class=&quot;hljs-title&quot;&gt;listen              &lt;span class=&quot;hljs-number&quot;&gt;80;
    &lt;span class=&quot;hljs-title&quot;&gt;server_name         example.com;
}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1080&quot;&gt;而/foo/development/master/nginx.conf像这样:&lt;/p&gt;
&lt;pre data-source-line=&quot;1082&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;server {
    &lt;span class=&quot;hljs-title&quot;&gt;listen              &lt;span class=&quot;hljs-number&quot;&gt;80;
    &lt;span class=&quot;hljs-title&quot;&gt;server_name         develop.com;
}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote data-source-line=&quot;1090&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;注意&lt;/em&gt; 就像环境配置的源文件一样，&quot;profile&quot;是用来解析文件名的，因为如果开发人员需要一个靠profile指定的文件，那么/sth/development/sth/logback.xml将被解析为logback-development.xml（而不是logback.xml）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;8embedding-the-config-server-嵌入配置中心&quot; data-source-line=&quot;1093&quot;&gt;8. 嵌入配置中心&lt;/h2&gt;
&lt;p data-source-line=&quot;1096&quot;&gt;配置中心最好独立运行。但若需要嵌入其他应用，也只需要@EnableConfigServer注解。这种情况下，有一个可选属性-spring.cloud.config.server.bootstrap很有用，它是一个服务器是否从自己的远程仓库配置自己的标志。由于它拖慢启动，默认是关闭的，但当嵌入其他应用时，与其他应用一样初始化就说得通了。&lt;/p&gt;
&lt;blockquote data-source-line=&quot;1101&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;注意&lt;/em&gt; 很明显，记住如果使用bootstrap标志，配置中心将需要在bootstrap.yml配置其名称和仓库URI。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p data-source-line=&quot;1108&quot;&gt;可以设置spring.cloud.config.server.prefix-如&quot;/config&quot;，来修改服务器的链接地址，以为前缀下的资源提供服务。前缀应以&quot;/&quot;开始并不以&quot;/&quot;结束。适用于配置中心的@RequestMappings（即，在Spring Boot前面的server.servletPath和server.contextPath下）。&lt;/p&gt;
&lt;p data-source-line=&quot;1110&quot;&gt;如果需要直接从后端仓库（不是配置中心）给应用读取配置，这基本上就是一个没有对外链接的内嵌配置中心。不使用@EnableConfigServer注解就可以彻底关闭对外链接（设置spring.cloud.config.server.bootstrap=true）。&lt;/p&gt;
&lt;h2 id=&quot;9push-notifications-and-spring-cloud-bus-推送通知和spring-cloud-bus&quot; data-source-line=&quot;1112&quot;&gt;9.推送通知和Spring Cloud Bus&lt;/h2&gt;
&lt;p data-source-line=&quot;1119&quot;&gt;很多源代码仓库提供方（例如像Github，Gitlab或Bitbucket）都会通过webhook通知用户仓库的修改。开发人员可以通过提供方的用户接口来配置webhook，URL或一些感兴趣的事件。例如Github会使用包含一串commits的JSON格式POST到webhook，header中的&quot;X-Github-Event&quot;表示&quot;push&quot;。如果在spring-cloud-config-monitor库中加入依赖并在配置中心激活Spring Cloud Bus，那么&quot;/monitor&quot;链接就启用了。&lt;/p&gt;
&lt;p data-source-line=&quot;1121&quot;&gt;当webhook被激活时，配置中心会发送一个RefreshRemoteApplicationEvent事件，针对于它认为已经发生改变的应用。变更检测可以进行策略化，但默认它只查找与应用程序名称匹配的文件的更改（例如，&quot;foo.properties&quot;针对于&quot;foo&quot;应用，&quot;application.properties&quot;针对于所以应用）。如覆盖该行为的策略为PropertyPathNotificationExtractor，它接受请求头和主题作为参数并返回一个变更的文件路径列表。&lt;/p&gt;
&lt;p data-source-line=&quot;1123&quot;&gt;默认配置与Github，Gitlab以及Bitbucket都是开箱即用。除Github，Gitlab或Bitbucket的JSON通知之外，开发人员可以触发一个变更通知，通过使用form-encoded参数体path={name}POSTing到&quot;/monitor&quot;。这样做会向匹配&quot;{name}&quot;的应用发送广播（可以包含通配符）。&lt;/p&gt;
&lt;blockquote data-source-line=&quot;1131&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;注意&lt;/em&gt; 需要配置中心和客户端应用激活spring-cloud-bus才能传输RefreshRemoteApplicationEvent。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;1134&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;注意&lt;/em&gt; 本地Git仓库默认检测文件系统变更（这种情况下不使用webhook，但一旦修改了配置文件，会广播刷新事件）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;10spring-cloud-config-client-spring-cloud-config客户端&quot; data-source-line=&quot;1137&quot;&gt;10.Spring Cloud Config客户端&lt;/h2&gt;
&lt;p data-source-line=&quot;1140&quot;&gt;Spring Boot应用可以立即利用Spring Config服务端（或应用程序开发人员提供的其他外部属性源），并且还将获取与环境更改事件相关的一些其他有用功能。&lt;/p&gt;
&lt;h3 id=&quot;config-first-bootstrap-配置第一个bootstrap&quot; data-source-line=&quot;1142&quot;&gt;配置第一个Bootstrap&lt;/h3&gt;
&lt;p data-source-line=&quot;1145&quot;&gt;这是任何在classpath中存在Spring Cloud Config客户端的应用的默认行为。当配置客户端启动时，它将绑定配置中心（通过bootstrap配置属性spring.cloud.config.uri）并使用远程属性源初始化Spring环境。&lt;/p&gt;
&lt;p data-source-line=&quot;1149&quot;&gt;最终结果是所有希望消费配置中心的客户端应用都需要在bootstrap.yml（或环境变量）中存在一个服务器地址spring.cloud.config.uri（默认为&quot;&lt;a href=&quot;http://localhost:8888/&quot;&gt;http://localhost:8888&lt;/a&gt;&quot;）。&lt;/p&gt;
&lt;h3 id=&quot;discovery-first-bootstrap-发现第一个bootstrap&quot; data-source-line=&quot;1151&quot;&gt;发现第一个Bootstrap&lt;/h3&gt;
&lt;p data-source-line=&quot;1158&quot;&gt;如果使用DiscoveryClient实现，比如Spring Cloud Netflix和Eureka Service Discovery或者Spring Cloud Consul（Spring Cloud Zookeeper暂时不支持），那么可以按需将配置中心注册为Discovery Servcie，但是在默认的&quot;Config First&quot;模式中，客户端将不能利用这种注册。&lt;/p&gt;
&lt;p data-source-line=&quot;1160&quot;&gt;如果希望使用DiscoveryClient来定位配置中心，开发人员可以通过设置spring.cloud.config.discovery.enabled=true（默认false）来实现。最终结果是客户端应用需要相应的服务发现配置的bootstrap.yml（或环境变量）。例如，使用Spring Cloud Netflix，需要定义Eureka服务器地址，例如在eureka.client.serviceUrl.defaultZone。这样做的代价是启动时一个额外的网络往返开销去定位服务注册，好处是只要发现服务是一个固定点，配置中心可以改变坐标。默认的服务ID为&quot;configserver&quot;，开发人员可以通过spring.cloud.config.discovery.serviceId修改（在服务器上通常用spring.application.name修改）。&lt;/p&gt;
&lt;p data-source-line=&quot;1162&quot;&gt;服务发现客户端实现全都支持某种元数据映射（例如Eureka的eureka.instance.metadataMap）。配置中心可能需要在注册元数据中配置一些额外的属性以便客户端能正确连接。如果配置中心使用HTTP Basic安全配置服务器，则可以将凭据配置为&quot;username&quot;和&quot;password&quot;。而且配置中心修改&quot;confgPath&quot;来设置context path。例子，对于一个身为Eureka客户端的配置中心：&lt;/p&gt;
&lt;p data-source-line=&quot;1164&quot;&gt;&lt;em&gt;bootstrap.yml&lt;/em&gt;&lt;/p&gt;
&lt;pre data-source-line=&quot;1166&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;eureka:
  &lt;span class=&quot;hljs-attribute&quot;&gt;instance:
    ...
    &lt;span class=&quot;hljs-attribute&quot;&gt;metadataMap:
      &lt;span class=&quot;hljs-attribute&quot;&gt;user: osufhalskjrtl
      &lt;span class=&quot;hljs-attribute&quot;&gt;password: lviuhlszvaorhvlo5847
      &lt;span class=&quot;hljs-attribute&quot;&gt;configPath: /config&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;config-client-fail-fast-配置客户端快速失败&quot; data-source-line=&quot;1174&quot;&gt;配置客户端快速失败&lt;/h3&gt;
&lt;p data-source-line=&quot;1177&quot;&gt;某些情况下，如果客户端无法连接服务器，可能需要让启动失败。若需要这种行为，设置bootstrap配置属性spring.cloud.config.failFast=true，客户端就会停止并抛出异常。&lt;/p&gt;
&lt;h3 id=&quot;config-client-retry-配置客户端重试&quot; data-source-line=&quot;1179&quot;&gt;配置客户端重试&lt;/h3&gt;
&lt;p data-source-line=&quot;1182&quot;&gt;如果配置中心在应用启动时偶尔不可用，那么可以让应用在失败后进行重试。首先需要设置spring.cloud.config.failFast=true，然后需要将spring-retry和spring-boot-starter-aop加入classpath。默认会重试6次，初始间隔为1000ms，后续间隔指数为1.1。这些属性在spring.cloud.config.retry.*中设置。&lt;/p&gt;
&lt;blockquote data-source-line=&quot;1187&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;提示&lt;/em&gt; 完全控制重试功能，要添加一个类型为RetryOperationsInterceptor，id为&quot;configServerRetryInterceptor&quot;的Bean。Spring Retry提供了一个RetryInterceptorBuilder，可以轻松创建这个Bean。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;locating-remote-configuration-resources-定位远程配置资源&quot; data-source-line=&quot;1190&quot;&gt;Locating Remote Configuration Resources 定位远程配置资源&lt;/h3&gt;
&lt;p data-source-line=&quot;1193&quot;&gt;配置中心提供来自/{name}/{profile}/{label}的属性源，在客户端APP中默认绑定的是&lt;/p&gt;
&lt;ul data-source-line=&quot;1195&quot;&gt;&lt;li&gt;&quot;name&quot; = ${&lt;a href=&quot;http://spring.application.name/&quot;&gt;spring.application.name&lt;/a&gt;}&lt;/li&gt;
&lt;li&gt;&quot;profile&quot; = ${spring.profiles.active} (actually Environment.getActiveProfiles())&lt;/li&gt;
&lt;li&gt;&quot;label&quot; = &quot;master&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;p data-source-line=&quot;1201&quot;&gt;以上都可以设置spring.cloud.config.*（星号就是&quot;name&quot;,&quot;profile&quot;和&quot;label&quot;）来覆盖。&quot;label&quot;可以用来回滚到历史版本；使用默认的配置中心实现它可以是一个git label，branch名称或commit id。Label亦可用逗号分隔的列表形式提供，这种情况下列表值会一个一个试过来，直到成功为止。当在feature分支上工作时会比较有用，比方说，当开发人员需要将配置label和branch对齐时，同时又可选（例：spring.cloud.config.label=myfeature,develop）。&lt;/p&gt;
&lt;h3 id=&quot;security-安全性&quot; data-source-line=&quot;1203&quot;&gt;安全性&lt;/h3&gt;
&lt;p data-source-line=&quot;1206&quot;&gt;如果开发人员在服务端使用HTTP Basic安全，那么客户端只需要知道密码（用户名不是默认的话也需要）。开发人员可以通过config server URI或分离用户名和密码属性来实现，例：&lt;/p&gt;
&lt;p data-source-line=&quot;1208&quot;&gt;&lt;em&gt;bootstrap.yml&lt;/em&gt;&lt;/p&gt;
&lt;pre data-source-line=&quot;1210&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;spring:
  &lt;span class=&quot;hljs-attribute&quot;&gt;cloud:
    &lt;span class=&quot;hljs-attribute&quot;&gt;config:
      &lt;span class=&quot;hljs-attribute&quot;&gt;uri: &lt;span class=&quot;hljs-attribute&quot;&gt;https:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1214&quot;&gt;or&lt;/p&gt;
&lt;p data-source-line=&quot;1216&quot;&gt;&lt;em&gt;bootstrap.yml&lt;/em&gt;&lt;/p&gt;
&lt;pre data-source-line=&quot;1218&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;spring:
  &lt;span class=&quot;hljs-attribute&quot;&gt;cloud:
    &lt;span class=&quot;hljs-attribute&quot;&gt;config:
      &lt;span class=&quot;hljs-attribute&quot;&gt;uri: &lt;span class=&quot;hljs-attribute&quot;&gt;https:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1229&quot;&gt;spring.cloud.config.password和spring.cloud.config.username这两个属性值会覆盖任何URI提供的属性。&lt;/p&gt;
&lt;p data-source-line=&quot;1231&quot;&gt;如果在Cloud Foundry开发APP的话，最好的方式是通过服务凭据来提供密码，比如在URI中，这样它甚至不需要在配置文件中存在。下面是一个在Cloud Foundry上用户提供的服务，本地运行，名为&quot;configserver&quot;：&lt;/p&gt;
&lt;p data-source-line=&quot;1233&quot;&gt;&lt;em&gt;bootstrap.yml&lt;/em&gt;&lt;/p&gt;
&lt;pre data-source-line=&quot;1235&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;spring:
&lt;span class=&quot;hljs-label&quot;&gt;  cloud:
&lt;span class=&quot;hljs-label&quot;&gt;    config:
&lt;span class=&quot;hljs-label&quot;&gt;      uri: ${vcap.services.configserver.credentials.&lt;span class=&quot;hljs-string&quot;&gt;uri:&lt;span class=&quot;hljs-string&quot;&gt;http:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1242&quot;&gt;如果开发人员使用其他安全方式，可能就需要提供一个到ConfigServicePropertySourceLocator的RestTemplate(例：在bootstrap上下文中获取并注入一个)。&lt;/p&gt;
&lt;h3 id=&quot;health-indicator-健康指标-2&quot; data-source-line=&quot;1244&quot;&gt;Health Indicator 健康指标&lt;/h3&gt;
&lt;p data-source-line=&quot;1247&quot;&gt;客户端支持Spring Boot的健康指标。不过也可以通过health.config.enabled=false来禁用。因为性能原因响应会被存到缓存。默认缓存生存5分钟。health.config.time-to-live属性可以修改。&lt;/p&gt;
&lt;h3 id=&quot;providing-a-custom-resttemplate-提供一个自定义的resttemplate&quot; data-source-line=&quot;1249&quot;&gt;提供一个自定义的RestTemplate&lt;/h3&gt;
&lt;p data-source-line=&quot;1252&quot;&gt;某些情况下，可以会需要自定义请求从客户端发送到配置中心。通常这涉及传递特殊的授权头来验证发送到服务端的请求。提供自定义的RestTemplate请按照以下步骤。&lt;/p&gt;
&lt;p data-source-line=&quot;1256&quot;&gt;1.创建一个PropertySourceLocator实现的Bean。&lt;/p&gt;
&lt;p data-source-line=&quot;1258&quot;&gt;&lt;em&gt;CustomConfigServiceBootstrapConfiguration.java&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Configuration
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomConfigServiceBootstrapConfiguration {
    @Bean
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ConfigServicePropertySourceLocator configServicePropertySourceLocator() {
        ConfigClientProperties clientProperties &lt;/span&gt;=&lt;span&gt; configClientProperties();
       ConfigServicePropertySourceLocator configServicePropertySourceLocator &lt;/span&gt;=  &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConfigServicePropertySourceLocator(clientProperties);
        configServicePropertySourceLocator.setRestTemplate(customRestTemplate(clientProperties));
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; configServicePropertySourceLocator;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p data-source-line=&quot;1273&quot;&gt;2.在resources/META-INF中创建一个spring.factories指定自定义配置类。&lt;/p&gt;
&lt;p data-source-line=&quot;1275&quot;&gt;&lt;em&gt;spring.factories&lt;/em&gt;&lt;/p&gt;
&lt;pre data-source-line=&quot;1277&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;org&lt;span class=&quot;hljs-class&quot;&gt;.springframework&lt;span class=&quot;hljs-class&quot;&gt;.cloud&lt;span class=&quot;hljs-class&quot;&gt;.bootstrap&lt;span class=&quot;hljs-class&quot;&gt;.BootstrapConfiguration = com&lt;span class=&quot;hljs-class&quot;&gt;.my&lt;span class=&quot;hljs-class&quot;&gt;.config&lt;span class=&quot;hljs-class&quot;&gt;.client&lt;span class=&quot;hljs-class&quot;&gt;.CustomConfigServiceBootstrapConfiguration&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;vault&quot; data-source-line=&quot;1280&quot;&gt;Vault&lt;/h4&gt;
&lt;p data-source-line=&quot;1283&quot;&gt;当使用Vault作为配置中心的后端时，客户端需要提供令牌来向Vault获取数据。这个令牌是通过设置bootstrap.yml中的spring.cloud.config.token来提供的。&lt;/p&gt;
&lt;p data-source-line=&quot;1285&quot;&gt;&lt;em&gt;bootstrap.yml&lt;/em&gt;&lt;/p&gt;
&lt;pre data-source-line=&quot;1287&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;spring:
  &lt;span class=&quot;hljs-attribute&quot;&gt;cloud:
    &lt;span class=&quot;hljs-attribute&quot;&gt;config:
      &lt;span class=&quot;hljs-attribute&quot;&gt;token: YourVaultToken&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;vault-2&quot; data-source-line=&quot;1292&quot;&gt;Vault&lt;/h3&gt;
&lt;h4 id=&quot;nested-keys-in-vault-在vault中嵌入密钥&quot; data-source-line=&quot;1293&quot;&gt;在Vault中嵌入密钥&lt;/h4&gt;
&lt;p data-source-line=&quot;1296&quot;&gt;Vault提供了将密钥嵌入存储值的功能。例如&lt;/p&gt;
&lt;pre data-source-line=&quot;1298&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;echo -n '{&lt;span class=&quot;hljs-string&quot;&gt;&quot;appA&quot;: {&lt;span class=&quot;hljs-string&quot;&gt;&quot;secret&quot;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;appAsecret&quot;}, &lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;}' &lt;span class=&quot;hljs-string&quot;&gt;| vault write secret/myapp -&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1302&quot;&gt;此命令会将一个JSON对象写入Vault中。Spring访问这些值需要使用传统的点(.)注解。例如&lt;/p&gt;
&lt;pre data-source-line=&quot;1304&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-annotation&quot;&gt;@Value(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;${appA.secret}&quot;)
&lt;span class=&quot;hljs-built_in&quot;&gt;String name = &lt;span class=&quot;hljs-string&quot;&gt;&quot;World&quot;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;1308&quot;&gt;上述代码将name变量设置为appAsecret。&lt;/p&gt;
&lt;p data-source-line=&quot;1308&quot;&gt; &lt;/p&gt;
&lt;pre data-source-line=&quot;610&quot;&gt;
&lt;strong&gt;dreamingodd原创文章，如转载请注明出处。&lt;/strong&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 30 Oct 2017 13:39:00 +0000</pubDate>
<dc:creator>dreamingodd</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dreamingodd/p/7757658.html</dc:identifier>
</item>
<item>
<title>Linux上安装二进制文件MySQL详解 - 前程明亮</title>
<link>http://www.cnblogs.com/0zcl/p/7752306.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/0zcl/p/7752306.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;前言：&lt;/span&gt;&lt;/strong&gt;昨天晚上搞了很久，终于搞清楚mysql的安装配置了，我真是太low了。当我在云服务器上登进Mysql时，真是高兴哈哈，咱一步一步来，彻底搞懂Mysql的安装配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我的安装环境: 阿里云服务器&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&lt;span&gt;[root@iz2zeezp920l8adg8sf0pz ~]# cat /etc/redhat-release 
CentOS Linux release 7.3.1611 (Core) 
[root@iz2zeezp920l8adg8sf0pz ~]#&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;一、下载二进制包&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;访问官网，无论学习啥工具，官方文档是最有学习价值的。现在用谷哥翻译英文网页成中文，也基本能看懂的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1038183/201710/1038183-20171030113526855-598002067.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为商用版本需要付费的，所以我下载的是MySQL社区版(免费)。点击之后出现下图，再点击MySQL社区下载，下载MySQL服务器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1038183/201710/1038183-20171030114004527-61387048.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;MySQL社区版是世界上最流行的开源数据库的免费下载版本，由开源开发人员和爱好者的活跃社区支持。上方的&lt;a id=&quot;upcoming&quot; class=&quot;ui-tabs-anchor&quot; tabindex=&quot;-1&quot; href=&quot;https://dev.mysql.com/downloads/mysql/8.0.html&quot;&gt;Development Releases&lt;/a&gt;(发展版)意思是正在开发测试中的版本，就不要下载了。下载已经发布的版本。操作系统我是云服务器，所以下载的的&lt;span&gt;Linux-Generic&lt;/span&gt;(Linux-通用)版本。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1038183/201710/1038183-20171030115758058-1295985672.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我的&lt;span&gt;服务器版本是64位&lt;/span&gt;的，点击下载：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1038183/201710/1038183-20171030115509636-1148604165.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;二、上传安装包至服务器&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt; 下载成功后，进入/usr/local/目录，将安装包上传至云服务器：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz local]# rz
rz waiting to receive.
 zmodem trl+C ȡ

  100%  626100 KB  465 KB/s 00:22:24       0 Errorsbc2.12-x86_64.tar.gz...

[root@iz2zeezp920l8adg80sf0pz local]# ls
mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz
[root@iz2zeezp920l8adg80sf0pz local]#&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;借助securtCRT(我是用CRT，你也可以用xshell)，使用linux命令sz可以很方便的将服务器上的文件下载到本地，使用rz命令则是把本地文件上传到服务器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中，对于sz和rz的理解与记忆我用了如下的方法（因为很多时候容易搞混）：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;sz中的s意为send（发送），告诉客户端，我（服务器）要发送文件 send to cilent，就等同于客户端在下载。&lt;/li&gt;
&lt;li&gt;rz中的r意为received（接收），告诉客户端，我（服务器）要接收文件 received by cilent，就等同于客户端在上传。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;注意：sz和rz命令需要服务器支持,如果提示没有个命令：则需要&lt;span&gt;先安装rzsz&lt;/span&gt;。如下:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz tools]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; yum install lrzsz -y&lt;/span&gt;
&lt;span&gt;Loaded plugins: fastestmirror
Loading mirror speeds &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; cached hostfile
Resolving Dependencies
&lt;/span&gt;--&amp;gt;&lt;span&gt; Running transaction check
&lt;/span&gt;---&amp;gt; Package lrzsz.x86_64 0:0.12.20-36&lt;span&gt;.el7 will be installed
&lt;/span&gt;--&amp;gt; Finished Dependency Resolution&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;三、查看官方文档&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;官方文档: &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html&quot; target=&quot;_blank&quot;&gt;https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Important(英文)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;itemizedlist&quot;&gt;
&lt;ul class=&quot;itemizedlist&quot; readability=&quot;5&quot;&gt;&lt;li class=&quot;listitem&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;span&gt;MySQL has a dependency on the &lt;code class=&quot;literal&quot;&gt;libaio&lt;/code&gt; library. Data directory initialization and subsequent server startup steps will fail if this library is not installed locally. If necessary, install it using the appropriate package manager. For example, on Yum-based systems:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;copytoclipboard-wrapper&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
shell&amp;gt; yum search libaio  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; search for info&lt;/span&gt;
shell&amp;gt; yum install libaio &lt;span&gt;#&lt;/span&gt;&lt;span&gt; install library&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Or, on APT-based systems:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;copytoclipboard-wrapper&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
shell&amp;gt; apt-cache search libaio &lt;span&gt;#&lt;/span&gt;&lt;span&gt; search for info&lt;/span&gt;
shell&amp;gt; apt-get install libaio1 &lt;span&gt;#&lt;/span&gt;&lt;span&gt; install library&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class=&quot;listitem&quot; readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;span class=&quot;emphasis&quot;&gt;&lt;em&gt;For MySQL 5.7.19 and later:&lt;/em&gt; Support for Non-Uniform Memory Access (NUMA) has been added to the generic Linux build, which has a dependency now on the &lt;code class=&quot;literal&quot;&gt;libnuma&lt;/code&gt; library; if the library has not been installed on your system, use you system's package manager to search for and install it (see the last bullet for some sample commands).&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;To install a compressed &lt;span class=&quot;command&quot;&gt;&lt;strong&gt;tar&lt;/strong&gt; file binary distribution, unpack it at the installation location you choose (typically &lt;code class=&quot;filename&quot;&gt;/usr/local/mysql&lt;/code&gt;). This creates the directories shown in the following table.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;table&quot; readability=&quot;6.8849315068493&quot;&gt;
&lt;p class=&quot;title&quot;&gt;&lt;strong&gt;Table 2.3 MySQL Installation Layout for Generic Unix/Linux Binary Package&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;table-contents&quot;&gt;
&lt;table class=&quot;table&quot; summary=&quot;MySQL Installation Layout for Generic Unix/Linux Binary Package&quot; border=&quot;1&quot;&gt;&lt;colgroup data-filtered=&quot;filtered&quot;&gt;&lt;col data-filtered=&quot;filtered&quot;/&gt;&lt;col data-filtered=&quot;filtered&quot;/&gt;&lt;/colgroup&gt;&lt;thead&gt;&lt;tr&gt;&lt;th scope=&quot;col&quot;&gt;Directory&lt;/th&gt;
&lt;th scope=&quot;col&quot;&gt;Contents of Directory&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5.3715953307393&quot;&gt;&lt;tr readability=&quot;2.6170212765957&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;link&quot; title=&quot;4.3.1 mysqld — The MySQL Server&quot; href=&quot;https://dev.mysql.com/doc/refman/5.7/en/mysqld.html&quot;&gt;&lt;span class=&quot;command&quot;&gt;&lt;strong&gt;mysqld&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt; server, client and utility programs&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;docs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MySQL manual in Info format&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;man&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Unix manual pages&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;include&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Include (header) files&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;lib&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Libraries&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;share&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Error messages, dictionary, and SQL for database installation&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;literal&quot;&gt;support-files&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Miscellaneous support files&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;重要(中文)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;itemizedlist&quot;&gt;
&lt;ul class=&quot;itemizedlist&quot; readability=&quot;2.5&quot;&gt;&lt;li class=&quot;listitem&quot; readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;span&gt;MySQL依赖于&lt;code class=&quot;literal&quot;&gt;libaio&lt;/code&gt; 库。如果此库未在本地安装，则数据目录初始化和后续服务器启动步骤将失败。如有必要，请使用相应的软件包管理器进行安装。例如，基于Yum的系统：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;copytoclipboard-wrapper&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
shell&amp;gt; yum search libaio  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; search for info&lt;/span&gt;
shell&amp;gt; yum install libaio &lt;span&gt;#&lt;/span&gt;&lt;span&gt; install library&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;或者，在基于APT的系统上：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;copytoclipboard-wrapper&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
shell&amp;gt; apt-cache search libaio &lt;span&gt;#&lt;/span&gt;&lt;span&gt; search for info&lt;/span&gt;
shell&amp;gt; apt-get install libaio1 &lt;span&gt;#&lt;/span&gt;&lt;span&gt; install library&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class=&quot;listitem&quot; readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span class=&quot;emphasis&quot;&gt;对于MySQL 5.7.19及更高版本&lt;em&gt;：&lt;/em&gt;支持非均匀内存访问（NUMA）已​​被添加到通用Linux构建中，该构建现在&lt;span&gt;依赖于&lt;code class=&quot;literal&quot;&gt;libnuma&lt;/code&gt; &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;emphasis&quot;&gt;&lt;span&gt;库; 如果您的系统上没有安装库，请使用系统的软件包管理器来搜索并安装&lt;/span&gt;它（有关示例命令，请参阅最后一个项目符号）。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;要安装压缩的&lt;/span&gt;&lt;span class=&quot;command&quot;&gt;&lt;span&gt;&lt;strong&gt;tar&lt;/strong&gt;文件二进制版本，请在您选择的安装位置（通常&lt;code class=&quot;filename&quot;&gt;/usr/local/mysql&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）将其解压缩&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;这将创建下表中显示的目录。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;table&quot; readability=&quot;6.8649517684887&quot;&gt;
&lt;p class=&quot;title&quot;&gt;&lt;strong&gt;表2.3通用Unix / Linux二进制包的MySQL安装布局&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;table-contents&quot;&gt;
&lt;table class=&quot;table&quot; summary=&quot;MySQL Installation Layout for Generic Unix/Linux Binary Package&quot; border=&quot;1&quot;&gt;&lt;colgroup&gt;&lt;col/&gt;&lt;col/&gt;&lt;/colgroup&gt;&lt;thead&gt;&lt;tr&gt;&lt;th scope=&quot;col&quot;&gt;&lt;span&gt;目录&lt;/span&gt;&lt;/th&gt;
&lt;th scope=&quot;col&quot;&gt;&lt;span&gt;目录内容&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;2.9230769230769&quot;&gt;&lt;tr readability=&quot;1.7391304347826&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;link&quot; title=&quot;4.3.1 mysqld - MySQL服务器&quot; href=&quot;https://dev.mysql.com/doc/refman/5.7/en/mysqld.html&quot;&gt;&lt;span class=&quot;command&quot;&gt;&lt;strong&gt;mysqld&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;服务器，客户端和实用程序&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;docs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;信息格式的MySQL手册&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;man&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Unix手册页&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;include&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;包含（标题）文件&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;lib&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;图书馆&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;filename&quot;&gt;share&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;用于数据库安装的错误消息，字典和SQL&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td scope=&quot;row&quot;&gt;&lt;code class=&quot;literal&quot;&gt;support-files&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;其他支持文件&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;由于我下载的是最新版的mysql，根据官方文档，我需要先安装&lt;em class=&quot;replaceable&quot;&gt;libaio&lt;/em&gt;。那就安装呗，反正很简单，官网也写得很清楚。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;四、解压前配置&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;先看官方文档是怎样说的:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;要安装和使用MySQL二进制分发，命令序列如下所示：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
shell&amp;gt;&lt;span&gt; groupadd mysql
shell&lt;/span&gt;&amp;gt; useradd -r -g mysql -s /bin/&lt;span&gt;false mysql
shell&lt;/span&gt;&amp;gt; cd /usr/&lt;span&gt;local
shell&lt;/span&gt;&amp;gt; tar zxvf /path/to/mysql-VERSION-&lt;span&gt;OS.tar.gz
shell&lt;/span&gt;&amp;gt; ln -s full-path-to-mysql-VERSION-&lt;span&gt;OS mysql
shell&lt;/span&gt;&amp;gt;&lt;span&gt; cd mysql
shell&lt;/span&gt;&amp;gt; mkdir mysql-&lt;span&gt;files
shell&lt;/span&gt;&amp;gt; chown mysql:mysql mysql-&lt;span&gt;files
shell&lt;/span&gt;&amp;gt; chmod 750 mysql-&lt;span&gt;files
shell&lt;/span&gt;&amp;gt; bin/mysqld --initialize --user=&lt;span&gt;mysql 
shell&lt;/span&gt;&amp;gt; bin/&lt;span&gt;mysql_ssl_rsa_setup
shell&lt;/span&gt;&amp;gt; bin/mysqld_safe --user=mysql &amp;amp;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Next command is optional&lt;/span&gt;
shell&amp;gt; cp support-files/mysql.server /etc/init.d/mysql.server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Note&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;This procedure &lt;span&gt;assumes that you have &lt;code class=&quot;literal&quot;&gt;root&lt;/code&gt; (administrator) access to your system&lt;/span&gt;.(此过程假定您具有&lt;code class=&quot;literal&quot;&gt;root&lt;/code&gt; 访问您的系统) Alternatively, you can prefix each command using the &lt;span class=&quot;command&quot;&gt;&lt;strong&gt;sudo&lt;/strong&gt; (Linux) or &lt;span class=&quot;command&quot;&gt;&lt;strong&gt;pfexec&lt;/strong&gt; (Solaris) command.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;The &lt;span&gt;&lt;code class=&quot;filename&quot;&gt;mysql-files&lt;/code&gt; directory&lt;/span&gt; provides a convenient location to use as the value for the &lt;code class=&quot;literal&quot;&gt;secure_file_priv&lt;/code&gt; system variable, w&lt;span&gt;hich limits import and export operations to a specific directory&lt;/span&gt;.(将导入和导出操作限制到特定目录) See &lt;a class=&quot;xref&quot; title=&quot;5.1.5 Server System Variables&quot; href=&quot;https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html&quot;&gt;Section 5.1.5, “Server System Variables”&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上面的知识点挺多的，如果你已经有安装经验，那对你很有用。对于我这种小白来说，并不是很友好，就算命令执行了，那命令执行的具体操作，又是否明白呢？接下来一步一步说明&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;五、步骤详解&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;shell&amp;gt;&lt;span&gt; groupadd mysql
shell&lt;/span&gt;&amp;gt; useradd -r -g mysql -s /bin/false mysql&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;note&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;因为用户仅仅是为了所有权需要而不是登录目的，所以&lt;span class=&quot;command&quot;&gt;&lt;span&gt;&lt;strong&gt;useradd&lt;/strong&gt;命令使用 &lt;code class=&quot;option&quot;&gt;-r&lt;/code&gt;和&lt;code class=&quot;option&quot;&gt;-s /bin/false&lt;/code&gt;选项来创建一个不具有对服务器主机的登录权限的用户&lt;/span&gt;。如果您的&lt;span class=&quot;command&quot;&gt;&lt;strong&gt;useradd&lt;/strong&gt;不支持这些选项，请忽略这些选项。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;1、接下来，创建一个到&lt;span class=&quot;command&quot;&gt;&lt;strong&gt;tar&lt;/strong&gt;创建的安装目录的符号链接：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz local]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; tar zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz local]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ln -s mysql-5.7.20-linux-glibc2.12-x86_64 mysql&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;该&lt;code class=&quot;literal&quot;&gt;ln&lt;/code&gt;命令创建一个到安装目录的符号链接。这使您&lt;span&gt;能够更容易地将其引用为&lt;/span&gt;&lt;span&gt;&lt;code class=&quot;filename&quot;&gt;/usr/local/mysql&lt;/code&gt;&lt;/span&gt;。为避免在使用MySQL时始终键入客户端程序的路径名，您可以将该&lt;span&gt;&lt;code class=&quot;filename&quot;&gt;/usr/local/mysql/bin&lt;/code&gt; 目录添加到&lt;code class=&quot;literal&quot;&gt;PATH&lt;/code&gt;&lt;/span&gt;&lt;span&gt;变量&lt;/span&gt;中(当然，当你重新登入系统时，发现PATH变量的更改又变为原来的!! 如何永久更改PATH变量呢？后面再讲)：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&lt;span&gt;shell&amp;gt; export PATH=$PATH:/usr/local/mysql/bin
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;2、在mysql目录下创建mysql-files目录：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz local]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cd mysql&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mkdir mysql-files  # 默认是没有这个文件夹的，用来放数据，当然网上很多人是用data目录，我这里为了保持与官网一致，用mysql-files&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; chown mysql:mysql mysql-files&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; chmod 750 mysql-files  # 添加权限&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ll | grep &quot;mysql-files&quot;&lt;/span&gt;
&lt;span&gt;drwxr-x---&lt;/span&gt;  5 mysql mysql  4096 Oct 30 00:24 mysql-&lt;span&gt;files
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;3、初始化:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/mysql-files&lt;/span&gt;
2017-10-29T16:05:31.856327Z 0 [Warning] TIMESTAMP with implicit DEFAULT value &lt;span&gt;is&lt;/span&gt; deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation &lt;span&gt;for&lt;/span&gt;&lt;span&gt; more details).
&lt;/span&gt;2017-10-29T16:05:33.906980Z 0 [Warning] InnoDB: New log files created, LSN=45790
2017-10-29T16:05:34&lt;span&gt;.133920Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
&lt;/span&gt;2017-10-29T16:05:34.249408Z 0 [Warning] No existing UUID has been found, so we assume that this &lt;span&gt;is&lt;/span&gt; the first time that this server has been started. Generating a new UUID: fecb2929-bcc2-11e7-b26d-00163e062422&lt;span&gt;.
&lt;/span&gt;2017-10-29T16:05:34.251580Z 0 [Warning] Gtid table &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; ready to be used. Table &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mysql.gtid_executed&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; cannot be opened.
&lt;/span&gt;2017-10-29T16:05:34.252052Z 1 [Note] A temporary password &lt;span&gt;is&lt;/span&gt; generated &lt;span&gt;for&lt;/span&gt; root@localhost: y&lt;span&gt;#&lt;/span&gt;&lt;span&gt;cee=T_v6B9&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;此处需要注意记录生成的&lt;span&gt;临时密码，之后登陆数据库会用到&lt;/span&gt;，如上文：y#cee=T_v6B9&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;4、修改系统配置文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;将support-files文件夹下的my-default.cnf，mysql.server复制到/etc和/etc/init.d下（最新版已经没有my-default.cnf文件，可以自己按格式建立一个）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cd support-files/&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz support-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ls&lt;/span&gt;
&lt;span&gt;magic           mysqld_multi.server  mysql.server
my&lt;/span&gt;-default.cnf  mysql-log-rotate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这个是时候我们自己创建一个(内部代码如图)： 重点下面两个socket（红色）对应的值必须一致，不然启动以后链接不上(参考自:&lt;a href=&quot;http://www.cnblogs.com/fengyun1853/p/7441791.html)&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/fengyun1853/p/7441791.html)&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;dvice on how to change settings please see&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; *** DO NOT EDIT THIS FILE. It's a template which will be copied to the&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; *** default location during install, and will be replaced if you&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; *** upgrade to a newer version of MySQL.&lt;/span&gt;
&lt;span&gt;
[mysqld]

sql_mode&lt;/span&gt;=&lt;span&gt;NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 一般配置选项&lt;/span&gt;
basedir = /usr/local/&lt;span&gt;mysql
datadir &lt;/span&gt;= /usr/local/mysql/mysql-&lt;span&gt;files
port &lt;/span&gt;= 3306
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;socket = /temp/mysqld.sock&lt;/span&gt;
&lt;span&gt;socket = /var/run/mysqld/&lt;/span&gt;&lt;span&gt;&lt;span&gt;mysqld.sock&lt;/span&gt;
character&lt;/span&gt;-set-server=&lt;span&gt;utf8


&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;下面是可选项，要不要都行，如果出现启动错误，则全部注释掉，保留最基本的配置选项，然后尝试添加某些配置项后启动，检测配置项是否有误&lt;/span&gt;
back_log = 300&lt;span&gt;
max_connections &lt;/span&gt;= 3000&lt;span&gt;
max_connect_errors &lt;/span&gt;= 50&lt;span&gt;
table_open_cache &lt;/span&gt;= 4096&lt;span&gt;
max_allowed_packet &lt;/span&gt;=&lt;span&gt; 32M
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;binlog_cache_size = 4M&lt;/span&gt;
&lt;span&gt;
max_heap_table_size &lt;/span&gt;=&lt;span&gt; 128M
read_rnd_buffer_size &lt;/span&gt;=&lt;span&gt; 16M
sort_buffer_size &lt;/span&gt;=&lt;span&gt; 16M
join_buffer_size &lt;/span&gt;=&lt;span&gt; 16M
thread_cache_size &lt;/span&gt;= 16&lt;span&gt;
query_cache_size &lt;/span&gt;=&lt;span&gt; 128M
query_cache_limit &lt;/span&gt;=&lt;span&gt; 4M
ft_min_word_len &lt;/span&gt;= 8&lt;span&gt;

thread_stack &lt;/span&gt;=&lt;span&gt; 512K
transaction_isolation &lt;/span&gt;= REPEATABLE-&lt;span&gt;READ
tmp_table_size &lt;/span&gt;=&lt;span&gt; 128M
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;log-bin=mysql-bin&lt;/span&gt;
long_query_time = 6&lt;span&gt;


server_id&lt;/span&gt;=1&lt;span&gt;

innodb_buffer_pool_size &lt;/span&gt;=&lt;span&gt; 1G
innodb_thread_concurrency &lt;/span&gt;= 16&lt;span&gt;
innodb_log_buffer_size &lt;/span&gt;=&lt;span&gt; 16M


innodb_log_file_size &lt;/span&gt;=&lt;span&gt; 512M
innodb_log_files_in_group &lt;/span&gt;= 3&lt;span&gt;
innodb_max_dirty_pages_pct &lt;/span&gt;= 90&lt;span&gt;
innodb_lock_wait_timeout &lt;/span&gt;= 120&lt;span&gt;
innodb_file_per_table &lt;/span&gt;=&lt;span&gt; on

[mysqldump]
quick

max_allowed_packet &lt;/span&gt;=&lt;span&gt; 32M

[mysql]
no&lt;/span&gt;-auto-&lt;span&gt;rehash
&lt;span&gt;socket &lt;/span&gt;&lt;/span&gt;&lt;span&gt;= /var/run/mysqld/&lt;/span&gt;&lt;span&gt;&lt;span&gt;mysqld.sock&lt;/span&gt;
default&lt;/span&gt;-character-set=&lt;span&gt;utf8
safe&lt;/span&gt;-&lt;span&gt;updates


[myisamchk]
key_buffer &lt;/span&gt;=&lt;span&gt; 16M
sort_buffer_size &lt;/span&gt;=&lt;span&gt; 16M
read_buffer &lt;/span&gt;=&lt;span&gt; 8M
write_buffer &lt;/span&gt;=&lt;span&gt; 8M

[mysqlhotcopy]
interactive&lt;/span&gt;-&lt;span&gt;timeout

[mysqld_safe]
open&lt;/span&gt;-files-limit = 8192&lt;span&gt;

[client]
loose&lt;/span&gt;-default-character-set = utf8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;查看安装路径与数据路径:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz support-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cat my-default.cnf | grep &quot;basedir&quot;&lt;/span&gt;
basedir = /usr/local/&lt;span&gt;mysql
[root@iz2zeezp920l8adg80sf0pz support&lt;/span&gt;-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cat my-default.cnf | grep &quot;datadir&quot;&lt;/span&gt;
datadir = /usr/local/mysql/mysql-&lt;span&gt;files
[root@iz2zeezp920l8adg80sf0pz support&lt;/span&gt;-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cp my-default.cnf /etc/my.cnf&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz support-files]&lt;span&gt;#
&lt;/span&gt;[root@iz2zeezp920l8adg80sf0pz support-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cp mysql.server /etc/init.d/mysql&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;5、修改配置文件:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz support-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; vim /etc/init.d/mysql&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;basedir='/usr/local/mysql'&lt;/span&gt;&lt;br/&gt;&lt;span&gt;datadir='/usr/local/mysql/mysql-files'&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;注意&lt;span&gt;必须得加引号&lt;/span&gt;!!不然会出错的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;6、启动服务：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz support-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ../bin/mysqld_safe --user=mysql &amp;amp;&lt;/span&gt;
[1] 29215&lt;span&gt;
[root@iz2zeezp920l8adg80sf0pz support&lt;/span&gt;-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Logging to '/usr/local/mysql/mysql-files/iz2zeezp920l8adg80sf0pz.err'.&lt;/span&gt;
2017-10-29T16:15:45.012169Z mysqld_safe Directory &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/var/run/mysqld&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; UNIX socket file don&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t exists.&lt;/span&gt;
&lt;span&gt;
[&lt;/span&gt;1]+  Exit 1                  ../bin/mysqld_safe --user=&lt;span&gt;mysql
[root@iz2zeezp920l8adg80sf0pz support&lt;/span&gt;-files]&lt;span&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;出现错误了，'/var/run/mysqld' for UNIX socket file don't exists.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是因为我在my-default.cnf写了以下配置：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&lt;span&gt;socket = /var/run/mysqld/mysqld.sock
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;而/var/run/目录下根本没有mysqld目录，解决方法如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz run]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ls&lt;/span&gt;
&lt;span&gt;atd.pid     crond.pid    lock       ntpd.pid   setrans      tuned
auditd.pid  cron.reboot  log        plymouth   sshd.pid     udev
blkid       dbus         mount      ppp        syslogd.pid  user
cloud&lt;/span&gt;-&lt;span&gt;init  faillock     netreport  qga.state  systemd      utmp
console     initramfs    nscd       sepermit   tmpfiles.d
[root@iz2zeezp920l8adg80sf0pz run]&lt;/span&gt;&lt;span&gt;#
&lt;/span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mkdir -p /var/run/mysqld&lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; chown mysql:mysql /var/run/mysqld&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;参考自: &lt;a href=&quot;https://codedump.io/share/bND2n706rgU2/1/mysqldsafe-directory-39varrunmysqld39-for-unix-socket-file-don39t-exists&quot; target=&quot;_blank&quot;&gt;https://codedump.io/share/bND2n706rgU2/1/mysqldsafe-directory-39varrunmysqld39-for-unix-socket-file-don39t-exists&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;再次启动服务:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; bin/mysqld_safe --user=mysql &amp;amp;&lt;/span&gt;
[1] 29710&lt;span&gt;
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Logging to '/usr/local/mysql/mysql-files/iz2zeezp920l8adg80sf0pz.err'.&lt;/span&gt;
2017-10-29T16:23:39.587364Z mysqld_safe Starting mysqld daemon with databases &lt;span&gt;from&lt;/span&gt; /usr/local/mysql/mysql-&lt;span&gt;files

[root@iz2zeezp920l8adg80sf0pz mysql]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt; 
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; netstat -ntlp&lt;/span&gt;
&lt;span&gt;Active Internet connections (only servers)
Proto Recv&lt;/span&gt;-Q Send-Q Local Address           Foreign Address         State       PID/&lt;span&gt;Program name    
tcp        0      0 &lt;/span&gt;0.0.0.0:22              0.0.0.0:*               LISTEN      2096/&lt;span&gt;sshd           
&lt;span&gt;tcp6       0      0 :::&lt;/span&gt;&lt;/span&gt;&lt;span&gt;3306                 :::*                    LISTEN      30188/&lt;/span&gt;&lt;span&gt;&lt;span&gt;mysqld  &lt;/span&gt;      
[root@iz2zeezp920l8adg80sf0pz mysql]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;MySQL数据库默认端口为3306，可以看到mysqld服务已启动了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到&lt;span&gt;mysql-files目录下，可以看到生成了一些数据文件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@iz2zeezp920l8adg80sf0pz mysql-files]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ls&lt;/span&gt;
&lt;span&gt;auto.cnf        ib_logfile1                  iz2zeezp920l8adg80sf0pz.pid
ib_buffer_pool  ib_logfile2                  mysql
ibdata1         ibtmp1                       performance_schema
ib_logfile0     iz2zeezp920l8adg80sf0pz.err  sys
[root@iz2zeezp920l8adg80sf0pz mysql&lt;/span&gt;-files]&lt;span&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;7、登陆数据库，登陆密码是之前生成的临时密码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
[root@iz2zeezp920l8adg80sf0pz bin]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mysql -uroot -p&lt;/span&gt;
-bash: mysql: command &lt;span&gt;not&lt;/span&gt;&lt;span&gt; found
[root@iz2zeezp920l8adg80sf0pz bin]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ./mysql -uroot -p&lt;/span&gt;
&lt;span&gt;Enter password: 
Welcome to the MySQL monitor.  Commands end with ; &lt;/span&gt;&lt;span&gt;or&lt;/span&gt;&lt;span&gt; \g.
Your MySQL connection id &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; 3&lt;span&gt;
Server version: &lt;/span&gt;5.7.20&lt;span&gt;

Copyright (c) &lt;/span&gt;2000, 2017, Oracle &lt;span&gt;and&lt;/span&gt;/&lt;span&gt;or&lt;/span&gt;&lt;span&gt; its affiliates. All rights reserved.

Oracle &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a registered trademark of Oracle Corporation &lt;span&gt;and&lt;/span&gt;/&lt;span&gt;or&lt;/span&gt;&lt;span&gt; its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;help;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;or&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\h&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; help. Type &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\c&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; to clear the current input statement.

mysql&lt;/span&gt;&amp;gt;&lt;span&gt; show databases;
ERROR &lt;/span&gt;1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;我本来想show databases查看数据库的，发现无法查看。看到&lt;span&gt;必须先改密码才能执行操作&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
mysql&amp;gt; set password=password(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;aa1274828542&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;-&amp;gt;&lt;span&gt; ;
Query OK, 0 rows affected, &lt;/span&gt;1 warning (0.00&lt;span&gt; sec)

mysql&lt;/span&gt;&amp;gt;&lt;span&gt; show databases;
mysql&lt;/span&gt;&amp;gt; &lt;span&gt;set password=password('xxxx')    # xxxx设定的新密码&lt;/span&gt;
    -&amp;gt;&lt;span&gt; ;
Query OK, 0 rows affected, &lt;/span&gt;1 warning (0.00&lt;span&gt; sec)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;mysql&amp;gt; show databases;&lt;br/&gt;+--------------------+&lt;br/&gt;| Database |&lt;br/&gt;+--------------------+&lt;br/&gt;| information_schema |&lt;br/&gt;| mysql |&lt;br/&gt;| performance_schema |&lt;br/&gt;| sys |&lt;br/&gt;+--------------------+&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;六、直接登陆数据库&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;现在你已经可以登际MySQL了，想必你肯定是和我一样高兴。执行以下命令，发现无法登陆，原因是无法找到mysql指令。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mysql -uroot -p&lt;/span&gt;
-bash: mysql: command &lt;span&gt;not&lt;/span&gt;&lt;span&gt; found
[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这很正常，因为mysql命令的文件是在/usr/local/mysql/bin目录下。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ls /usr/local/mysql/bin | grep &quot;mysql&quot;&lt;/span&gt;
mysql&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;而系统的环境变量如下，根本无法找到mysql这个命令:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; echo $PATH&lt;/span&gt;
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/&lt;span&gt;bin
[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;要想&lt;span&gt;直接执行mysql -uroot -p，然后输入密码就能登陆，这就得修改.bashrc文件&lt;/span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;加上　&lt;span&gt;export PATH=$PATH:/usr/local/mysql/bin　&lt;span&gt;当然，你得确保/usr/local/mysql/bin目录有mysql。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; vim ~/.bashrc    &lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; .bashrc&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt;##edit by chengliang at 2017/10/30###&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; export PATH for user root can logging mysql-server quickly.&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; after chage this file,you should source it.&lt;/span&gt;
&lt;span&gt;
export PATH&lt;/span&gt;=$PATH:/usr/local/mysql/&lt;span&gt;bin

[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; source ~/.bashrc &lt;/span&gt;
[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mysql&lt;/span&gt;
ERROR 1045 (28000): Access denied &lt;span&gt;for&lt;/span&gt; user &lt;span&gt;'&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; (using password: NO)
[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mysql -uroot -p&lt;/span&gt;
&lt;span&gt;Enter password: 
Welcome to the MySQL monitor.  Commands end with ; &lt;/span&gt;&lt;span&gt;or&lt;/span&gt; \g.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;生效方法：（有以下两种）&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;关闭当前终端窗口，重新打开一个新终端窗口就能生效&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;输入“source ~/.bashrc”命令，立即生效&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;有效期限：永久有效&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;用户局限：仅对当前用户&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考博客: &lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/hust-chenming/p/4943268.html&quot;&gt;linux查看和修改PATH环境变量的方法&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;七、stop/start/restart&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; /etc/init.d/mysql stop   # 停止数据库服务&lt;/span&gt;
&lt;span&gt;Shutting down MySQL..                                      [  OK  ]
[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#
&lt;/span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; /etc/init.d/mysql start  # 开启数据库服务&lt;/span&gt;
&lt;span&gt;Starting MySQL.                                            [  OK  ]
[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#
&lt;/span&gt;[root@iz2zeezp920l8adg80sf0pz ~]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; /etc/init.d/mysql restart  # 重启数据库&lt;/span&gt;
&lt;span&gt;Shutting down MySQL..                                      [  OK  ]
Starting MySQL.                                            [  OK  ]
[root@iz2zeezp920l8adg80sf0pz &lt;/span&gt;~]&lt;span&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;虽然知道上了首页会被撤，但我还是要发首页&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;段子:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1038183/201710/1038183-20171030213746730-403991871.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1038183/201710/1038183-20171030213757590-1236794079.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 30 Oct 2017 13:39:00 +0000</pubDate>
<dc:creator>前程明亮</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/0zcl/p/7752306.html</dc:identifier>
</item>
<item>
<title>恐惧：中年程序员会害怕丢掉工作吗？ - mindwind</title>
<link>http://www.cnblogs.com/mindwind/p/7756303.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mindwind/p/7756303.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/815275/201710/815275-20171030200751871-278651287.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;刚入行的时候，听说程序员是吃青春饭的，只能干到 30 岁。过了几年，这个说法变成了 35 岁。如今，我都已经过了 35 岁了，这个说法现在是 40 岁。&lt;/p&gt;
&lt;p&gt;有时和曾经一同毕业的同学会聊起这个话题，唏嘘感慨，人到中年，想到如果今天突然丢了工作，会怎样？一想到万一这个假定成了现实，也不禁感到一丝丝恐慌。&lt;/p&gt;
&lt;h2 id=&quot;恐惧感&quot;&gt;恐惧感&lt;/h2&gt;
&lt;p&gt;当丢掉工作开始让你产生恐惧的感觉时，说明已经不再年轻了。&lt;/p&gt;
&lt;p&gt;当我刚步出学校的时候，刚工作满一年，我攒下了约一万元的积蓄，然后裸辞离职了。但只休息了一个月，就开始恐慌起来了。第二个月初，拿着手上的账单计算着，大约每个月的生活成本需要 3000 元。再看着卡上不多的储蓄，不得不从魔幻的虚拟回到苟且的现实中，开始了新一轮的找工作之路。&lt;/p&gt;
&lt;p&gt;此时的恐惧不是失业的恐惧，而是没钱继续生活的恐惧。那时并不害怕失去工作，感觉工作随时都可以换一个，要不干嘛要傻乎乎的裸辞呢？当时，只想着要是下次，应该多攒点钱才辞职的。而下次是什么时候？当时我也不知道。&lt;/p&gt;
&lt;p&gt;第二次裸辞，已是三年后，这次不仅想换个工作，还想换个城市，中间休息间隔的时间更长。辞职好几个月后，我才又在另一个城市又开始了找工作。这一次感觉到了，工作没有那么好找，看上去还行也匹配自己的工作也没太多选择。工资相对原来的一线城市也整体低一个档次，这些也未能让当时的我产生恐惧，仅仅是困惑，看不清前路。&lt;/p&gt;
&lt;p&gt;又过了好些年，真的到了中年后，每月都有很多账单要付，贷款要还。再也不会觉得切换工作是一件很随意的事情，裸辞早已从我的词典里消失。不随意，但未必会恐惧，只是年龄与处境让我们此刻更需要认真的面对和思考这个问题。&lt;/p&gt;
&lt;h2 id=&quot;无惧感&quot;&gt;无惧感&lt;/h2&gt;
&lt;p&gt;假如你在一份工作中，对丢掉工作本身产生了恐惧，那你做工作的形式很可能会走向谨小慎微。&lt;/p&gt;
&lt;p&gt;这时工作让你产生了恐惧感，你就将会被工作绊住，只想兢兢业业，如履薄冰的做好份内工作，以保护好自己的位置。这样的工作状态，自己也是缺乏信心的，而一个对自己信心不足人，也很难让别人对你产生信心。&lt;/p&gt;
&lt;p&gt;而偏偏是要对工作的无惧感才能真正释放你的潜力、发挥你的能力。程序员，是一个专业性要求比较高的职业，你被雇佣并要求成为一名专业人士，所以应该像一个专业人士一样行事。普通劳动者和专业人士的区别在于，普通劳动者主要被动接受指令完成任务执行，而专业人士则在其领域内自己生成指令，而在领域外还会向同事或上级提供来自该领域的输入 —— 专业建议。&lt;/p&gt;
&lt;p&gt;普通劳动者是一种劳动力资源，他们保证执行，而专业人士则是保证选择的执行方向是有意义的。有时我在想，是专业让你拥有无惧感呢，还是无惧了才能走向更专业？&lt;/p&gt;
&lt;h2 id=&quot;安全感&quot;&gt;安全感&lt;/h2&gt;
&lt;p&gt;恐惧感来自于不确定性，为了克服恐惧感，一般我们通过消灭不确定性来提升安全感。&lt;/p&gt;
&lt;p&gt;本来丢掉工作并不可怕，如果我们很容易找到下一份工作，并能很快适应变化。但现实是，如果是因为经济大环境变化导致的失业或技术性淘汰，找下一份工作并不容易，适应这种变化也不轻松。&lt;/p&gt;
&lt;p&gt;二十年前，上一辈的中年人，他们从自认为的铁饭碗（国企大厂）中批量下岗了，这是一种社会经济与技术变革引发的批量淘汰。近一点的，如美国 2008 年金融危机，一夜之间失业的也不在少数，而且之后很长一段时间都找不到工作，这些人并非专业能力过时的技术性淘汰，而是环境剧变导致的萧条。&lt;/p&gt;
&lt;p&gt;再说个离程序员更近的案例，来自 TomInsight 的深度调查采访，也就是两年多前的事。&lt;/p&gt;
&lt;p&gt;Tony 37 岁，清华本硕，毕业后加入全球知名的 A 记公司中国研发中心工作 11 年，年薪 80 万。在北京东三环，置业豪宅，全职太太，两个孩子。但 2014 年 5 月，A 记公司中国研发中心裁员，Tony 就成为了其中之一。&lt;/p&gt;
&lt;p&gt;Tony 作为专业技术人士的价值依然存在，更以百万年薪身价加入著名的互联网巨头 B 厂。但后来，Tony 却无法适应互联网的节奏，感觉工作上周边环境各种 “浮躁”，管理也不 “专业”，只好再度离职。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;虽然辞职后很难找到能相应的工作：不能很好的适应互联网公司，外企整体不景气招聘冻结，进入体制内早已过了年龄，创业没有机会和资源，当然也没勇气。而维持家庭高品质生活还需要不小的开支。Tony 在 37 岁这年，学会了抽烟，喝酒。仿佛人生的不顺利，来得稍微晚了一些。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最可怕的失业来自变革引发的技能性淘汰（国企下岗），其次是环境引发的萧条（金融危机），再次是，技能虽然还有普适价值，但自身却适应不了环境变化带来的改变与调整（Tony 的危机）。&lt;/p&gt;
&lt;p&gt;Tony 面对的危机还是比较少见，属于个人问题。而金融危机也不多见，面对萧条 “血”（储蓄）够厚也可以撑得过去。只有第一种，积重难返。四十而不惑，四十岁程序员的悲哀在于，他们拥有 15+ 年的经历与经验，有时却在和只有 5 年经验的年轻程序员竞争同样的岗位。&lt;/p&gt;
&lt;p&gt;环境和人都在变化，变化的总是不确定的。获得安全感的最佳办法，也许不是消除不确定，而是把变化纳入考虑，承认变化是永恒的，不确定是长期的。面对这一点很难，难在反人性。所以，获得安全感，真正需要做的反而是战胜自己人性里的另一面。而我发现真正能做到的人，其实无论世界怎样变化，内心依然波澜不惊。就像大海深处，无论海面如何波浪滔天，深处依然静谧悠然。&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;有时我想，某天突然失业了，是不是可以削减负债，回到年轻时的一无所有？但也许也不能完全回到，因为还有下一代需要去照顾。所以啊，还得像年轻时刚走出校园一样，去适应这个这个年龄该面对的环境，每一阶段都有这一阶段的处境要面对。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;写点文字，画点画儿，记录成长瞬间。&lt;br/&gt;微信公众号「瞬息之间」，既然遇见，不如同行。&lt;br/&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/815275/201602/815275-20160216164606173-1251141402.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 30 Oct 2017 13:05:00 +0000</pubDate>
<dc:creator>mindwind</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/mindwind/p/7756303.html</dc:identifier>
</item>
<item>
<title>【Vue】利用父子组件间通信实现一个场景 - OkayChen</title>
<link>http://www.cnblogs.com/okaychen/p/7674211.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/okaychen/p/7674211.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1140602/201710/1140602-20171025194848754-2026039505.png&quot; alt=&quot;&quot; width=&quot;585&quot; height=&quot;329&quot;/&gt;&lt;/p&gt;
&lt;p&gt;组件间通信是组件开发的，我们既希望组件的独立性，数据能互不干扰，又不可避免组件间会有联系和交互。&lt;/p&gt;
&lt;p&gt;在vue中，父子组件的关系可以总结为&lt;strong&gt;&lt;span&gt;props down，events up&lt;/span&gt;&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;在vue2.0中废弃了&lt;strong&gt;&lt;span&gt;$dispatch&lt;/span&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;span&gt;$broadcast&lt;/span&gt;&lt;/strong&gt;，子组件使用event发出自定义事件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1140602/201710/1140602-20171029212721976-1727722995.png&quot; alt=&quot;&quot; width=&quot;494&quot; height=&quot;404&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 思考场景如下：&lt;/p&gt;
&lt;p&gt;　　一个总群（父组件）中大家做自我介绍，&lt;/p&gt;
&lt;p&gt;　　陌陌、小小、可可、天天 &lt;span&gt;&lt;span&gt;收到 总群发来的消息之后（&lt;strong&gt;&lt;span&gt;父传子&lt;/span&gt;&lt;/strong&gt;）&lt;/span&gt;，&lt;span&gt;将自己的信息发送到总群（&lt;strong&gt;&lt;span&gt;子传父&lt;/span&gt;&lt;/strong&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;父组件 &lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;template&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;br/&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;父组件&amp;gt;&amp;gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ somebody }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 说: 我来自 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ city }} &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; aGirls和noticeGirl通过props传递给子组件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; introduce通过$emit子组件传递给父组件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;v-girl-group &lt;/span&gt;&lt;span&gt;:girls&lt;/span&gt;&lt;span&gt;=&quot;aGirls&quot;&lt;/span&gt;&lt;span&gt; :noticeGirl&lt;/span&gt;&lt;span&gt;=&quot;noticeGirl&quot;&lt;/span&gt;&lt;span&gt; @introduce&lt;/span&gt;&lt;span&gt;=&quot;introduceSelf&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;v-girl-group&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 我使用的组件间通信：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;aGirls和noticeGirl通过 &lt;span&gt;&lt;strong&gt;props&lt;/strong&gt; &lt;/span&gt;传递给子组件&lt;/li&gt;
&lt;li&gt;通过&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;$emit&lt;/span&gt; &lt;/strong&gt;子组件传递给父组件，v-on来监听父组件自定义事件（$emit的变化）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;script&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
&amp;lt;script&amp;gt;&lt;span&gt;
import vGirlGroup from &lt;/span&gt;'./components/HelloWorld'&lt;span&gt;
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
    name: &lt;/span&gt;'girl'&lt;span&gt;,
    components: {
        vGirlGroup
    },
    data () {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; {
            aGirls:[{
                name:&lt;/span&gt;'陌陌'&lt;span&gt;,
                city:&lt;/span&gt;'GuangZhou'&lt;span&gt;
            },{
                name:&lt;/span&gt;'小小'&lt;span&gt;,
                city:&lt;/span&gt;'BeiJing'&lt;span&gt;
            },{
                name:&lt;/span&gt;'可可'&lt;span&gt;,
                city:&lt;/span&gt;'American'&lt;span&gt;
            },{
                name:&lt;/span&gt;'天天'&lt;span&gt;,
                city:&lt;/span&gt;'HangZhou'&lt;span&gt;
            }],
            somebody:&lt;/span&gt;''&lt;span&gt;,
            city:&lt;/span&gt;''&lt;span&gt;,
            noticeGirl:&lt;/span&gt;''&lt;span&gt;
        }
    },
    methods: {
        introduceSelf (opt) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.somebody =&lt;span&gt; opt.name;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.city =&lt;span&gt; opt.city;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 通知girl收到消息&lt;/span&gt;
            &lt;span&gt;this&lt;/span&gt;.noticeGirl = opt.name + ',已收到消息'&lt;span&gt;;
        }
    }
}
&lt;/span&gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里的 &lt;span&gt;&lt;strong&gt;&lt;span&gt;introduceSelf&lt;/span&gt;&lt;/strong&gt; &lt;span&gt;&lt;span&gt;就是父组件接收到子组件发出的$emit事件处理程序&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;子组件&lt;/h3&gt;
&lt;p&gt;&lt;span&gt; &lt;strong&gt;template&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;子组件&amp;gt;&amp;gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(value, index) in girls&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                {{ index }} - {{ value.name }} - {{ value.city }} 
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;noticeGroup(value.name,value.city)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;发送消息&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
       &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;msg&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;接收来自父组件的消息:{{ noticeGirl }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;script&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;子组件通过&lt;strong&gt;&lt;span&gt;$emit&lt;/span&gt;&lt;/strong&gt;发出自定义事件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&amp;lt;script&amp;gt;&lt;span&gt;
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
    name: &lt;/span&gt;'girl-group'&lt;span&gt;,
    props: {
        girls: {
            type: Array,
            required: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
        },
        noticeGirl: {
            type: String,
            required: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
        }
    },
    methods: {
        noticeGroup (name, age) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.$emit('introduce'&lt;span&gt;,{
                name: name,
                age: age
            })
        }
    }
}
&lt;/span&gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;结果&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1140602/201710/1140602-20171030204023230-773657287.gif&quot; alt=&quot;&quot; width=&quot;575&quot; height=&quot;347&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到这里，我们已经根据vue2.0父子间通信实现了上面提出的一个场景 .&lt;/p&gt;
&lt;p&gt;相比vue1.0的变化：具体可以参考：&lt;a class=&quot;uri&quot; href=&quot;https://cn.vuejs.org/v2/guide/migration.html#dispatch-%E5%92%8C-broadcast-%E6%9B%BF%E6%8D%A2&quot;&gt;https://cn.vuejs.org/v2/guide/migration.html#dispatch-和-broadcast-替换&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 30 Oct 2017 12:54:00 +0000</pubDate>
<dc:creator>OkayChen</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/okaychen/p/7674211.html</dc:identifier>
</item>
<item>
<title>导航菜单 - 爱喝酸奶的吃货</title>
<link>http://www.cnblogs.com/yingzi1028/p/7756193.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yingzi1028/p/7756193.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;会跳的多彩菜单实例&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    ul &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 26px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        list-style&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0 -1px 0 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        font&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; arial 14px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        font-weight&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; bold&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item p &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0 0 2px 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #cc6&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #000&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        border-top-width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #cc6&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        border-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #000&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        border-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #000&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item .pad &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item .row1 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0 5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item .row2 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0 3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item .row3 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0 2px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0 1px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 2px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item a,
    .item a:visited &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-decoration&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item a:hover &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item a:hover p &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #884&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; padding-bottom: 12px; &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item a:hover .pad &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .item a:hover .row2,
    .item a:hover .row3,
    .item a:hover .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #884&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .orange p,
    .orange .row2,
    .orange .row3,
    .orange .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fa0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .orange a:hover p,
    .orange a:hover .row2,
    .orange a:hover .row3,
    .orange a:hover .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fa0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .pink p,
    .pink .row2,
    .pink .row3,
    .pink .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #f9bbc5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .pink a:hover p,
    .pink a:hover .row2,
    .pink a:hover .row3,
    .pink a:hover .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #f9bbc5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .yellow p,
    .yellow .row2,
    .yellow .row3,
    .yellow .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ff0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .yellow a:hover p,
    .yellow a:hover .row2,
    .yellow a:hover .row3,
    .yellow a:hover .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ff0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .green p,
    .green .row2,
    .green .row3,
    .green .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #0ec&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .green a:hover p,
    .green a:hover .row2,
    .green a:hover .row3,
    .green a:hover .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #0ec&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .blue p,
    .blue .row2,
    .blue .row3,
    .blue .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #0cf&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .blue a:hover p,
    .blue a:hover .row2,
    .blue a:hover .row3,
    .blue a:hover .row4 &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #0cf&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ui-demo&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;item orange&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pad&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;首页&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;item pink&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pad&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;企业简介&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;item yellow&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pad&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;企业新闻&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;item green&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pad&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;产品展示&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;item blue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pad&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;联系我们&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 30 Oct 2017 12:01:00 +0000</pubDate>
<dc:creator>爱喝酸奶的吃货</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yingzi1028/p/7756193.html</dc:identifier>
</item>
<item>
<title>struts2系列(四)：struts2国际化的多种方式 - 小不点啊</title>
<link>http://www.cnblogs.com/leeSmall/p/7756174.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/leeSmall/p/7756174.html</guid>
<description>&lt;h2&gt;一、struts2国际化原理&lt;/h2&gt;
&lt;p&gt;根据不同的Locale读取不同的文本。&lt;/p&gt;
&lt;p&gt;例如有两个资源文件：&lt;/p&gt;
&lt;p&gt;第一个：message_zh_CN.properties&lt;/p&gt;
&lt;p&gt;第二个：message_en_US.properties&lt;/p&gt;
&lt;p&gt;当Locale=zh_CN时，就去第一个文件查找；当Locale=en_US时，就去第二个文件查找。&lt;/p&gt;
&lt;h2&gt;二、简单方式实现国际化&lt;/h2&gt;
&lt;p&gt;1. 新建一个maven的web项目，项目结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1227483/201710/1227483-20171030191502199-1918203109.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2. 在src/main/java目录下新建两个国际化资源文件message_zh_CN.properties、message_en_US.properties，然后将各个key-value对添加到这两个文件中，key字段一定要统一&lt;/p&gt;
&lt;p&gt;message_zh_CN.properties：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
info=\u4FE1\u606F
info_not_empty=\u4FE1\u606F\u4E0D\u80FD\u4E3A\u7A7A&lt;br/&gt;submit=\u63D0\u4EA4
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;message_en_US.properties：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
info=information
info_not_empty=info not empty&lt;br/&gt;submit=submit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3. 配置struts.properties文件，这个文件也是放在src/main/java目录下的&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
struts.cunstom.i18n.resources=message
struts.i18n.encoding=utf-8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;struts.cunstom.i18n.resources=message是为了告诉程序，国际化资源文件是message开头命名的资源文件。这个需要在struts的xml文件里面配置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE struts PUBLIC
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    &quot;-//Apache Software Foundation//DTD Struts Configuration 2.0//EN&quot;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    &quot;http://struts.apache.org/dtds/struts-2.0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;告诉程序，国际化资源文件是message开头命名的资源文件。 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constant &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;struts.custom.i18n.resources&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;message&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;default&quot;&lt;/span&gt;&lt;span&gt; namespace&lt;/span&gt;&lt;span&gt;=&quot;/&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         
&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4. Struts2的页面国际化，默认要走action才行，如果直接访问jsp文件，是没有国际化效果的，所以定义一个语言的LangAction，然后在struts.xml文件里面配置&lt;/p&gt;
&lt;p&gt;LangAction:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.study.struts2.demo;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.opensymphony.xwork2.ActionSupport;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; LangAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;     * 
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -5273948217476741834L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;struts.xml:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE struts PUBLIC
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    &quot;-//Apache Software Foundation//DTD Struts Configuration 2.0//EN&quot;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    &quot;http://struts.apache.org/dtds/struts-2.0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;告诉程序，国际化资源文件是message开头命名的资源文件。 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constant &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;struts.custom.i18n.resources&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;message&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;default&quot;&lt;/span&gt;&lt;span&gt; namespace&lt;/span&gt;&lt;span&gt;=&quot;/&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;lang&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.study.struts2.demo.LangAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;index.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5. 实现在index.jsp页面中的中英文切换&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;引入struts2的标签  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ taglib prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/struts-tags&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;中英文切换按钮  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;lang.action?request_locale=zh_CN&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;中文&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;lang.action?request_locale=en_US&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;English&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;&amp;lt;s:url action='hello'/&amp;gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;struts2的取值标签  value=&quot;&amp;lt;s:property value=&quot;msg&quot; /&amp;gt;&quot;输入正确的被保留 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;hello.action&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 信息： &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:text &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;info&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;s:text&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;msg&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;&amp;lt;s:property value=&quot;&lt;/span&gt;&lt;span&gt;msg&quot; &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;&quot; /&amp;gt;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:property &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;fieldErrors['msg'][0]&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;&amp;lt;s:text name=&quot;&lt;/span&gt;&lt;span&gt;submit&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;s:text&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&amp;gt;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;验证通过后显示  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:property &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;msg&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5. 在tomcat里面启动项目输入地址验证http://localhost:8080/TestStruts2&lt;/p&gt;
&lt;p&gt;中文页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1227483/201710/1227483-20171030193636543-2008085480.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;英文页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1227483/201710/1227483-20171030193714121-348390423.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;三、过滤器方式实现国际化&lt;/h2&gt;
&lt;p&gt;后续补充。。。。。&lt;/p&gt;
&lt;h2&gt;四、把Locale放到session里面，从session里面取出Locale作国际化&lt;/h2&gt;
&lt;p&gt;后续补充。。。。。&lt;/p&gt;
</description>
<pubDate>Mon, 30 Oct 2017 11:44:00 +0000</pubDate>
<dc:creator>小不点啊</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/leeSmall/p/7756174.html</dc:identifier>
</item>
<item>
<title>App 组件化/模块化之路——使用SDK的思路进行模块化设计接口 - AngryCode</title>
<link>http://www.cnblogs.com/angrycode/p/7755994.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/angrycode/p/7755994.html</guid>
<description>&lt;p&gt;&lt;strong&gt;在不久之前分享一篇&lt;/strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/JBcx9qn3e9A9fGiMxuxH4Q&quot;&gt;《App 组件化/模块化之路——如何封装网络请求框架》&lt;/a&gt;&lt;span&gt;文章介绍了我在项目中封装网络请求框架的思路。开发一个 App 会涉及到很多网络请求 API ，例如登录注册接口、用户信息接口、业务列表请求接口等等。而本文介绍的是如何模块化设计这些接口，使得项目中更好地复用代码。当然这仅仅是一家之言，欢迎留言拍砖。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;&quot;&gt;问题&lt;/h3&gt;
&lt;p&gt;网络请求中最常见的莫过于&lt;strong&gt;用户授权登录模块&lt;/strong&gt;了。现在以此模块为例，大概有以下接口&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;登录 sign_in&lt;/li&gt;
&lt;li&gt;注册 sign_up&lt;/li&gt;
&lt;li&gt;找回密码 find_password&lt;/li&gt;
&lt;li&gt;获取短信验证码 getvalidatecode&lt;/li&gt;
&lt;li&gt;获取用户信息 user_info&lt;/li&gt;
&lt;li&gt;修改用户信息 edit_user&lt;/li&gt;
&lt;li&gt;绑定手机号 bind_phone&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;假设一个 App 中有这些接口，那么如何设计这些接口呢？按照我们之前设计的网络请求框架就是把每一个具体的 API (例如登录接口) 写一个 Request 类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; SignInRequest &lt;span&gt;extends&lt;/span&gt; BaseTextRequest&amp;lt;SignInResult&amp;gt;&lt;span&gt; {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; SimpleTextRequest(Context context, Map&amp;lt;String, String&amp;gt;&lt;span&gt; params) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;(context);
        addParams(params);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUrl() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;https://api.angrycode.net/signin&quot;&lt;span&gt;;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; HttpMethod getHttpMethod() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; HttpMethod.POST;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; SignInResult onRequestFinish(String result) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; SignInResult.parse(result);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; SignInResult onRequestError(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; code, String message) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SignInResult(code,message);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;类似的注册接口对应一个 SignUpRequest 类，于是这样有多少个接口就又多少个 Request 类。&lt;/p&gt;
&lt;p&gt;如果你的 App 业务比较复杂，那么 Request 类数目就会暴增，这时候如何组织管理这些 Request 类就是一个问题了。&lt;/p&gt;
&lt;h3 id=&quot;-1&quot;&gt;接口模块化&lt;/h3&gt;
&lt;p&gt;思路其实也简单。不错，为了让你的接口更好的复用，我们把整个模块相关的接口进行整体设计。对外统一接口和回调方法。我们来看代码。&lt;/p&gt;
&lt;h4 id=&quot;authcontract&quot;&gt;AuthContract&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * Created by wecodexyz@gmail.com on 2017/10/14 下午5:57.
 * GitHub - &lt;/span&gt;&lt;span&gt;https://github.com/wecodexyz&lt;/span&gt;&lt;span&gt;
 * Description:
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; AuthContract {
   
    &lt;/span&gt;&lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Presenter {
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 登录：/api/1.0/user/sign/in
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; account  手机或邮箱
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; password 登录密码
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; type     类型：0-普通登录、1-邮箱登录、2-手机登录
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; signIn(String account, String password, @SignInType &lt;span&gt;int&lt;/span&gt;&lt;span&gt; type);

        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 注册：/api/1.0/user/sign/up
         
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; nick_name 用户昵称 optional
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; signature 用户签名 optional
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; signUp(String account, String password, @SignInType &lt;span&gt;int&lt;/span&gt;&lt;span&gt; type, String code, String nick_name, String signature);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 登出：/api/1.0/user/sign/out
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; signOut();
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 修改密码：/api/1.0/user/password/update
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; old_password 原密码
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; new_password 新密码
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updatePassword(String old_password, String new_password);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 手机绑定：/api/1.0/user/phone/bind
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bindPhone(String phone, String code, String password);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 手机解绑：/api/1.0/user/phone/unbind
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; unbindPhone(String phone, String code);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 获取个人资料：/api/1.0/user/profile
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; profile();
        
    }

    &lt;/span&gt;&lt;span&gt;interface&lt;/span&gt;&lt;span&gt; View {
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 注册结果
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; signInResult
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onSignUpFinish(SignInResult signInResult);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 登录结果
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; signInResult
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onSignInFinish(SignInResult signInResult);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 手机绑定结果
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; result
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onBindPhoneFinish(APIResult result);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 获取个人资料
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; result
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onRequestProfileFinish(ProfileResult result);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 获取个人资料
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; result 更新结果
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onUpdateProfileFinish(APIResult result);
        &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
         * 出错回调
         *
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; code
         * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; msg
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; onError(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; code, String msg);
      
          &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; onFinish();
      
          &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; onBegin();

    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;首先，根据 API 设计 Contract 接口，在这里定义接口请求方法和回调方法。例如我们这个登录模块，就可以定义一个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;AuthContract&lt;/span&gt;&lt;/code&gt; 协议接口，在这个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Contract&lt;/span&gt;&lt;/code&gt;里面又管理着 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Presenter&lt;/span&gt;&lt;/code&gt; 和 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;View&lt;/span&gt;&lt;/code&gt; 接口，分别代表具体 API 请求方法和数据回调方法。其中在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;View&lt;/span&gt;&lt;/code&gt; 接口中定义了几个通用的回调 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;onBegin&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;onFinish&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;onError&lt;/span&gt;&lt;/code&gt;,分别代表请求开始、结束、出错等几种状态，其它方法就是具体 API 返回的数据回调了。&lt;/p&gt;
&lt;p&gt;这个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Contract&lt;/span&gt;&lt;/code&gt; 接口设计思路是源于&lt;a href=&quot;https://github.com/googlesamples/android-architecture/blob/todo-mvp-clean/todoapp/app/src/main/java/com/example/android/architecture/blueprints/todoapp/tasks/TasksContract.java&quot;&gt;googlesamples/android-architecture&lt;/a&gt; 。这样的好处我认为就是很好的管理这个模块中的众多的接口和回调方法，而维护者一看就一目了然，非常清晰。&lt;/p&gt;
&lt;p&gt;然后，实现一个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Contract&lt;/span&gt;&lt;/code&gt; 接口中的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;View&lt;/span&gt;&lt;/code&gt; 接口。其实是空实现。&lt;/p&gt;
&lt;h4 id=&quot;authcallback&quot;&gt;AuthCallback&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * Created by wecodexyz@gmail.com on 2017/10/14 下午6:53.
 * GitHub - &lt;/span&gt;&lt;span&gt;https://github.com/wecodexyz&lt;/span&gt;&lt;span&gt;
 * Description: 授权登录以及用户相关接口回调类
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AuthCallback &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; AuthContract.View {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onSignUpFinish(SignInResult signInResult) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onSignInFinish(SignInResult signInResult) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onSignOutFinish(APIResult result) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onUpdatePasswordFinish(APIResult result) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onBindPhoneFinish(APIResult result) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onUnbindPhoneFinish(APIResult result) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onRequestProfileFinish(ProfileResult result) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onUpdateProfileFinish(APIResult result) {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onError(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; code, String msg) {

    }
      
      @Override
      &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onFinish(){
        
    }
      
      @Override
      &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onBegin(){
        
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;为什么要提供一个空实现的类呢？其实为了方便使用。想想你使用过的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;WebViewChrome&lt;/span&gt;&lt;/code&gt; 的接口回调。&lt;/p&gt;
&lt;p&gt;最后，我们实现 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Contract&lt;/span&gt;&lt;/code&gt; 中的 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Presenter&lt;/span&gt;&lt;/code&gt; 接口了。这个就是我们这个模块化接口的核心类了。&lt;/p&gt;
&lt;h4 id=&quot;authmanager&quot;&gt;AuthManager&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * Created by wecodexyz@gmail.com on 2017/10/14 下午6:55.
 * GitHub - &lt;/span&gt;&lt;span&gt;https://github.com/wecodexyz&lt;/span&gt;&lt;span&gt;
 * Description:
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AuthManager &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; AuthContract.Presenter {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Context mContext;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;AuthCallback&amp;gt;&lt;span&gt; mAuthCallbacks;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; SignInResult mSignInResult;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; AuthDBHelper mAuthDBHelper;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; AuthManager() {
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Holder {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; AuthManager INSTANCE = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AuthManager();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; AuthManager get() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Holder.INSTANCE;
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 在Application中进行初始化
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; context application context
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; init(Context context) {
        mContext &lt;/span&gt;=&lt;span&gt; context.getApplicationContext();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取本地登录信息&lt;/span&gt;
        mAuthDBHelper = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AuthDBHelper(mContext);

        mSignInResult &lt;/span&gt;=&lt;span&gt; mAuthDBHelper.loadSignInFromCache();
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 是否已登录授权
     *
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isAuth() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; mSignInResult != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;span&gt; mSignInResult.isStatus();
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; registerCallback(AuthCallback authCallback) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (mAuthCallbacks == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            mAuthCallbacks &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;&lt;span&gt;();
        }
        mAuthCallbacks.add(authCallback);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; unregisterCallback(AuthCallback authCallback) {
        mAuthCallbacks.remove(authCallback);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; clearCallbacks() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (mAuthCallbacks == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        mAuthCallbacks.clear();
    }
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; signIn(String account, String password, @AuthContract.SignInType &lt;span&gt;int&lt;/span&gt;&lt;span&gt; type) {
        HashMap&lt;/span&gt;&amp;lt;String, String&amp;gt; params = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;TextUtils.isEmpty(account)) {
            params.put(&lt;/span&gt;&quot;account&quot;&lt;span&gt;, account);
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;TextUtils.isEmpty(password)) {
            params.put(&lt;/span&gt;&quot;password&quot;&lt;span&gt;, password);
        }
        params.put(&lt;/span&gt;&quot;type&quot;&lt;span&gt;, String.valueOf(type));

        SignInRequest request &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SignInRequest(mContext);
        request.addParams(params);
        request.request()
                .observeOn(AndroidSchedulers.mainThread())
                .subscribeOn(Schedulers.io())
                  .doOnSubscribe(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Consumer&amp;lt;Subscription&amp;gt;&lt;span&gt;() {
                    @Override
                    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; accept(@NonNull Subscription subscription) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (AuthCallback callback : mCallbacks) {
                            callback.onBegin();
                        }
                    }
                })
                .doFinally(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Action() {
                    @Override
                    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; run() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (AuthCallback callback : mCallbacks) {
                            callback.onFinish();
                        }
                    }
                })
                .doAfterNext(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Consumer&amp;lt;SignInResult&amp;gt;&lt;span&gt;() {
                    @Override
                    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; accept(@NonNull SignInResult signInResult) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
                        mAuthDBHelper.cacheSignIn(signInResult);
                    }
                })
                .subscribe(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Consumer&amp;lt;SignInResult&amp;gt;&lt;span&gt;() {
                    @Override
                    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; accept(@NonNull SignInResult signInResult) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (signInResult.isStatus()) {
                            mSignInResult &lt;/span&gt;=&lt;span&gt; signInResult;
                            UserInfo.fromSigninResult(mSignInResult);
                        }
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (AuthCallback callback : mAuthCallbacks) {
                            callback.onSignInFinish(signInResult);
                        }
                    }
                }, &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Consumer&amp;lt;Throwable&amp;gt;&lt;span&gt;() {
                    @Override
                    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; accept(@NonNull Throwable throwable) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
                        LogUtils.e(&lt;/span&gt;&quot;sign in error -&amp;gt; &quot; +&lt;span&gt; throwable);
                        callbackError(&lt;/span&gt;110, &quot;sign in error&quot;&lt;span&gt;);
                    }
                });
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;接口太多这里只列举signup接口，其中接口类似...&lt;/span&gt;
&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;AuthManager&lt;/span&gt;&lt;/code&gt; 这个类设计单例模式。除了具体 API 实现接口还有以下几个方法&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;init 全局初始化方法。主要是为了保存 Application 上下文，因为接口请求会使用到。&lt;/li&gt;
&lt;li&gt;registerCallback 注册回调。哪里使用，就哪里注册&lt;/li&gt;
&lt;li&gt;unregisterCallback 取消注册回调。与上面方法对应使用，避免页面内存泄露&lt;/li&gt;
&lt;li&gt;clearCallbacks 清除所有回调。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;具体的 API 实现中，我这里就使用了之前网络框架中的代码 SignInRequest。&lt;/p&gt;
&lt;p&gt;在 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;AuthManager&lt;/span&gt;&lt;/code&gt; 中还有一个 &lt;code class=&quot;prettyprint code-in-text prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;AuthDBHelper&lt;/span&gt;&lt;/code&gt; 类，这个是用户信息的缓存类。只要用户登录过了，那么下次就是直接取缓存中的登录信息就可以了。&lt;/p&gt;
&lt;h3 id=&quot;-2&quot;&gt;整体结构&lt;/h3&gt;
&lt;p&gt;预览以下整体的结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://angrycode.qiniudn.com/auth-arch.png&quot; alt=&quot;Auth-arch&quot;/&gt;&lt;/p&gt;
&lt;p&gt;与用户相关的API都放在此模块中进行管理，而其它模块进行使用就很方便了。&lt;/p&gt;
&lt;p&gt;首先，在Application中进行初始化&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onCreate() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onCreate();
        AuthManager.get().init(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这个用法是不是与其它第三方 SDK 的使用类似呢？可以感受一下，其实这个也是之前提到的 SDK 设计思路。&lt;/p&gt;
&lt;p&gt;然后在需要调用接口的页面中，如LoginFragment&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
AuthCallback mAuthCallback = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AuthCallback() {
        @Override
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onError(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; code, String msg) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求出错&lt;/span&gt;
&lt;span&gt;        }
      
          @Override
          &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onBegin(){
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求开始&lt;/span&gt;
&lt;span&gt;        }
    
          @Override
          &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onFinish(){
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求结束&lt;/span&gt;
&lt;span&gt;        }
      
        @Override
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onSignInFinish(SignInResult signInResult) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onSignInFinish(signInResult);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (signInResult.isStatus()) {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;登录成功&lt;/span&gt;
&lt;span&gt;            }
        }
    };
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onActivityCreated(Bundle savedInstanceState) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onActivityCreated(savedInstanceState);
        AuthManager.get().registerCallback(mAuthCallback);
    }
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onDestroyView() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onDestroyView();
        AuthManager.get().unregisterCallback(mAuthCallback);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样用起来是不是很方便呢？&lt;/p&gt;
&lt;p&gt;目前在项中中除了 API 可以这样设计之外，还有其它一个功能只要各个模块都有可能经常使用到的都可以使用这样的思路。&lt;/p&gt;
&lt;p&gt;例如，我的 App 里很多页面都会用到获取本地音乐或者视频的列表。同样地，有以下几个类。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://angrycode.qiniudn.com/media-arch.png&quot; alt=&quot;media-arch&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
微信关注我们，可以获取更多
&lt;/pre&gt;
&lt;hr/&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/427085/201702/427085-20170221211811976-670020216.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 30 Oct 2017 11:09:00 +0000</pubDate>
<dc:creator>AngryCode</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/angrycode/p/7755994.html</dc:identifier>
</item>
</channel>
</rss>