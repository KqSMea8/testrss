<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>程序结构 - 学海无涯...继续学</title>
<link>http://www.cnblogs.com/learn-now/p/8471014.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/learn-now/p/8471014.html</guid>
<description>&lt;p&gt;名称：&lt;/p&gt;
&lt;p&gt;go语言中函数、变量、常量、类型、语句标签和包的名称规则：字母或下划线开头，后跟任意数量的字符、数字、下划线，&lt;span&gt;区分大小写&lt;/span&gt;，即heapSort和heapsort是不通名称；&lt;/p&gt;
&lt;p&gt;部分预声明的常量、类型和函数,可以重新声明，但有冲突风险；&lt;/p&gt;
&lt;p&gt;如果一个实体在函数中声明，则他只在函数局部有效。在函数外声明则对包里所有源文件可见。实体首字母大写则跨包可见且可访问；&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1305220/201802/1305220-20180225233507162-978061161.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 25 Feb 2018 15:28:00 +0000</pubDate>
<dc:creator>学海无涯...继续学</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/learn-now/p/8471014.html</dc:identifier>
</item>
<item>
<title>浮动元素的高度怎么撑起 - 小僵尸</title>
<link>http://www.cnblogs.com/yigexiaojiangshi/p/8471130.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yigexiaojiangshi/p/8471130.html</guid>
<description>&lt;p&gt;&lt;strong&gt;当我们给子元素设置float不为none的属性值时，会导致父元素高度塌陷的两种情况&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;其父元素刚好没有设置高度；那么此时的父元素是没有高度的。&lt;/li&gt;
&lt;li&gt;其父元素设置的高度不够，导致子元素溢出；&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;当我们给li 元素高度，并都向左浮动时，ul 的高度为0&lt;/p&gt;
&lt;p&gt;如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1031157/201802/1031157-20180225230938425-2081894865.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决办法：&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;18&quot;&gt;
&lt;p&gt;&lt;strong&gt;开启BFC：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　设置该元素overflow属性为除去visible的属性值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;                  设置元素的float属性为除去 none 的属性值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;                  将元素设置为绝对定位absolute&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;                  将元素的display属性设置为:inline-block或table-cell,flex,inline-flex&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;清除浮动&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;给父元素增加合适的高度&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/h4&gt;
&lt;/div&gt;

</description>
<pubDate>Sun, 25 Feb 2018 15:25:00 +0000</pubDate>
<dc:creator>小僵尸</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yigexiaojiangshi/p/8471130.html</dc:identifier>
</item>
<item>
<title>js到底new了点啥 - 阿尔卑斯de秘密</title>
<link>http://www.cnblogs.com/lunlunshiwo/p/8466902.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lunlunshiwo/p/8466902.html</guid>
<description>&lt;p&gt;　　在最开始学习js的时候，我看书上写着，创建一个数组，一个对象通常使用new，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt;  arr=&lt;span&gt;new&lt;/span&gt; Array(),&lt;span&gt;//&lt;/span&gt;&lt;span&gt;arr=[]&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;      obj=&lt;span&gt;new&lt;/span&gt; Object();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;obj={}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　到了后来，我们开始进行面向对象的学习的时候就开始遇到下面的代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; Qwe(id) {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; Qwe.prototype.name = 'qwe'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; Qwe.prototype.age=18;
&lt;span&gt;6&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; asd = &lt;span&gt;new&lt;/span&gt; Qwe(2);
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　有一点基础的同学就可以得知我们按照&lt;strong&gt;Qwe&lt;/strong&gt;的样子制作了一个&lt;strong&gt;asd&lt;/strong&gt;，并且给了他一个独一无二的&lt;strong&gt;id&lt;/strong&gt;为&lt;strong&gt;2&lt;/strong&gt;。在这简单的几个代码中，我们就完成了对一个数组或者对象的创建，而new究竟在其中做了点啥呢？&lt;/p&gt;
&lt;p&gt;　　根据英语的字面意思翻译，new的意思是新的，也就是说创建arr，并且给arr赋值为新的数组（obj同理）。其实不然，我们在new的过程中只是模仿一个&lt;strong&gt;模子&lt;/strong&gt;（Array也好，Object也罢）新建了一个对象，并且继承了我们所使用的模子的一些方法和内容。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; Qwe(id) {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; Qwe.prototype.name = 'qwe'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; Qwe.prototype.age=18&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; asd = &lt;span&gt;new&lt;/span&gt; Qwe(2&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; asd.id&lt;span&gt;//&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; asd.name&lt;span&gt;//&lt;/span&gt;&lt;span&gt;'qwe'&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; asd.age&lt;span&gt;//&lt;/span&gt;&lt;span&gt;18&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　就拿上面的asd来说，它的id是构造函数Qwe设置的，除此之外所有的属性和方法都是继承自Qwe的原型对象——prototype属性。&lt;/p&gt;
&lt;p&gt;　　如果你上面的没看懂，那我就用通俗的语言来讲解一下。&lt;/p&gt;
&lt;p&gt;　　高中的时候其实很学渣，渣到上课天天玩手机（至于后来奋发图强混进一本院校是后话），当时玩了一款qq家园里面叫《江湖ol》的游戏。当时我玩的那个区是五区，仗着网速好手机好在那个区也算是排行榜前几的玩家。当时情人节搞活动，抽奖送坐骑情情兔，现在看来只不过是一堆可能有规律的乱码而已。因为时间过去很久了，我也无法完全想起所有，大概就是：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;情情兔
编号：&lt;/span&gt;00001&lt;span&gt;
速度：&lt;/span&gt;50&lt;span&gt;
防御：&lt;/span&gt;37&lt;span&gt;
敏捷：&lt;/span&gt;21&lt;span&gt;
攻击力：&lt;/span&gt;37&lt;span&gt;
生命值：&lt;/span&gt;500
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　因为我获得的是当时的全区第一个情情兔，所以我的编号是00001。用现在的眼光来看，无非是以下的样子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
情情兔 =&lt;span&gt; {
     编号: &lt;/span&gt;00001&lt;span&gt;,
     速度速度: &lt;/span&gt;50&lt;span&gt;,
     防御: &lt;/span&gt;37&lt;span&gt;,
     敏捷: &lt;/span&gt;21&lt;span&gt;,
     攻击力: &lt;/span&gt;37&lt;span&gt;,
     生命值: &lt;/span&gt;500&lt;span&gt;,
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　当我后来研究我和我朋友的装备的时候，我发现我的天字一号马和朋友的天字n号马的属性居然只有编号的差别！！！那么，无良的同行在制作这个坐骑的时候大概就是改一下编号吧：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; 情情兔数组=[];&lt;span&gt;//&lt;/span&gt;&lt;span&gt;安置情情兔坐骑&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;1000;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 　  &lt;span&gt;var&lt;/span&gt;&lt;span&gt; 情情兔 ;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;      情情兔 =&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;           编号: i,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;差别在此&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;           速度速度: 50&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;           防御: 37&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;           敏捷: 21&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;           攻击力: 37&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;           生命值: 500&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    } 
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    情情兔数组.push(情情兔);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 加载生产(情情兔数组);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;制作了大批量的有编号的情情&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　但是问题是，在这个伪代码中，我们要重复创建1000次的情情兔，然后给它赋值的对象值的属性仅仅有一个是不同的，这样就造成了一定意义上的浪费。作为一个勤（lan）奋（duo）的程序员，这种问题我们应为这样去做：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; 情情兔数组=[];&lt;span&gt;//&lt;/span&gt;&lt;span&gt;安置情情兔坐骑&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;1000;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; 　  &lt;span&gt;var&lt;/span&gt;&lt;span&gt; 情情兔 ;
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;      情情兔=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; 情情兔模板(i);
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;    情情兔数组.push(情情兔);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; 加载生产(情情兔数组);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;制作了大批量的有编号的情情&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　因此，我们可以先创造一个坐骑原型——情情兔模板，在这个里面的prototype呢我们放置所有相同数值的属性为新创建的对象提供可以继承属性的路径或者说目标。我们用new来实现一下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function &lt;/span&gt;情情兔模板&lt;span&gt;(id){&lt;br/&gt;&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id=&lt;span&gt;id &lt;br/&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;情情兔模板&lt;/span&gt;&lt;span&gt;.prototype.速度&lt;/span&gt;=50
&lt;/pre&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;span&gt;情情兔模板&lt;/span&gt;&lt;span&gt;.prototype.防御&lt;/span&gt;=37&lt;p&gt;情情兔模板&lt;span&gt;.prototype敏捷&lt;/span&gt;=21
&lt;/p&gt;&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;情情兔模板&lt;/span&gt;.prototype攻击力=37
&lt;/pre&gt;
&lt;pre&gt;
情情兔模板.prototype生命值=500
&lt;/pre&gt;
&lt;pre&gt;
var 情情兔1=new 情情兔模板(1)
&lt;/pre&gt;
&lt;pre&gt;
&lt;strong&gt;//情情兔1={编号：1，速度速度：50，防御：37，敏捷：21，攻击力：37，生命值：500}&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　OK，一个简单的情情兔模板就诞生了。&lt;/p&gt;
&lt;p&gt;　　但是到了这里，有的同学就要问了，既然是下面都是属性，那么为什么不直接就写一个&lt;strong&gt;LoveRabbit.prototype={速度速度=50，防御=37，敏捷=21，攻击力=37，生命值=500}&lt;/strong&gt;呢？其实当我们打印很多对象或者别的东西的prototype时候，会发现有一个叫做constructor的属性，字面翻译的意思就是构造函数，这个属性的值呢就是new后面的字样，也就是说，其实我们看到的种种都是一个构造函数，毕竟在js的世界中，后缀是（）的大部分都是一个运行的函数。&lt;/p&gt;
&lt;p&gt;　　那么我们就可以猜测了：在这个函数中，一开始呢我们肯定会创建一个新的对象，对象没有prototype属性，只有函数有prototype属性。每个对象的__proto__属性指向自身构造函数的prototype，也就是我们把新制造的对象的__proto__赋值为构造函数的prototype。当然呢，我们会给这个对象新加别的属性。&lt;/p&gt;
&lt;p&gt;　　因此，在上一步的情情兔模板的new的函数中，其实应该是这样的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; 情情兔模板(id){
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; 新情情兔 =&lt;span&gt; {}
  新情情兔 .__proto__ &lt;/span&gt;= 情情兔模板.prototy'&lt;span&gt;pe
  新情情兔 .id= id
  return 新情情兔 
}
情情兔模板.prototy&lt;/span&gt;pe =&lt;span&gt; {&lt;br/&gt;　　constructor:&lt;/span&gt;情情兔模板,//非常重要的一条，因为我们要知道构造函数，也就是来源。&lt;br/&gt;　　速度速度：50，&lt;br/&gt;　　防御：37，&lt;br/&gt;　　敏捷：21，&lt;br/&gt;　　攻击力：37,&lt;br/&gt;　　生命值：500&lt;br/&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在上面我们可以看出区别，new在这个构造函数中做了啥呢：&lt;/p&gt;
&lt;p&gt;　　　　1.首先，先创建了一个新的对象。&lt;/p&gt;
&lt;p&gt;　　　　2.然后呢，把构造函数的公共的属性复制了一份给这个新对象，这也就是prototype——原型。&lt;/p&gt;
&lt;p&gt;　　　　4.接着把私有属性赋赋值，毕竟创建就要造个独一无二的。&lt;/p&gt;
&lt;p&gt;　　　　3.返回这个新的对象。&lt;/p&gt;
&lt;p&gt;　　终于，我们就可以愉快地通过new来大批量的创建各种新的对象了。&lt;/p&gt;
&lt;p&gt;　　由此观之，new就是一个&lt;strong&gt;语法糖&lt;/strong&gt;，为了更好地节省代码，来体现程序员的聪（lan）明（duo）。&lt;/p&gt;

&lt;p&gt;　　如果您觉得我的博文有用，请不要吝啬您的&lt;strong&gt;赞&lt;/strong&gt;和&lt;strong&gt;关注&lt;/strong&gt;。如需&lt;strong&gt;转载&lt;/strong&gt;，请&lt;strong&gt;标明出处&lt;/strong&gt;，谢谢。&lt;/p&gt;

</description>
<pubDate>Sun, 25 Feb 2018 15:21:00 +0000</pubDate>
<dc:creator>阿尔卑斯de秘密</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lunlunshiwo/p/8466902.html</dc:identifier>
</item>
<item>
<title>NGUI的新手引导的实现 - 捡贝壳的小孩</title>
<link>http://www.cnblogs.com/lyrers/p/8471074.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lyrers/p/8471074.html</guid>
<description>&lt;p&gt;　　先声明一下，UNITY新手，如果说的有不对的地方，欢迎各位大神指正。&lt;/p&gt;
&lt;p&gt;　　最近在项目需要实现新手引导，最基础的需求就是需要一个带黑色遮罩的引导UI，类似下图这种:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1282439/201802/1282439-20180225222313199-1371569302.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　对，就是这么敷衍的UI，因为是我随手做的。&lt;/p&gt;
&lt;p&gt;　　这里有两个关键点:&lt;/p&gt;
&lt;p&gt;　　1. 黑色的遮罩要怎么做，才能挡住其他部分而留出目标的按钮&lt;/p&gt;
&lt;p&gt;　　2.点击事件要怎么处理&lt;/p&gt;
&lt;p&gt;　　我找到过一种解决方案: 添加一个顶层UI，添加一个黑色半透明的UIWidget，然后COPY一份要引导的空间的GameObject, 然后加到这个引导的UI上，只要这个COPY的GAMEOBJECT的深度比半透明黑的要高就行了。然后收到点击时间后，再去模拟点击原来的控件。这个方案应该是可行的，但是我没有采纳，主要是不想要这个拷贝的步骤，点击事件的模拟也不是一件开心的事情。我决定用另外一个方案，上层的遮罩的黑色半透明区域和boxcolider都只覆盖目标以外的部分，点击事件的话直接添加原来的事件监听里，来省下GameObject的拷贝的过程。&lt;/p&gt;

&lt;p&gt;　　实现我想要的黑色的遮罩的效果，最早我是想用一个笨办法：加4个UIWidget和4个BoxColider，就能彻底围住目标控件。这么做也不是不行，实在是有些丑陋，所幸我发现已经有人分享这样的控件: http://blog.csdn.net/lzdidiv/article/details/72293727&lt;/p&gt;
&lt;p&gt;　　感谢这位作者，我测试过，效果完全没问题。&lt;/p&gt;
&lt;p&gt;　　接下来是点击事件的问题。我添加了一个脚本NavControl，用来定位目标控件和做点击事件的添加的:&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;39&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
using System;
using System.Collections.Generic;
using UnityEngine;

public class NavControl : MonoBehaviour
{
    public static List&amp;lt;NavControl&amp;gt; activeControlList = new List&amp;lt;NavControl&amp;gt;();

    public string nodeId;
    public UIWidget targetWidget;

    private UIEventListener.VoidDelegate clickCallback;
    public bool AddOnClickEvent(UIEventListener.VoidDelegate callback)
    {
        if (callback == null)
            return false;

        UIEventListener listener = this.gameObject.GetComponent&amp;lt;UIEventListener&amp;gt;();
        if (listener == null)
        {
            UIToggle toggle = this.gameObject.GetComponent&amp;lt;UIToggle&amp;gt;();
            if (toggle)
            {
                EventDelegate.Add(toggle.onChange, onClick2);
            }
            else
            {
                Debug.LogError(string.Format(&quot;onAddClickEvent Can't not find event listener:{0}&quot;, this.nodeId));
                return false;
            }
        }
        else
        {
            listener.onClick += onClick;
        }

        clickCallback = callback;
        return true;
    }

    public void RemoveOnClickEvent()
    {
        UIEventListener listener = this.gameObject.GetComponent&amp;lt;UIEventListener&amp;gt;();
        if (listener == null)
        {
            UIToggle toggle = this.gameObject.GetComponent&amp;lt;UIToggle&amp;gt;();
            if (toggle)
            {
                EventDelegate.Remove(toggle.onChange, onClick2);
            }
            else
            {
                Debug.LogError(string.Format(&quot;onRemoveClickEvent Can't not find event listener:{0}&quot;, this.nodeId));
            }
            return;
        }
        else
        {
            listener.onClick -= onClick;
        }
    }

    public static NavControl getNavControl(string key)
    {
        for(int i = 0; i &amp;lt; activeControlList.Count; ++i)
        {
            if (activeControlList[i].nodeId == key)
            {
                return activeControlList[i];
            }
        }

        return null;
    }

    private void onClick(GameObject go1)
    {
        if (clickCallback == null || targetWidget == null)
            return;

        clickCallback(targetWidget.gameObject);
    }

    private void onClick2()
    {
        if (clickCallback == null || targetWidget == null)
            return;

        clickCallback(targetWidget.gameObject);
    }

    void Awake()
    {
        if (targetWidget == null)
        {
            targetWidget = this.gameObject.GetComponent&amp;lt;UIWidget&amp;gt;();
        }
    }

    void OnEnable()
    {
        activeControlList.Add(this);
    }

    void OnDisable()
    {
        activeControlList.Remove(this);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在AddOnClickEvent函数里面，可以看到我支持了两种情况的点击事件的插入:  UIEventListener和UIToggle, 在我的项目里，这两种已经足够覆盖新手引导的需求，如果有其他的需求，扩展这里的逻辑就是。&lt;/p&gt;
&lt;p&gt;　　在这个脚本里面，有一个nodeId的变量，nodeId必须是全局唯一的，这个是用到标记新手引导对应的控件。而另外一个成员targetWidget, 是用来做遮罩的对位的，如果没有设置，会默认从当前的GameObject上获取UIWidget&lt;/p&gt;
&lt;p&gt;　　接下来我写了个贼简单的demo，提供我的思路给大家参考。&lt;/p&gt;
&lt;p&gt;　　如第一个敷衍的图，上面有三个按钮, 现在我需要引导玩家依次点击按钮111，按钮222和按钮Close, prefabe结构如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1282439/201802/1282439-20180225225219421-655901807.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　在btn1,btn2和btn3上，我都添加NavControl的脚本&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1282439/201802/1282439-20180225225335507-2031813687.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里的NodeId我设置成和GameObject的名字一样，以示区分。&lt;/p&gt;
&lt;p&gt;在nav的gameObject下我添加UIMaskWidget的脚本。&lt;/p&gt;
&lt;p&gt;TestUI挂上了一个简单的测试脚本，代码如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class TestNav : MonoBehaviour {
    private GameObject btn1;
    private GameObject btn2;
    private GameObject btn3;
    private GameObject btnStart;
    private UIMaskWidget maskWidget;
    private Queue&amp;lt;string&amp;gt; navQueue = new Queue&amp;lt;string&amp;gt;();

        // Use this for initialization
        void Start () {
        navQueue.Enqueue(&quot;btn1&quot;);
        navQueue.Enqueue(&quot;btn2&quot;);
        navQueue.Enqueue(&quot;btn3&quot;);

        btn1 = gameObject.transform.FindChild(&quot;btn1&quot;).gameObject;
        btn2 = gameObject.transform.FindChild(&quot;btn2&quot;).gameObject;
        btn3 = gameObject.transform.FindChild(&quot;btn3&quot;).gameObject;
        btnStart = gameObject.transform.FindChild(&quot;btnStart&quot;).gameObject;
        maskWidget = gameObject.transform.FindChild(&quot;nav&quot;).GetComponent&amp;lt;UIMaskWidget&amp;gt;();

        UIEventListener.Get(btnStart).onClick += (GameObject go1) =&amp;gt;
        {
            btn1.SetActive(true);
            btn2.SetActive(true);
            btn3.SetActive(true);
            maskWidget.gameObject.SetActive(true);

            btnStart.SetActive(false);

            showNextNav();
        };

        UIEventListener.Get(btn1).onClick += (GameObject go) =&amp;gt;
        {

        };

        UIEventListener.Get(btn2).onClick += (GameObject go) =&amp;gt;
        {

        };

        UIEventListener.Get(btn3).onClick += (GameObject go) =&amp;gt;
        {

        };
        }

    void showNextNav()
    {
        if (navQueue.Count == 0)
        {
            maskWidget.gameObject.SetActive(false);
            return;
        }

        string key = navQueue.Dequeue();
        NavControl control = NavControl.getNavControl(key);
        if (control != null)
        {
            if (control.targetWidget != null)
            {
                this.maskWidget.transform.position = control.targetWidget.transform.position;
                this.maskWidget.width = control.targetWidget.width;
                this.maskWidget.height = control.targetWidget.height;

                control.AddOnClickEvent((GameObject btnGo) =&amp;gt; {
                    showNextNav();
                    }
                );
            }
        }
    }
        
        // Update is called once per frame
        void Update () {
        
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　关键的逻辑就在showNextNav这个函数里面, 调用NavControl的静态函数获取目标控件，然后设置UIMaskWidget的位置和遮罩的区域。&lt;/p&gt;
&lt;p&gt;　　代码比较简单，只是演示我的思路，有疑问或者异议，欢迎讨论。&lt;/p&gt;
&lt;p&gt;　　我的代码是基于unity5.3.4, ngui 3.8.2, 测试工程链接: https://files.cnblogs.com/files/lyrers/NavControl.zip。&lt;/p&gt;

</description>
<pubDate>Sun, 25 Feb 2018 15:04:00 +0000</pubDate>
<dc:creator>捡贝壳的小孩</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lyrers/p/8471074.html</dc:identifier>
</item>
<item>
<title>我的2017年终总结（PF项目框架设计心得分享 1.0rc new） - 恋月</title>
<link>http://www.cnblogs.com/lianyue/p/8470821.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lianyue/p/8470821.html</guid>
<description>&lt;p&gt;　　所得：在工作中我能涉及到许多我以前认为十分复杂的领域，结果发现它们并没有想象中的困难。从这一点里我学习到一切看似困难的东西，只是我们自己胆怯造成的，在没有尝试之前就妄下结论是多么愚蠢啊。之前我在另一个城市里就是因为不相信自己，而丧失了许多的机会，如果有了这些机会我事业上恐怕不会如今天这般不顺。所以我希望所有在困难面前畏首畏尾的朋友，你们大胆一点放开你们的怀抱，去拥抱那即将靠近的梦想，虽然无法保证结果可能是一次惨痛的失败。可是你不趁着你还敢梦想的年纪，那么后面的生活你就只能活在遗憾当中了。&lt;/p&gt;&lt;p&gt;　　所失：忙碌让我的神经麻木，甚至身体也有点力不从心，这就造成我在自己理想面前放慢了脚步。在此我也希望各位朋友要重视自己的健康，就算工作再怎么幸苦也不能因为拼命而轻视了它，别将生活的压力想象的太大。毕竟只有一个完好的人，才能体会到美好的生活，而工作只不过是为了生活而服务的。&lt;/p&gt;&lt;p&gt;　　虽然自己的确因为时间和身体的原因，在这个框架上花费的时间少了许多，可是我却没有停止我对它的期许，那便是做到真正的简单易用。为了做到这个我从2015年开始到现在几乎花了三年时间修改了两次结构，而PF框架现在的版本已经到了2.1，其基本的功能和性能得到了一定的保证。其中过程的艰辛，恐怕没有几个人能体会到。&lt;/p&gt;&lt;p&gt;　　PF改动：plain server（2014）-&amp;gt; plain framework 1（2015-2016） -&amp;gt; plain framework 2(2017) -&amp;gt; plain framework new(2018)&lt;/p&gt;&lt;p&gt;　　我只有一个简单的年份和版本变化来表示PF框架的蜕变过程，其实是一场非常不容易的变化。一开始这个还不能称之框架，那个时候我只是想简单的应付工作上的事情，为服务器打造一个稳定的底层库，即2014年的plain server。接着我发现只争对服务器来说根本无法满足我的要求，于是我重新修改了结构让它能够支持几乎所有的常见应有。接着说道现在比较稳定的版本PF2，它的改动最大的就是从语法上直接用到了C++11，使得框架本身能够支持更多新特性。然而PF2还是不能满足我，我将要进行各大一步的调整，在PF2的基础上我修改了框架的目录结构，让它看起来更加清晰易懂。&lt;/p&gt;&lt;p&gt;　　PFnew的新特性：快速安装（框架、插件）、单元测试（框架、应用）、灵活封装（接口）&lt;/p&gt;&lt;p&gt;　　对于现在的PFnew的快速安装目前只支持UNIX/LINUX的平台，当然后续会想办法支持WINDOWS系统。而单元测试则使用了gtest，目的是让一些问题更能及早的发现，这一点我也会征求更多的意见，因为我之前虽然接触过这个框架，只是一直没有使用，而对这个测试框架来说也不知道它的优缺点。至于灵活封装就是移除了核心接口中的许多依赖，我将这部分东西移到了插件中，现在的插件中就有如脚本插件（lua）、数据库插件（odbc）、网络协议插件（google protobuf），而这些插件可以根据应用的需要又框架本身提供接口来加载使用。而且如果有人用心的话，可能会在框架里发现一个有趣的模块，那就是数据库的语法封装部分（DB QUERY BUILDER），会支持大部分的数据库语法，这样使得我们想要随意切换不同数据库提供了良好的支持，当然这部分仍旧是尝试阶段。而且关于这个语法封装器，我参考了Laravel（PHP框架）的代码，有兴趣的同仁可以去了解一下。&lt;/p&gt;&lt;p&gt;　　在这里贴一段代码来看看我们PFnew的数据库语法的支持以及单元测试示例：&lt;/p&gt;&lt;div readability=&quot;237&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gtest/gtest.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf/engine/kernel.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf/db/query/grammars/grammar.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf/db/query/grammars/mysql_grammar.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf/db/connection.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf/db/query/builder.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf/support/helpers.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;enum&lt;/span&gt;&lt;span&gt; {
  kDBTypeODBC &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
};

&lt;/span&gt;&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; pf_db::query;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; pf_basic::type;

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt; DBQueryBuilder : &lt;span&gt;public&lt;/span&gt;&lt;span&gt; testing::Test {

 &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; SetUpTestCase() {
     
     GLOBALS[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log.print&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;First forbid the log print.&lt;/span&gt;
&lt;span&gt;
     GLOBALS[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;default.db.open&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
     GLOBALS[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;default.db.type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] =&lt;span&gt; kDBTypeODBC;
     GLOBALS[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;default.db.name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf_test&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
     GLOBALS[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;default.db.user&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
     GLOBALS[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;default.db.password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

     engine_.add_libraryload(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pf_plugin_odbc&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, {kDBTypeODBC});

     engine_.init();

     auto connection &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; pf_db::Connection(engine_.get_db());
     unique_move(pf_db::Connection, connection, connection_);
     auto builder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Builder(connection_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(), nullptr);
     unique_move(Builder, builder, builder_);
     
     auto mysql_grammar &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; grammars::MysqlGrammar();
     unique_move(grammars::Grammar, mysql_grammar, mysql_grammar_);
     auto mysql_builder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Builder(connection_.&lt;span&gt;get&lt;/span&gt;(), mysql_grammar_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;());
     unique_move(Builder, mysql_builder, mysql_builder_);
   }

   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; TearDownTestCase() {
     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;std::cout &amp;lt;&amp;lt; &quot;TearDownTestCase&quot; &amp;lt;&amp;lt; std::endl;&lt;/span&gt;
&lt;span&gt;   }

 &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
   &lt;/span&gt;&lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; SetUp() {
     builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
     mysql_builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
   }
   &lt;/span&gt;&lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; TearDown() {
   }

 &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt;:
   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt; pf_engine::Kernel engine_;
   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; std::unique_ptr&amp;lt;pf_db::Connection&amp;gt;&lt;span&gt; connection_;
   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; std::unique_ptr&amp;lt;grammars::Grammar&amp;gt;&lt;span&gt; mysql_grammar_;
   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; std::unique_ptr&amp;lt;Builder&amp;gt;&lt;span&gt; builder_;
   &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; std::unique_ptr&amp;lt;Builder&amp;gt;&lt;span&gt; mysql_builder_;

};

pf_engine::Kernel DBQueryBuilder::engine_;
std::unique_ptr&lt;/span&gt;&amp;lt;pf_db::Connection&amp;gt;&lt;span&gt; DBQueryBuilder::connection_{nullptr};
std::unique_ptr&lt;/span&gt;&amp;lt;Builder&amp;gt;&lt;span&gt; DBQueryBuilder::builder_{nullptr};
std::unique_ptr&lt;/span&gt;&amp;lt;Builder&amp;gt;&lt;span&gt; DBQueryBuilder::mysql_builder_{nullptr};
std::unique_ptr&lt;/span&gt;&amp;lt;grammars::Grammar&amp;gt;&lt;span&gt; DBQueryBuilder::mysql_grammar_{nullptr};

TEST_F(DBQueryBuilder, construct) {
  Builder &lt;/span&gt;&lt;span&gt;object&lt;/span&gt;&lt;span&gt;(nullptr, nullptr);
  pf_db::Connection connection(engine_.get_db());
  Builder builder_test1(&lt;/span&gt;&amp;amp;&lt;span&gt;connection, nullptr);
  grammars::Grammar grammar;
  Builder builder_test2(&lt;/span&gt;&amp;amp;connection, &amp;amp;&lt;span&gt;grammar);
}

TEST_F(DBQueryBuilder, testBasicSelect) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, builder_-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testBasicSelectWithGetColumns) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
  ASSERT_TRUE(builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;columns_.empty());
  
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, builder_-&amp;gt;&lt;span&gt;to_sql().c_str());
  ASSERT_TRUE(builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;columns_.empty());
}

TEST_F(DBQueryBuilder, testBasicSelectUseWritePdo) {

}

TEST_F(DBQueryBuilder, testBasicTableWrappingProtectsQuotationMarks) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;some\&quot;table&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;some\&quot;\&quot;table\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, builder_-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testAliasWrappingAsWholeConstant) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;x.y as foo.bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;baz&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select \&quot;x\&quot;.\&quot;y\&quot; as \&quot;foo.bar\&quot; from \&quot;baz\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, 
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testAliasWrappingWithSpacesInDatabaseName) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;w x.y.z as foo.bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;baz&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select \&quot;w x\&quot;.\&quot;y\&quot;.\&quot;z\&quot; as \&quot;foo.bar\&quot; from \&quot;baz\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testAddingSelects) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            add_select({&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).add_select({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;baz&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;boom&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select \&quot;foo\&quot;, \&quot;bar\&quot;, \&quot;baz\&quot;, \&quot;boom\&quot; from \&quot;users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testBasicSelectWithPrefix) {
  builder_&lt;/span&gt;-&amp;gt;get_grammar()-&amp;gt;set_table_prefix(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prefix_&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;prefix_users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testBasicSelectDistinct) {
  builder_&lt;/span&gt;-&amp;gt;distinct().&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select distinct \&quot;foo\&quot;, \&quot;bar\&quot; from \&quot;users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testBasicAlias) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo as bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select \&quot;foo\&quot; as \&quot;bar\&quot; from \&quot;users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testAliasWithPrefix) {
  builder_&lt;/span&gt;-&amp;gt;get_grammar()-&amp;gt;set_table_prefix(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prefix_&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users as people&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;prefix_users\&quot; as \&quot;prefix_people\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testJoinAliasesWithPrefix) {
  builder_&lt;/span&gt;-&amp;gt;get_grammar()-&amp;gt;set_table_prefix(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prefix_&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;services&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).join(
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;translations AS t&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;t.item_id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;services.id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
   ASSERT_STREQ(
       &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;prefix_services\&quot; inner join \&quot;prefix_translations\&quot; \&lt;/span&gt;
&lt;span&gt;as&lt;/span&gt; \&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prefix_t\&quot; on \&quot;prefix_t\&quot;.\&quot;item_id\&quot; = \&quot;prefix_services\&quot;.\&quot;id\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
       builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testBasicTableWrapping) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;public.users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;public\&quot;.\&quot;users\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testWhenCallback) {
  auto callback &lt;/span&gt;= [](Builder *query, &lt;span&gt;const&lt;/span&gt; variable_t &amp;amp;&lt;span&gt;condition) {
    ASSERT_TRUE(condition.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&lt;span&gt;());
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  };
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).when(&lt;span&gt;true&lt;/span&gt;, callback).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).when(&lt;span&gt;false&lt;/span&gt;, callback).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testWhenCallbackWithReturn) {

}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; assertEquals(
    &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; variable_array_t &amp;amp;a, &lt;span&gt;const&lt;/span&gt; variable_array_t &amp;amp;b, int32_t line = -&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) {
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (line != -&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;assertEquals: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; line &amp;lt;&amp;lt;&lt;span&gt; std::endl;
  ASSERT_TRUE(a.size() &lt;/span&gt;==&lt;span&gt; b.size());
  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (size_t i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; a.size(); ++&lt;span&gt;i)
    ASSERT_STREQ(a[i].data.c_str(), b[i].data.c_str());
}

TEST_F(DBQueryBuilder, testWhenCallbackWithDefault) {
  auto callback &lt;/span&gt;= [](Builder *query, &lt;span&gt;const&lt;/span&gt; variable_t &amp;amp;&lt;span&gt;condition) {
    ASSERT_STREQ(condition.c_str(), &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;truthy&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  };
  auto def &lt;/span&gt;= [](Builder *query, &lt;span&gt;const&lt;/span&gt; variable_t &amp;amp;&lt;span&gt;condition) {
    ASSERT_TRUE(condition &lt;/span&gt;== &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
  };

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).when(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;truthy&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, callback, def).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings(), __LINE__);

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).when(&lt;span&gt;0&lt;/span&gt;, callback, def).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  assertEquals({&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings(), __LINE__);
}

TEST_F(DBQueryBuilder, testUnlessCallback) {
  auto callback &lt;/span&gt;= [](Builder *query, &lt;span&gt;const&lt;/span&gt; variable_t &amp;amp;&lt;span&gt;condition) {
    ASSERT_FALSE(condition.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&lt;span&gt;());
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  };

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).unless(&lt;span&gt;false&lt;/span&gt;, callback).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());


  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).unless(&lt;span&gt;true&lt;/span&gt;, callback).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

}

TEST_F(DBQueryBuilder, testUnlessCallbackWithReturn) {

}

TEST_F(DBQueryBuilder, testUnlessCallbackWithDefault) {
  auto callback &lt;/span&gt;= [](Builder *query, &lt;span&gt;const&lt;/span&gt; variable_t &amp;amp;&lt;span&gt;condition) {
    ASSERT_TRUE(condition &lt;/span&gt;== &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  };
  auto def &lt;/span&gt;= [](Builder *query, &lt;span&gt;const&lt;/span&gt; variable_t &amp;amp;&lt;span&gt;condition) {
    ASSERT_STREQ(condition.c_str(), &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;truthy&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
  };

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).unless(&lt;span&gt;0&lt;/span&gt;, callback, def).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings(), __LINE__);

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).unless(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;truthy&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, callback, def).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  assertEquals({&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings(), __LINE__);
}

TEST_F(DBQueryBuilder, testTapCallback) {
  auto callback &lt;/span&gt;= [](Builder *&lt;span&gt;query) {
    query&lt;/span&gt;-&amp;gt;&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  };

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).tap(callback).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;); 
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? and \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testBasicWheres) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testMySqlWrappingProtectsQuotationMarks) {
&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
  builder_-&amp;gt;select({&quot;*&quot;}).from(&quot;some`table&quot;);
  ASSERT_STREQ(&quot;select * from `some``table`&quot;,
               builder_-&amp;gt;to_sql().c_str());
*&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
}

TEST_F(DBQueryBuilder, testDateBasedWheresAcceptsTwoArguments) {
  auto builder &lt;/span&gt;= mysql_builder_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_date(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where date(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_day(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where day(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_month(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where month(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());

  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_year(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where year(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
}

TEST_F(DBQueryBuilder, testWhereDayMySql) {
  auto builder &lt;/span&gt;= mysql_builder_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_day(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where day(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;}, builder-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testWhereMonthMySql) {
  auto builder &lt;/span&gt;= mysql_builder_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_month(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where month(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;}, builder-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testWhereYearMySql) {
  auto builder &lt;/span&gt;= mysql_builder_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_year(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;2018&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where year(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;2018&lt;/span&gt;}, builder-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testWhereTimeMySql) {
  auto builder &lt;/span&gt;= mysql_builder_.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
  builder&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_time(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;created_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;22:00&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from `users` where time(`created_at`) = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;22:00&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testWhereDatePostgres) {

}

TEST_F(DBQueryBuilder, testWhereDayPostgres) {

}

TEST_F(DBQueryBuilder, testWhereMonthPostgres) {

}

TEST_F(DBQueryBuilder, testWhereYearPostgres) {

}

TEST_F(DBQueryBuilder, testWhereDaySqlite) {

}

TEST_F(DBQueryBuilder, testWhereMonthSqlite) {

}

TEST_F(DBQueryBuilder, testWhereYearSqlite) {

}

TEST_F(DBQueryBuilder, testWhereDaySqlServer) {

}

TEST_F(DBQueryBuilder, testWhereMonthSqlServer) {

}

TEST_F(DBQueryBuilder, testWhereYearSqlServer) {

}

TEST_F(DBQueryBuilder, testWhereBetweens) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_between(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, {&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;});
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; between ? and ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings());

  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;clear();
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}).&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_notbetween(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, {&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;});
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; not between ? and ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testBasicOrWheres) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;).or_where(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? or \&quot;email\&quot; = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testRawWheres) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).where_raw(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id = ? or email = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, {&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;});
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where id = ? or email = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings());
}

TEST_F(DBQueryBuilder, testRawOrWheres) {
  builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;select&lt;/span&gt;({&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}).
            &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).&lt;span&gt;where&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;).or_where_raw(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;email = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, {&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;});
  ASSERT_STREQ(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select * from \&quot;users\&quot; where \&quot;id\&quot; = ? or email = ?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
               builder_&lt;/span&gt;-&amp;gt;&lt;span&gt;to_sql().c_str());
  assertEquals({&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}, builder_-&amp;gt;&lt;span&gt;get_bindings());
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description>
<pubDate>Sun, 25 Feb 2018 13:51:00 +0000</pubDate>
<dc:creator>恋月</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lianyue/p/8470821.html</dc:identifier>
</item>
<item>
<title>TensorFlow 实战之实现卷积神经网络 - 蓝色之旅</title>
<link>http://www.cnblogs.com/georgeli/p/8470745.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/georgeli/p/8470745.html</guid>
<description>
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;zh-cn&quot;&gt;&lt;span lang=&quot;zh-cn&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;zh-cn&quot;&gt;&lt;span lang=&quot;zh-cn&quot;&gt;&lt;span&gt;本文已同步本人另外一个博客（http://blog.csdn.net/qq_37608890/article/details/79371347）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;zh-cn&quot;&gt;&lt;span lang=&quot;zh-cn&quot;&gt;&lt;span&gt;&lt;span&gt;本文根据最近学习TensorFlow书籍网络文章的情况,特将一些学习心得做了总结,详情如下.如有不当之处,请各位大拿多多指点,在此谢过。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;一、相关性概念&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1&lt;span lang=&quot;zh-CN&quot;&gt;、卷积神经网络（ConvolutionNeural Network&lt;span lang=&quot;zh-CN&quot;&gt;，CNN&lt;span lang=&quot;zh-CN&quot;&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;            19&lt;span lang=&quot;zh-CN&quot;&gt;世纪60&lt;span lang=&quot;zh-CN&quot;&gt;年代科学家最早提出感受野（ReceptiveField&lt;span lang=&quot;zh-CN&quot;&gt;）。当时通过对猫视觉皮层细胞研究，科学家发现每一个视觉神经元只会处理一小块区域的视觉图像，即感受野。20&lt;span lang=&quot;zh-CN&quot;&gt;世纪80&lt;span lang=&quot;zh-CN&quot;&gt;年代，日本科学家提出神经认知机（Neocognitron&lt;span lang=&quot;zh-CN&quot;&gt;）的概念，被视为卷积神经网络最初的实现原型。神经认知机中包含两类神经元：S-cells&lt;span lang=&quot;zh-CN&quot;&gt;和C-cells&lt;span lang=&quot;zh-CN&quot;&gt;。S-cells&lt;span lang=&quot;zh-CN&quot;&gt;用来抽取特征，对应我们现在主流卷积神经网络中的卷积核滤波操作；C-cells&lt;span lang=&quot;zh-CN&quot;&gt;用来抗形变，对应现在的激活函数、最大池化（Max-Pooling&lt;span lang=&quot;zh-CN&quot;&gt;）等操作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;一般情况下，卷积神经网络由多个卷积层构成，每个卷积层通常会进行如下操作：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(1) &lt;span lang=&quot;zh-CN&quot;&gt;图像通过多个不同的卷积核的滤波，并加偏置（bias&lt;span lang=&quot;zh-CN&quot;&gt;），提取出局部特征，每一个卷积核会映射出一个新的2D&lt;span lang=&quot;zh-CN&quot;&gt;图像。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(2) &lt;span lang=&quot;zh-CN&quot;&gt;将前面卷积核的滤波处理结果，进行非线性的激活函数处理。目前最常见的是使用ReLU&lt;span lang=&quot;zh-CN&quot;&gt;函数，之前Sigmoid&lt;span lang=&quot;zh-CN&quot;&gt;函数应用较多。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(3)&lt;span lang=&quot;zh-CN&quot;&gt;多激活函数处理的结果再进行池化操作（即降采样，例如：将4*4&lt;span lang=&quot;zh-CN&quot;&gt;的图片降为1*1&lt;span lang=&quot;zh-CN&quot;&gt;的图片），一般会使用最大池化，保留最显著特征，并提升模型畸变容忍能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;这几个步骤就构成了最常见的卷积层，也可以再加上一个&lt;/span&gt;&lt;/span&gt;&lt;span&gt;LRN&lt;span lang=&quot;zh-CN&quot;&gt;（LocalResponse Normalization&lt;span lang=&quot;zh-CN&quot;&gt;，局部响应归一化层）层，现在非常流行的Trick&lt;span lang=&quot;zh-CN&quot;&gt;还有BatchNormalization&lt;span lang=&quot;zh-CN&quot;&gt;等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2&lt;span lang=&quot;zh-CN&quot;&gt;、池化层&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3&lt;span lang=&quot;zh-CN&quot;&gt;、卷积核尺寸&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;4&lt;span lang=&quot;zh-CN&quot;&gt;、神经网络算法相关特性&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.1&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;、优点&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       （1）&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;可以高效提取特征。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;                 当我们面对一个分类任务时，传统的机器学习算法，一般要首先明确feature和label，然后拿数据取“喂”训练模型并保存，最后测试模型的准确性。这就需要我们确定好特征，当特征数目很少就无法精确进行分类而引起欠拟合；当特征数目很多，又会在分类过程中太过于看重某个特征引起分类错误，产生过拟合。&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;而神经网络则不需要做大量的特征工程，可以直接把数据“灌”进去而让其自身训练，自我“修正”，即可达到预期效果。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;     （2）数据格式更加简易&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;　　     利用传统的机器学习解决分类问题时，数据不能直接“灌”进去的，需要对数据进行一些处理，譬如量纲的归一化，格式的转化等等，然而在神经网络里却不需要额外对数据做过多的处理。&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;     （3） 参数数目的少量性&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;　　     同样在面对一个分类问题时，利用传统机器学习SVM&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;来做的话，需要涉及核函数，惩罚因子，松弛变量等等参数，而这些不同的参数组合会对模型效果产生不一样的影响，想要迅速而又准确的得到最适合模型的参数，需要对相关理论知识有深入研究，但&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;对于一个基本的三层神经网络来说(&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;输入-&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;隐含-&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;输出)&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;，只需要初始化时给每一个神经元上随机的赋予一个权重w&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;和偏置项b&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;，在训练过程中，这两个参数就会不断的修正，调整到最优质，使模型的误差最小。所以从这个角度来看，我们的工作效率会更佳。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;4.2、缺点&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;             &lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;如果我们加深我网络层，每一个网络层都增加神经元数量，则参数的个数将是&lt;/span&gt;&lt;/span&gt;M*N&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;（&lt;/span&gt;&lt;/span&gt;m&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;为网络层数，&lt;/span&gt;&lt;/span&gt;N&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;为每层神经元个数），这样一来参数很多，引起模型复杂化，就更加不好调参，进而会更加容易导致过拟合。另外，从神经网络的反向传播的过程来看，梯度在反向传播时，不断的迭代会导致梯度越来越小，引起梯度趋近于&lt;/span&gt;&lt;/span&gt;0（梯度消失），梯度消失就使得&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;权值无法更新，这个神经元的存在就毫无意义，很难导致收敛。尤其是在图像领域，直接使用最基本的神经网络，是不合理的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;二、卷积神经网络基本原理&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1&lt;span lang=&quot;zh-CN&quot;&gt;、基本阐述&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;         &lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;现在有一图像，其尺寸大小是&lt;/span&gt;&lt;/span&gt;&lt;span&gt;1000&lt;span lang=&quot;zh-CN&quot;&gt;像素*1000&lt;span lang=&quot;zh-CN&quot;&gt;像素且设定为黑白图像，也就是只有一个颜色通道，则一张图片就要100&lt;span lang=&quot;zh-CN&quot;&gt;万个像素点，输入数据维度也是100&lt;span lang=&quot;zh-CN&quot;&gt;万维。如果连接的现在隐含层大小也是同样大小（100&lt;span lang=&quot;zh-CN&quot;&gt;万个隐含节点），最后将产生100&lt;span lang=&quot;zh-CN&quot;&gt;万*100&lt;span lang=&quot;zh-CN&quot;&gt;万即一亿万个连接。仅仅一个全连接（FullConnected Layer&lt;span lang=&quot;zh-CN&quot;&gt;），就有一万亿连接的权重需要去训练，目前看，显然是不划算不现实。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;通过局部连接（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;LocalConnect&lt;span lang=&quot;zh-CN&quot;&gt;）方法优化解决：由于每一个感受野只接受一小块区域的信号，且这一小块区域内的像素是互相关联的，每一个神经元不需要接收全部像素点的信息，只需要接收局部的像素点作为输入，而后将所有这些神经元收到的局部信息综合起来，就可以得到全局信息。假设局部感受野大小是10*10&lt;span lang=&quot;zh-CN&quot;&gt;，即每个隐含节点只与10*10&lt;span lang=&quot;zh-CN&quot;&gt;个像素点相连，现在只需要10*100&lt;span lang=&quot;zh-CN&quot;&gt;万即1&lt;span lang=&quot;zh-CN&quot;&gt;亿个连接。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;现在隐含层每一个节点都与&lt;/span&gt;&lt;/span&gt;&lt;span&gt;10*10&lt;span lang=&quot;zh-CN&quot;&gt;的像素相连，即每一个隐含层节点都拥有100&lt;span lang=&quot;zh-CN&quot;&gt;个参数。假设我们的局部连接方式是卷积操作，即默认每一个隐含节点的参数都完全一样，这样参数从1&lt;span lang=&quot;zh-CN&quot;&gt;亿降为100&lt;span lang=&quot;zh-CN&quot;&gt;。不管图像大小是多大，一律都是这个10*10=100&lt;span lang=&quot;zh-CN&quot;&gt;个参数，即卷积核尺寸，显然卷积核对缩小参数数量贡献非常大、意义非凡。因此，此时，我们不需要再担心有多少隐含节点或者图片多大，参数量只跟卷积核的大小有关，即所谓的权值共享。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;总结：卷积神经网络要素是局部连接（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;LocalConnection&lt;span lang=&quot;zh-CN&quot;&gt;）、权值共享（WeightSharing&lt;span lang=&quot;zh-CN&quot;&gt;）和池化层（Pooling&lt;span lang=&quot;zh-CN&quot;&gt;）中的降采样（Down-Sampling&lt;span lang=&quot;zh-CN&quot;&gt;）。其中，局部连接和权值共享降低了参数量，训练复杂度被大大下降、过拟合被减轻。同时，权值共享还赋予了卷积网络对平移的容忍性，而池化层降采样则进一步降低了输出参数量，并赋予模型对轻度形变的容忍性，提供了模型的泛化能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2&lt;span lang=&quot;zh-CN&quot;&gt;、LeNet5&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;              1994&lt;span lang=&quot;zh-CN&quot;&gt;年，大名鼎鼎的LeNet5&lt;span lang=&quot;zh-CN&quot;&gt;诞生，作为最早的深层卷积神经网络之一，推动了深度学习的发展。自1998&lt;span lang=&quot;zh-CN&quot;&gt;年开始，在多次成功迭代之后，由Yann LeCun&lt;span lang=&quot;zh-CN&quot;&gt;完成的开拓性成果被命名为LeNet5&lt;span lang=&quot;zh-CN&quot;&gt;。LeCun&lt;span lang=&quot;zh-CN&quot;&gt;认为，可训练参数的卷积层是一种利用少量参数在图像的多个位置上提取相似特征的有效方式，这和直接把每个像素作为多层神经网络的输入不一样。像素不应该被使用在输入层，因为图像具有很强的空间相关性，而使用图像中独立的像素直接作为输入则利用不到这些相关性。笔者认为，这些内容比较重要。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;在当时，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;LeNet5&lt;span lang=&quot;zh-CN&quot;&gt;的特性如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(1&lt;span lang=&quot;zh-CN&quot;&gt;）每个卷积层包含三个部分：卷积、池化和非线性激活函数；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;2&lt;span lang=&quot;zh-CN&quot;&gt;）使用卷积提取空间特征；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;3&lt;span lang=&quot;zh-CN&quot;&gt;）降采样（Subsample&lt;span lang=&quot;zh-CN&quot;&gt;）的平均池化层（AveragePooling&lt;span lang=&quot;zh-CN&quot;&gt;）；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;4&lt;span lang=&quot;zh-CN&quot;&gt;）双曲正切（Tanh&lt;span lang=&quot;zh-CN&quot;&gt;）或S&lt;span lang=&quot;zh-CN&quot;&gt;型（Sigmoid&lt;span lang=&quot;zh-CN&quot;&gt;）的激活函数；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;5&lt;span lang=&quot;zh-CN&quot;&gt;）MLP&lt;span lang=&quot;zh-CN&quot;&gt;作为最后的分类器；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;6&lt;span lang=&quot;zh-CN&quot;&gt;）层与层之间的稀疏性连接减少计算复杂度。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;三、&lt;/span&gt;&lt;/span&gt;&lt;span&gt;TensorFlow &lt;span lang=&quot;zh-CN&quot;&gt;实现简单的卷积网络&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1&lt;span lang=&quot;zh-CN&quot;&gt;、简要说明&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;            &lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;这里使用的数据集依然是&lt;/span&gt;&lt;/span&gt;&lt;span&gt;MNIST&lt;span lang=&quot;zh-CN&quot;&gt;，使用两个卷积层加一个全连接层构建一个简单但非常有代表性的卷积神经网络，预计准确率约为99.2%&lt;span lang=&quot;zh-CN&quot;&gt;左右。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2&lt;span lang=&quot;zh-CN&quot;&gt;、实现过程&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;96&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
#载入MNIST数据集，创建默认的Interactive Session。
from tensorflow.examples.tutorials.mnist import input_data
import tensorflow as tf
mnist = input_data.read_data_sets(&quot;MNIST_data/&quot;, one_hot=True)
sess = tf.InteractiveSession()

#定义初始化函数，以便重复使用创建权重、偏置、卷积层、池化层。
def weight_variable(shape):
  initial = tf.truncated_normal(shape, stddev=0.1)
  return tf.Variable(initial)

def bias_variable(shape):
  initial = tf.constant(0.1, shape=shape)
  return tf.Variable(initial)
  
def conv2d(x, W):
  return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')

def max_pool_2x2(x):
  return tf.nn.max_pool(x, ksize=[1, 2, 2, 1],
                        strides=[1, 2, 2, 1], padding='SAME')  

#在设计卷积神经网络结构之前，定义输入的placeholder，x是特征，y_是真实Label。
#由于卷积神经网络会使用到空间结构信息，所以，需要将1D的输入向量转为2D图片结构，即从1*784的形式转换为原始的28*28结构。
#因为只有一个颜色通道，所以最终尺寸为[-1,28,28,1]，其中‘-1’代表样本数量不固定，'1'代表颜色通道数量。
x = tf.placeholder(tf.float32, [None, 784])
y_ = tf.placeholder(tf.float32, [None, 10])
x_image = tf.reshape(x, [-1,28,28,1])
#定义第一个卷积层。
#先使用前面函数进行初始化，包括weights和bias。其中[5,5,1,32]代表卷积核尺寸为5**5，1个颜色通道，32个不同的卷积核。
W_conv1 = weight_variable([5, 5, 1, 32])
b_conv1 = bias_variable([32])
h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)
h_pool1 = max_pool_2x2(h_conv1)
#定义第二个卷积层。
#基本与第一个卷积层一样，只是其中的卷积核数量变成64.
W_conv2 = weight_variable([5, 5, 32, 64])
b_conv2 = bias_variable([64])
h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)
h_pool2 = max_pool_2x2(h_conv2)

W_fc1 = weight_variable([7 * 7 * 64, 1024])
b_fc1 = bias_variable([1024])
h_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])
h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)
#为了减轻过拟合，使用一个Dropout层，其用法是通过一个placeholder传入keep_prob比率来控制。
keep_prob = tf.placeholder(tf.float32)
h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)

W_fc2 = weight_variable([1024, 10])
b_fc2 = bias_variable([10])
y_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)
#定义损失函数cross_entropy，这里选择Adam优化器。
cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y_conv), reduction_indices=[1]))
train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)
#继续定义评测准确率操作。
correct_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1))
accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))

#开始训练过程。
tf.global_variables_initializer().run()
for i in range(20000):
  batch = mnist.train.next_batch(50)
  if i%100 == 0:
    train_accuracy = accuracy.eval(feed_dict={
        x:batch[0], y_: batch[1], keep_prob: 1.0})
    print(&quot;step %d, training accuracy %g&quot;%(i, train_accuracy))
  train_step.run(feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})
#全部训练完毕，在最终的测试集上进行全面测试，得到整体的分类准确率。
print(&quot;test accuracy %g&quot;%accuracy.eval(feed_dict={
    x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;3&lt;span lang=&quot;zh-CN&quot;&gt;、执行结果&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;49&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
Extracting MNIST_data/train-images-idx3-ubyte.gz
Extracting MNIST_data/train-labels-idx1-ubyte.gz
Extracting MNIST_data/t10k-images-idx3-ubyte.gz
Extracting MNIST_data/t10k-labels-idx1-ubyte.gz
step 0, training accuracy 0.1
step 100, training accuracy 0.82
step 200, training accuracy 0.9
step 300, training accuracy 0.9
step 400, training accuracy 0.96
step 500, training accuracy 0.9
step 600, training accuracy 0.94
step 700, training accuracy 0.96
step 800, training accuracy 0.94
step 900, training accuracy 0.98
.     .      .       .       .

step 19600, training accuracy 1
step 19700, training accuracy 1
step 19800, training accuracy 1
step 19900, training accuracy 1
test accuracy 0.9929
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;4&lt;span lang=&quot;zh-CN&quot;&gt;、模型分析&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;             CNN&lt;span lang=&quot;zh-CN&quot;&gt;模型的最终准确率约为99.2%&lt;span lang=&quot;zh-CN&quot;&gt;，基本上可以满足对手写数字识别准确率的初步要求。相比于之前的MLP2%&lt;span lang=&quot;zh-CN&quot;&gt;的错误率，CNN&lt;span lang=&quot;zh-CN&quot;&gt;下降了60%&lt;span lang=&quot;zh-CN&quot;&gt;左右。这里的性能提升主要在于更佳的网络设计，也就是卷积网络对图像特征的提取和抽象能力。依靠卷积核的权值共享，CNN&lt;span lang=&quot;zh-CN&quot;&gt;的参数数量没有爆炸，降低计算量的同时也减去了过拟合，所以，整个模型的性能会有较大的提升。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;四、&lt;/span&gt;&lt;/span&gt;&lt;span&gt;TensorFlow&lt;span lang=&quot;zh-CN&quot;&gt;实现进阶的卷积网络&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1&lt;span lang=&quot;zh-CN&quot;&gt;、基本介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;          &lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;这里使用&lt;/span&gt;&lt;/span&gt;&lt;span&gt;CIFAR-10&lt;span lang=&quot;zh-CN&quot;&gt;数据集，包含60,000&lt;span lang=&quot;zh-CN&quot;&gt;张32*32&lt;span lang=&quot;zh-CN&quot;&gt;的彩色图像，其中训练集50,000&lt;span lang=&quot;zh-CN&quot;&gt;张，测试10,000&lt;span lang=&quot;zh-CN&quot;&gt;张，一共标注为10&lt;span lang=&quot;zh-CN&quot;&gt;类，分别为airplane&lt;span lang=&quot;zh-CN&quot;&gt;、automobile&lt;span lang=&quot;zh-CN&quot;&gt;、bird&lt;span lang=&quot;zh-CN&quot;&gt;、cat&lt;span lang=&quot;zh-CN&quot;&gt;、deer&lt;span lang=&quot;zh-CN&quot;&gt;、dog&lt;span lang=&quot;zh-CN&quot;&gt;、frog&lt;span lang=&quot;zh-CN&quot;&gt;、horse&lt;span lang=&quot;zh-CN&quot;&gt;、shhip&lt;span lang=&quot;zh-CN&quot;&gt;、truck&lt;span lang=&quot;zh-CN&quot;&gt;，，每一类图片6000&lt;span lang=&quot;zh-CN&quot;&gt;张，其中没有任何重叠情况发生，例如：automobile &lt;span lang=&quot;zh-CN&quot;&gt;只包括小型汽车，truck&lt;span lang=&quot;zh-CN&quot;&gt;只包括卡车，不会出现一张图片展现两类物体的现象。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2&lt;span lang=&quot;zh-CN&quot;&gt;、实现过程&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;147&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
#载入数据
import cifar10,cifar10_input
import tensorflow as tf
import numpy as np
import time

max_steps = 3000  #训练轮数
batch_size = 128
data_dir = '/tmp/cifar10_data/cifar-10-batches-bin'#下载数据默认路径。


def variable_with_weight_loss(shape, stddev, wl):
    var = tf.Variable(tf.truncated_normal(shape, stddev=stddev))
    if wl is not None:
        weight_loss = tf.multiply(tf.nn.l2_loss(var), wl, name='weight_loss')
        tf.add_to_collection('losses', weight_loss)
    return var

#计算CNN的损失。
def loss(logits, labels):

    labels = tf.cast(labels, tf.int64)
    cross_entropy = tf.nn.sparse_softmax_cross_entropy_with_logits(
        logits=logits, labels=labels, name='cross_entropy_per_example')
    cross_entropy_mean = tf.reduce_mean(cross_entropy, name='cross_entropy')
    tf.add_to_collection('losses', cross_entropy_mean)

    return tf.add_n(tf.get_collection('losses'), name='total_loss')  

cifar10.maybe_download_and_extract()

images_train, labels_train = cifar10_input.distorted_inputs(data_dir=data_dir,
                                                            batch_size=batch_size)

images_test, labels_test = cifar10_input.inputs(eval_data=True,
                                                data_dir=data_dir,
                                                batch_size=batch_size)                                              

image_holder = tf.placeholder(tf.float32, [batch_size, 24, 24, 3])
label_holder = tf.placeholder(tf.int32, [batch_size])

#创建第一个卷积层。
weight1 = variable_with_weight_loss(shape=[5, 5, 3, 64], stddev=5e-2, wl=0.0)
kernel1 = tf.nn.conv2d(image_holder, weight1, [1, 1, 1, 1], padding='SAME')
bias1 = tf.Variable(tf.constant(0.0, shape=[64]))
conv1 = tf.nn.relu(tf.nn.bias_add(kernel1, bias1))
pool1 = tf.nn.max_pool(conv1, ksize=[1, 3, 3, 1], strides=[1, 2, 2, 1],
                       padding='SAME')
norm1 = tf.nn.lrn(pool1, 4, bias=1.0, alpha=0.001 / 9.0, beta=0.75)

#创建第二个卷积层。
weight2 = variable_with_weight_loss(shape=[5, 5, 64, 64], stddev=5e-2, wl=0.0)
kernel2 = tf.nn.conv2d(norm1, weight2, [1, 1, 1, 1], padding='SAME')
bias2 = tf.Variable(tf.constant(0.1, shape=[64]))
conv2 = tf.nn.relu(tf.nn.bias_add(kernel2, bias2))
norm2 = tf.nn.lrn(conv2, 4, bias=1.0, alpha=0.001 / 9.0, beta=0.75)
pool2 = tf.nn.max_pool(norm2, ksize=[1, 3, 3, 1], strides=[1, 2, 2, 1],
                       padding='SAME')
#使用一个全连接层，先把第二个卷积层的输出结果flatten,将每个样本都变成一维向量。
reshape = tf.reshape(pool2, [batch_size, -1])
dim = reshape.get_shape()[1].value
weight3 = variable_with_weight_loss(shape=[dim, 384], stddev=0.04, wl=0.004)
bias3 = tf.Variable(tf.constant(0.1, shape=[384]))
local3 = tf.nn.relu(tf.matmul(reshape, weight3) + bias3)
#下面这个使用的全连接层，其隐含节点数下降了一半。
weight4 = variable_with_weight_loss(shape=[384, 192], stddev=0.04, wl=0.004)
bias4 = tf.Variable(tf.constant(0.1, shape=[192]))                                      
local4 = tf.nn.relu(tf.matmul(local3, weight4) + bias4)

weight5 = variable_with_weight_loss(shape=[192, 10], stddev=1/192.0, wl=0.0)
bias5 = tf.Variable(tf.constant(0.0, shape=[10]))
logits = tf.add(tf.matmul(local4, weight5), bias5)
loss = loss(logits, label_holder)
train_op = tf.train.AdamOptimizer(1e-3).minimize(loss) #0.72
top_k_op = tf.nn.in_top_k(logits, label_holder, 1)
sess = tf.InteractiveSession()
tf.global_variables_initializer().run()
tf.train.start_queue_runners()
#正式开始训练。
for step in range(max_steps):
    start_time = time.time()
    image_batch,label_batch = sess.run([images_train,labels_train])
    _, loss_value = sess.run([train_op, loss],feed_dict={image_holder: image_batch, 
                                                         label_holder:label_batch})
    duration = time.time() - start_time
    if step % 10 == 0:
        examples_per_sec = batch_size / duration
        sec_per_batch = float(duration)
    
        format_str = ('step %d, loss = %.2f (%.1f examples/sec; %.3f sec/batch)')
        print(format_str % (step, loss_value, examples_per_sec, sec_per_batch))
    
#评测模型在测试集上的准确率。
num_examples = 10000
import math
num_iter = int(math.ceil(num_examples / batch_size))
true_count = 0  
total_sample_count = num_iter * batch_size
step = 0
while step &amp;lt; num_iter:
    image_batch,label_batch = sess.run([images_test,labels_test])
    predictions = sess.run([top_k_op],feed_dict={image_holder: image_batch,
                                                 label_holder:label_batch})
    true_count += np.sum(predictions)
    step += 1
#最后，将准确率的评测结果计算并输出。
precision = true_count / total_sample_count
print('precision @ 1 = %.3f' % precision)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;3&lt;span lang=&quot;zh-CN&quot;&gt;、执行结果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                由于笔者试了几次CIFAR-10模块，最后一步失败，所以没能正确显示，后续找机会再试试，但以笔者的初步判断，在CIFAR-10安装成功的情况下，执行结果应该是没问题的。感兴趣的朋友可以再看看，这里就不贴出相关结果了，望各位网友理解。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;4&lt;span lang=&quot;zh-CN&quot;&gt;、模型分析&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;         &lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;在&lt;/span&gt;&lt;/span&gt;&lt;span&gt;CIFAR-10&lt;span lang=&quot;zh-CN&quot;&gt;数据集上，通过一个短时间小迭代次数的训练，可以达到约73%&lt;span lang=&quot;zh-CN&quot;&gt;的准确率，后续若增加max_steps&lt;span lang=&quot;zh-CN&quot;&gt;，期望准确率会逐渐增加。若max_steps&lt;span lang=&quot;zh-CN&quot;&gt;比较大的化，建议使用学习速率衰减（decay&lt;span lang=&quot;zh-CN&quot;&gt;）的SGD&lt;span lang=&quot;zh-CN&quot;&gt;来进行训练，其训练过程中准确率的峰值会较高，约86%&lt;span lang=&quot;zh-CN&quot;&gt;，因为这其中的L2&lt;span lang=&quot;zh-CN&quot;&gt;正则和LRN&lt;span lang=&quot;zh-CN&quot;&gt;层的使用均提升了模型准确率和模型的泛化性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;五、小结&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;            卷积网络最后的几个全连接层的作用是输出分类结果，前面的卷积层主要做特征提取工作，直到最后的全连接层才开始对特征进行组合分配，并进行分类。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;         &lt;span&gt;&lt;span lang=&quot;zh-CN&quot;&gt;卷积层一般需要和一个池化层连接，二者组合是做图像识别时的一个标准组件。卷积层的训练相对于全连接层更复杂，训练全连接层基本是进行一个些矩阵乘法运算，而目前卷积层的训练基本上依赖于&lt;/span&gt;&lt;/span&gt;&lt;span&gt;cuDNN&lt;span lang=&quot;zh-CN&quot;&gt;实现，其中的算法也相对复杂，甚至会涉及到傅里叶变换。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span&gt;参考资料   &lt;strong&gt;主要参考资料《TensorFlow实战》（黄文坚  唐源 著）（电子工业出版社）&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 25 Feb 2018 13:33:00 +0000</pubDate>
<dc:creator>蓝色之旅</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/georgeli/p/8470745.html</dc:identifier>
</item>
<item>
<title>【JavaWeb】客户关系管理系统 - Java3y</title>
<link>http://www.cnblogs.com/Java3y/p/8470712.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Java3y/p/8470712.html</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;为了巩固开发的流程，我们再拿一个客户关系管理系统来练手...！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;我们完成的就是下面的项目！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/9mxqkq3.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;配置Tomcat&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导入开发包&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建立开发用到的程序包&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RERM9ic.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;在数据库创建相对应的表&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; customer (
    
      &lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;          &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;KEY&lt;/span&gt;,
      name        &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
      gender      &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
      birthday    &lt;span class=&quot;dt&quot;&gt;DATE&lt;/span&gt;,
      cellphone   &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;30&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;NULL&lt;/span&gt;,
      email       &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;30&lt;/span&gt;),
      preference  &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;200&lt;/span&gt;),
      &lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt;        &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;),
      description &lt;span class=&quot;dt&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;)
    
    );

&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;开发实体十分简单，对照着数据库的表就行了！&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String id;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String name ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String gender ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Date birthday ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String cellphone ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String eamil ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String preference ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String type ;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String description;


    &lt;span class=&quot;co&quot;&gt;//....各种setter、getter&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id=&quot;导入配置文件&quot;&gt;导入配置文件&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;?xml&lt;/span&gt; version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;span class=&quot;kw&quot;&gt;?&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c3p0-config&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;default-config&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;driverClass&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;jdbcUrl&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;jdbc:mysql://localhost:3306/zhongfucheng&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;acquireIncrement&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;initialPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;10&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;minPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;maxPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;20&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/default-config&amp;gt;&lt;/span&gt;
        
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;named-config&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;driverClass&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;jdbcUrl&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;jdbc:mysql://localhost:3306/zhongfucheng&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;acquireIncrement&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;initialPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;10&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;minPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;maxPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;20&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/named-config&amp;gt;&lt;/span&gt;
        
        
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;named-config&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;oracle&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;driverClass&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;oracle.jdbc.driver.OracleDriver&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;jdbcUrl&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;jdbc:oracle:thin:@//localhost:1521/事例名...&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;用户名&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;密码&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;acquireIncrement&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;initialPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;10&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;minPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;maxPoolSize&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;20&lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/named-config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c3p0-config&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;开发提供数据连接池的工具类&quot;&gt;开发提供数据连接池的工具类&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Utils2DB {
    
        &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; ComboPooledDataSource comboPooledDataSource = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
    
            &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; {
    
                &lt;span class=&quot;co&quot;&gt;//它会自动寻找配置文件，节点为mysql的数据库（默认就是Mysql）&lt;/span&gt;
                comboPooledDataSource = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ComboPooledDataSource&lt;/span&gt;();
            }
    
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; DataSource &lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; comboPooledDataSource ;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; Connection &lt;span class=&quot;fu&quot;&gt;connection&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; comboPooledDataSource.&lt;span class=&quot;fu&quot;&gt;getConnection&lt;/span&gt;();
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {
                e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
                &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;数据库初始化失败了！&quot;&lt;/span&gt;);
            }
        }
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;开发uuid工具类&quot;&gt;开发UUID工具类&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; WebUtils {
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;makeId&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; UUID.&lt;span class=&quot;fu&quot;&gt;randomUUID&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;toString&lt;/span&gt;();
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;DAO应该提供增加客户和查询用户的功能&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;增加用户&quot;&gt;增加用户&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;addCustomer&lt;/span&gt;(Customer customer)  {

        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());

      
        String sql = &lt;span class=&quot;st&quot;&gt;&quot;INSERT INTO customer (id,name, gender, birthday, cellphone, preference, type, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?,?)&quot;&lt;/span&gt;;


        &lt;span class=&quot;co&quot;&gt;//得到用户传递进来的数据&lt;/span&gt;
        String id = customer.&lt;span class=&quot;fu&quot;&gt;getId&lt;/span&gt;();
        String name = customer.&lt;span class=&quot;fu&quot;&gt;getName&lt;/span&gt;();
        String gender = customer.&lt;span class=&quot;fu&quot;&gt;getGender&lt;/span&gt;();
        String cellphone = customer.&lt;span class=&quot;fu&quot;&gt;getCellphone&lt;/span&gt;();
        String email = customer.&lt;span class=&quot;fu&quot;&gt;getEmail&lt;/span&gt;();
        String preference = customer.&lt;span class=&quot;fu&quot;&gt;getPreference&lt;/span&gt;();
        String type = customer.&lt;span class=&quot;fu&quot;&gt;getType&lt;/span&gt;();
        String description = customer.&lt;span class=&quot;fu&quot;&gt;getDescription&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//对于日期，要转换一下&lt;/span&gt;
        Date date = customer.&lt;span class=&quot;fu&quot;&gt;getBirthday&lt;/span&gt;();
        SimpleDateFormat simpleDateFormat = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;st&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;);
        String birthday = simpleDateFormat&lt;span class=&quot;fu&quot;&gt;.format&lt;/span&gt;(date);

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;co&quot;&gt;//向数据库插入数据&lt;/span&gt;
            queryRunner.&lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Object[]{id, name, gender, birthday, cellphone, email, preference, type, description});

            &lt;span class=&quot;co&quot;&gt;//插入记录成功！&lt;/span&gt;
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {

            &lt;span class=&quot;co&quot;&gt;//如果出现了异常，就抛出Dao异常吧（自定义的异常）&lt;/span&gt;
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();

            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DaoException&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;添加用户出错了！&quot;&lt;/span&gt;);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;测试增加用户&quot;&gt;测试增加用户&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;写完一个功能，不要急着去写其他的功能，先测试一下！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;fu&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;add&lt;/span&gt;() {

        &lt;span class=&quot;co&quot;&gt;//为了测试的方便，直接使用构造函数了！&lt;/span&gt;
        Customer customer = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Customer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;zhongfucheng&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Date(), &lt;span class=&quot;st&quot;&gt;&quot;1234&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;aa@sina.com&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;打代码&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;高贵的用户&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;我是个好人&quot;&lt;/span&gt;);



        CustomerDao customerDao = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;CustomerDao&lt;/span&gt;();
        customerDao.&lt;span class=&quot;fu&quot;&gt;addCustomer&lt;/span&gt;(customer);
        
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;好的，没有报错！再看看数据库-----------&lt;strong&gt;只要是中文的数据，都乱码了！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/9eKLvnp.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;解决的办法，看我另外一篇博文：&lt;a href=&quot;https://zhongfucheng.bitcron.com/post/jie-jue-cuo-wu/mysqlzhong-wen-luan-ma&quot; class=&quot;uri&quot;&gt;https://zhongfucheng.bitcron.com/post/jie-jue-cuo-wu/mysqlzhong-wen-luan-ma&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;查询用户&quot;&gt;查询用户&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;将所有的客户查询出来就行了！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;//得到所有的用户&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; List&amp;lt;Customer&amp;gt; &lt;span class=&quot;fu&quot;&gt;getAll&lt;/span&gt;() {

        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());


        String sql = &lt;span class=&quot;st&quot;&gt;&quot;SELECT * FROM customer&quot;&lt;/span&gt;;
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            List&amp;lt;Customer&amp;gt; customers = (List&amp;lt;Customer&amp;gt;) queryRunner.&lt;span class=&quot;fu&quot;&gt;query&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BeanListHandler&lt;/span&gt;(Customer.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;));

            &lt;span class=&quot;co&quot;&gt;//如果集合大于个数大于0，就返回集合，不大于0，就返回null&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; customers.&lt;span class=&quot;fu&quot;&gt;size&lt;/span&gt;() &amp;gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ? customers : &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
            
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DaoException&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;获取所有的用户出错了！&quot;&lt;/span&gt;);
        }
        
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;测试查询用户&quot;&gt;测试查询用户&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;fu&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;() {

        CustomerDao customerDao = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;CustomerDao&lt;/span&gt;();
        List&amp;lt;Customer&amp;gt; customers = customerDao.&lt;span class=&quot;fu&quot;&gt;getAll&lt;/span&gt;();

        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (Customer customer : customers) {

            System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(customer.&lt;span class=&quot;fu&quot;&gt;getName&lt;/span&gt;());
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/gHO46Xg.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;修改用户信息&quot;&gt;修改用户信息&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;修改用户信息首先要知道用户的信息，在web端，只有id能唯一标识用户，我们需要通过id，获取用户全部信息（也就是Customer对象）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Customer &lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;(String id) {

        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());

        String sql = &lt;span class=&quot;st&quot;&gt;&quot;SELECT * FROM customer WHERE id = ?&quot;&lt;/span&gt;;

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            Customer customer = (Customer) queryRunner.&lt;span class=&quot;fu&quot;&gt;query&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BeanHandler&lt;/span&gt;(Customer.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Object[]{id});

            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; customer;

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DaoException&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;查找用户失败了&quot;&lt;/span&gt;);
        }

    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;修改用户都是外边传递个对象进来，Dao层取出对象的数据，从而对数据库的数据进行修改！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;26&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;(Customer customer) {

        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());

        String sql = &lt;span class=&quot;st&quot;&gt;&quot;UPDATE customer set name=?,gender=?,birthday=?,cellphone=?,email=?,preference=?,type=?,description=?  WHERE id = ?&quot;&lt;/span&gt;;

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            queryRunner.&lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Object[]{customer.&lt;span class=&quot;fu&quot;&gt;getName&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getGender&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getBirthday&lt;/span&gt;(),customer.&lt;span class=&quot;fu&quot;&gt;getCellphone&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getEmail&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getPreference&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getType&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getDescription&lt;/span&gt;(), customer.&lt;span class=&quot;fu&quot;&gt;getId&lt;/span&gt;()});

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {

            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DaoException&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;更新失败&quot;&lt;/span&gt;);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;测试修改用户&quot;&gt;测试修改用户&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;fu&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;() {

        CustomerDao customerDao = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;CustomerDao&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//我们已经知道了某id，通过id获取得到用户信息（Customer）&lt;/span&gt;
        String id = &lt;span class=&quot;st&quot;&gt;&quot;043f7cce-c6f1-4155-b688-ba386cae1636&quot;&lt;/span&gt;;
        Customer customer = customerDao.&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;(id);

        &lt;span class=&quot;co&quot;&gt;//修改用户信息&lt;/span&gt;
        customer.&lt;span class=&quot;fu&quot;&gt;setName&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;看完博客要点赞&quot;&lt;/span&gt;);
        customerDao.&lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;(customer);
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;原来该用户的名字是d&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/8Pmhvtg.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;测试完之后：&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qDPN8PF.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;删除用户&quot;&gt;删除用户&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;通过外界传递进来的id，就可以删除数据库表中的记录了&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;delete&lt;/span&gt;(String id) {
        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());

        String sql = &lt;span class=&quot;st&quot;&gt;&quot;DELETE from  customer WHERE id = ?&quot;&lt;/span&gt;;
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            queryRunner.&lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Object[]{id});
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DaoException&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;删除用户失败了&quot;&lt;/span&gt;);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;测试删除用户&quot;&gt;测试删除用户&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;fu&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;delete&lt;/span&gt;() {

        CustomerDao customerDao = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;CustomerDao&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//我们已经知道了某id，通过id删除数据库中的记录&lt;/span&gt;
        String id = &lt;span class=&quot;st&quot;&gt;&quot;043f7cce-c6f1-4155-b688-ba386cae1636&quot;&lt;/span&gt;;

        customerDao.&lt;span class=&quot;fu&quot;&gt;delete&lt;/span&gt;(id);
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;数据库已经查询不到id为043f7cce-c6f1-4155-b688-ba386cae1636的记录了！&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; BusinessService {
    
        CustomerDao customerDao = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;CustomerDao&lt;/span&gt;();
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; List&amp;lt;Customer&amp;gt; &lt;span class=&quot;fu&quot;&gt;getAll&lt;/span&gt;() {
    
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; customerDao.&lt;span class=&quot;fu&quot;&gt;getAll&lt;/span&gt;();
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;addCustomer&lt;/span&gt;(Customer customer) {
    
            customerDao.&lt;span class=&quot;fu&quot;&gt;addCustomer&lt;/span&gt;(customer);
        }

        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;deleteCustomer&lt;/span&gt;(String id) {
            customerDao.&lt;span class=&quot;fu&quot;&gt;delete&lt;/span&gt;(id); 
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;updateCustomer&lt;/span&gt;(Customer customer) {
            customerDao.&lt;span class=&quot;fu&quot;&gt;update&lt;/span&gt;(customer);
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Customer &lt;span class=&quot;fu&quot;&gt;findCustomer&lt;/span&gt;(String id) {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; customerDao.&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;(id);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;提供ui增加客户的servlet&quot;&gt;提供UI，增加客户的Servlet&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//直接跳转到显示增加用户页面的jsp&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/addCustomer.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;开发显示添加客户页面&quot;&gt;开发显示添加客户页面&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;form&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; action=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/addCustomerController&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;table&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; border=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1px&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;用户名：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;性别:&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;gender&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;female&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;女
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;gender&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;male&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;男
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;生日：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1900&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;1900&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;month&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;01&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;01&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;day&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;01&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;01&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;电话号码:&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;cellphone&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;邮箱:&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;爱好：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;唱歌&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;唱歌
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;跳舞&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;跳舞
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;打代码&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;打代码
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;客户类型&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;VIP&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;VIP
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;普通客户&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;普通客户
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;黑名单客户&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;黑名单客户
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;描述&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;textarea&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; cols=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;30&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rows=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;增添客户&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;reset&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;重置&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;效果是这样子的&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/DtYImw8.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们发现，&lt;strong&gt;在日期的下拉框中，只有一个数据（因为我们在value中只写了一个数据）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要想在下拉框中可以选择很多的数据，那么value的值就不能单单只有一个&lt;/strong&gt;。当然了，也&lt;strong&gt;不可能在JSP页面中写下面的代码&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1900&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;1900&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1901&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;1900&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1902&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;1900&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1903&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;1900&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;我们用javaScript生成下拉框的数据就行了！！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;获取年份！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;makeYear&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//得到下拉框的控件&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; year &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;year&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//要想下拉框有更多的数据，就需要有更多的option控件&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;//js获取得到年份是getFullYear()，单单的getYear()只是获取两位数&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1901&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;at&quot;&gt;getFullYear&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    
    
            &lt;span class=&quot;co&quot;&gt;//生成option控件&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; option &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;option&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
            &lt;span class=&quot;co&quot;&gt;//option控件的值和文本内容为循环生成的年分！&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
            &lt;span class=&quot;co&quot;&gt;//将生成option控件绑定到select控件上&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;year&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(option)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;获取月份和日也类似&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;makeMonth&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; month &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;month&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; option &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;option&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (i &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;month&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(option)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;makeDay&lt;/span&gt;()
    &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; day &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;day&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)
        &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; option &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;option&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(i&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
            &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;option&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;day&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(option)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;script type&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/customer.js&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;这三个函数都是在页面加载时就应该被初始化了，所以在body上绑定onload时间即可！！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;pageInit&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;makeYear&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;makeMonth&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;makeDay&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;body onload&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;pageInit()&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qqAWPVO.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;javascript拼凑数据&quot;&gt;JavaScript拼凑数据&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;表单的数据非常多，毫无疑问，我们会使用BeanUtils来将数据封装到Bean对象中！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于表单的数据，还是有些杂乱的。&lt;strong&gt;表单中日期的年月日是分开的，我们要么在客户端将年月日的数据拼凑起来，要么在服务器端将年月日拼凑起来&lt;/strong&gt;！同理，客户的喜好可能不单单有一个，但在Customer对象中，喜好单单用一个String类型来表示的。我们也要把客户的喜好拼凑起来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;显然，在客户端用javaScript做拼凑是非常方便的！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;makeBirthday&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//获取下拉框的数据，把数据拼凑成日期字符串&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; year &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;year&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; month &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;month&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; day &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;day&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; birthday &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; year &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; month &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; day&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//想要将拼凑完的字符串提交给服务器，用隐藏域就行了&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; input &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;input&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;hidden&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; birthday&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;birthday&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//将隐藏域绑定在form下【为了方便，在form中设置id，id名字为form】&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;form&quot;&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(input)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;makePreference&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//获取喜好的控件&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; hobbies &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementsByName&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//定义变量，记住用户选中的选项&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; preference &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//遍历喜好的控件，看用户选上了什么！&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;hobbies&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (hobbies[i].&lt;span class=&quot;at&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                preference &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; hobbies[i].&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//刚才拼凑的时候，最后一个逗号是多余的，我们要把它去掉&lt;/span&gt;
        preference &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;preference&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;preference&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;//也是用隐藏域将数据带过去给服务器&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; input &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;input&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;hidden&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; preference&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;preference&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;co&quot;&gt;//将隐藏域绑定到form表单上&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;form&quot;&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(input)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;当表单提交的时候，触发上面两个函数就行了！所以在form表单上绑定onsumit事件！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;makeForm&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;at&quot;&gt;makeBirthday&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;makePreference&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;form action&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/addCustomerController&quot;&lt;/span&gt; id&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;form&quot;&lt;/span&gt; onsubmit&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot; return makeForm()&quot;&lt;/span&gt; method&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;开发处理表单数据的servlet&quot;&gt;开发处理表单数据的Servlet&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;将表单的数据封装到Bean对象中，要开发工具类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; T &lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(HttpServletRequest httpServletRequest, Class&amp;lt;T&amp;gt; aClass) {

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            
            &lt;span class=&quot;co&quot;&gt;//获取Bean的对象&lt;/span&gt;
            T bean = aClass.&lt;span class=&quot;fu&quot;&gt;newInstance&lt;/span&gt;();
            
            &lt;span class=&quot;co&quot;&gt;//获取表单中所有的名字&lt;/span&gt;
            Enumeration enumeration = httpServletRequest.&lt;span class=&quot;fu&quot;&gt;getParameterNames&lt;/span&gt;();

            &lt;span class=&quot;co&quot;&gt;//遍历表单提交过来的名字&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; (enumeration.&lt;span class=&quot;fu&quot;&gt;hasMoreElements&lt;/span&gt;()) {

                &lt;span class=&quot;co&quot;&gt;//每个名字&lt;/span&gt;
                String name = (String) enumeration.&lt;span class=&quot;fu&quot;&gt;nextElement&lt;/span&gt;();

                &lt;span class=&quot;co&quot;&gt;//获取得到值&lt;/span&gt;
                String value = httpServletRequest.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(name);

                &lt;span class=&quot;co&quot;&gt;//如果用户提交的数据不为空，那么将数据封装到Bean中&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!value.&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; value != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                    BeanUtils.&lt;span class=&quot;fu&quot;&gt;setProperty&lt;/span&gt;(bean, name, value);
                }

              
            }
              &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; bean;
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;封装数据到Bean中，失败了！&quot;&lt;/span&gt;);
        }
        
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;处理表单数据的Servlet代码：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//将表单的数据弄到Bean对象中&lt;/span&gt;
        Customer customer = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request, Customer.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);


        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;co&quot;&gt;//调用BusinessService层的方法，添加客户&lt;/span&gt;
            BusinessService businessService = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BusinessService&lt;/span&gt;();
            businessService.&lt;span class=&quot;fu&quot;&gt;addCustomer&lt;/span&gt;(customer);

            &lt;span class=&quot;co&quot;&gt;//如果执行到这里，说明成功了，如果被catch了，说明失败了。&lt;/span&gt;
            request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;添加成功！&quot;&lt;/span&gt;);

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;添加失败&quot;&lt;/span&gt;);
        }
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/message.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/oYTEbQz.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;提供查询客户界面的servlet&quot;&gt;提供查询客户界面的Servlet&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//跳转到显示客户界面信息的jsp&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/lookCustomer.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;开发显示客户信息的页面&quot;&gt;开发显示客户信息的页面&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:if&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; test&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${&lt;span class=&quot;kw&quot;&gt;empty&lt;/span&gt;(list)}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        对不起，还没有任何客户的信息！
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:if&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; test&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${!&lt;span class=&quot;kw&quot;&gt;empty&lt;/span&gt;(list)}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &amp;lt;table&lt;span class=&quot;ot&quot;&gt; border&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;1px&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;用户名：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;密码：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;性别：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;生日：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;电话号码：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;邮箱：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;类型：&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;描述：&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
    
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:forEach&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; items&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${list}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; var&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;customer&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                &amp;lt;tr&amp;gt;
                    &amp;lt;td&amp;gt;${customer.name}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.gender}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.birthday}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.cellphone}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.email}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.preference}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.type}&amp;lt;/td&amp;gt;
                    &amp;lt;td&amp;gt;${customer.description}&amp;lt;/td&amp;gt;
                &amp;lt;/tr&amp;gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:forEach&amp;gt;&lt;/span&gt;
        &amp;lt;/table&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/5Kzquqz.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;采用分贞技术，让界面更加好看！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;index页面：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;

  &lt;span class=&quot;kw&quot;&gt;&amp;lt;frameset&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rows=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;25%,*&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;frame&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath }/head.jsp&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;head&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;frame&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath }/body.jsp&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/frameset&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;head页面：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;body&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; style=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text-align: center;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;客户管理系统！&lt;span class=&quot;kw&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/AddCustomer&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; target=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;增添客户&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/LookCustomer&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; target=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;查看客户&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;body页面：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;

    &lt;span class=&quot;er&quot;&gt;&amp;lt;&lt;/span&gt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170228125604300?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaG9uXzN5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;效果图&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;现在问题来了，如果我们客户信息有非常非常地多，我们不可能把客户信息全部都挤在同一个页面上，如果我们这样做的话，网页的长度就会非常的长！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;于是乎，我们就需要用到了分页的技术&lt;strong&gt;，对于分页技术基础的讲解，在我另一篇博文中有介绍：&lt;/strong&gt; &lt;a href=&quot;https://zhongfucheng.bitcron.com/post/jdbc/jdbcdi-si-pian-shu-ju-ku-lian-jie-chi-dbutilskuang-jia-fen-ye&quot; class=&quot;uri&quot;&gt;https://zhongfucheng.bitcron.com/post/jdbc/jdbcdi-si-pian-shu-ju-ku-lian-jie-chi-dbutilskuang-jia-fen-ye&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看完上篇博文，我们知道，首先要做的就是：&lt;strong&gt;明确分页技术中需要用到的4个变量的值！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;查询总记录数&quot;&gt;查询总记录数&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;查询总记录数也就是查询数据库表的记录有多少条，这是关于对数据库数据的操作，所以肯定是在dao层做！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Long &lt;span class=&quot;fu&quot;&gt;getTotalRecord&lt;/span&gt;() {

        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());

        String sql = &lt;span class=&quot;st&quot;&gt;&quot;SELECT * FROM customer&quot;&lt;/span&gt;;
        
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;co&quot;&gt;//获取查询的结果&lt;/span&gt;
            Long l = (Long) queryRunner.&lt;span class=&quot;fu&quot;&gt;query&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ScalarHandler&lt;/span&gt;());
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; l;
           
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;查询总记录数失败了！&quot;&lt;/span&gt;);
        }
        
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;查询分页的数据&quot;&gt;查询分页的数据&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;获取分页的数据也是查询数据库的记录，这也是关于对数据库的操作，所以也是在Dao层做的！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;/*查询分页数据*/&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;//获取分页的数据是需要start和end两个变量的【从哪条开始取，取到哪一条】&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; List&amp;lt;Customer&amp;gt; &lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; start, &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; end) {

        QueryRunner queryRunner = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;QueryRunner&lt;/span&gt;(Utils2DB.&lt;span class=&quot;fu&quot;&gt;getDataSource&lt;/span&gt;());

        String sql = &lt;span class=&quot;st&quot;&gt;&quot;SELECT * FROM customer LIMIT ?,?&quot;&lt;/span&gt;;

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            List&amp;lt;Customer&amp;gt; customers = (List&amp;lt;Customer&amp;gt;) queryRunner.&lt;span class=&quot;fu&quot;&gt;query&lt;/span&gt;(sql, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BeanListHandler&lt;/span&gt;(Customer.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Object[]{start, end});

            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; customers;

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (SQLException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DaoException&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;获取分页数据失败了！&quot;&lt;/span&gt;);
        }
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;现在我们已经可以知道总记录数了，对于其他3个变量（每页显示记录数【由程序员来指定】，当前是多少页【由用户来指定】，总页数【由总记录数和每页显示记录数来算数来的】）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在要分析的是，这些变量应该放在哪里呢？？？&lt;strong&gt;全部放在Dao层？？全部放在Dao层是可以实现功能的，但是，这样MVC结构就被破坏掉了（Dao层只用来对数据进行CRUD操作，4个变量存在Dao层，是不合理的）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最好的做法是这样的：&lt;strong&gt;创建一个实体Page，将分页用到的信息全部封装在Page中实现！Page就代表着分页的数据&lt;/strong&gt;这样就非常符合面向对象的思想了！&lt;/p&gt;
&lt;h2 id=&quot;将数据封装到page中并在页面上显示分页的数据&quot;&gt;将数据封装到Page中并在页面上显示分页的数据&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;①：创建Page类&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;//保存着分页的数据&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; List&amp;lt;Customer&amp;gt; list;

    &lt;span class=&quot;co&quot;&gt;//总记录数&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;long&lt;/span&gt; totalRecord;

    &lt;span class=&quot;co&quot;&gt;//每页显示记录数，这里我规定每页显示3条&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; linesize = &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;;

    &lt;span class=&quot;co&quot;&gt;//总页数&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; totalPageCount;

    &lt;span class=&quot;co&quot;&gt;//当前显示的页数&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;long&lt;/span&gt; currentPageCount;

    &lt;span class=&quot;co&quot;&gt;//...各种的setter、getter&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;②：BusinessService应该提供获取分页数据的服务&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;//既然Page对象代表是分页数据，那么返回Page对象即可！&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;//web层应该传入想要看哪一页数据的参数！&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Page &lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(String currentPageCount) {

        Page page = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Page&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//获取数据库中有多少条记录，并封装到Page对象中&lt;/span&gt;
        Long totalRecord = customerDao.&lt;span class=&quot;fu&quot;&gt;getTotalRecord&lt;/span&gt;();
        page.&lt;span class=&quot;fu&quot;&gt;setTotalRecord&lt;/span&gt;(totalRecord);

        &lt;span class=&quot;co&quot;&gt;//算出总页数，并封装到Page对象中&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; totalPagecount = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (totalRecord % page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;() == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ? totalRecord / page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;() : totalRecord / page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;() + &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
        page.&lt;span class=&quot;fu&quot;&gt;setTotalPageCount&lt;/span&gt;(totalPagecount);

        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; start ;
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; end = page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//现在又分两种情况了，如果传递进来的参数是null的，那么说明外界是第一次查询的&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (currentPageCount == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {

            &lt;span class=&quot;co&quot;&gt;//第一次查询，就应该设置当前页数是第一页&lt;/span&gt;
            page.&lt;span class=&quot;fu&quot;&gt;setCurrentPageCount&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);

            start = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) ((page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) * page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;());

            List&amp;lt;Customer&amp;gt; customers = customerDao.&lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(start, end);

            page.&lt;span class=&quot;fu&quot;&gt;setList&lt;/span&gt;(customers);
        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {

            &lt;span class=&quot;co&quot;&gt;//如果不是第一次，就把外界传递进来的页数封装到Page对象中&lt;/span&gt;
            page.&lt;span class=&quot;fu&quot;&gt;setCurrentPageCount&lt;/span&gt;(Long.&lt;span class=&quot;fu&quot;&gt;parseLong&lt;/span&gt;(currentPageCount));

            start = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) ((page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) * page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;());

            List&amp;lt;Customer&amp;gt; customers = customerDao.&lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(start, end);

            page.&lt;span class=&quot;fu&quot;&gt;setList&lt;/span&gt;(customers);

        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; page;

    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;③：web层调用BusinessService层的功能，获取得到Page对象&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//获取用户想要看的页数，如果是第一次，那肯定为null&lt;/span&gt;
        String currentPageCount = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;currentPageCount&quot;&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//调用BusinessService的方法，获取得到所有客户信息&lt;/span&gt;
        BusinessService businessService = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BusinessService&lt;/span&gt;();
        Page page  = businessService.&lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(currentPageCount);

        &lt;span class=&quot;co&quot;&gt;//把客户信息带过去给jsp页面&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;page&quot;&lt;/span&gt;, page);

        &lt;span class=&quot;co&quot;&gt;//跳转到显示客户界面信息的jsp&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/lookCustomer.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;④：在JSP页面中，使用EL表达式获取到Page对象，从而输出数据&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:forEach&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; items&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.list}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; var&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;customer&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;${customer.name}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.gender}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.birthday}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.cellphone}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.email}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.preference}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.type}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${customer.description}&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:forEach&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;⑤：在JSP页面中显示页码，同时把码数绑定到超链接去！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--提供页数的界面--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:forEach&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; var&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;pageNum&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; begin&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; end&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.totalPageCount}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${pageNum}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
            ${pageNum}
        &amp;lt;/a&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:forEach&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/MM5Uk60.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;让分页的功能更加完善&quot;&gt;让分页的功能更加完善&lt;/h2&gt;
&lt;h3 id=&quot;增加上一步和下一步&quot;&gt;增加上一步和下一步&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;一般的分页不仅仅只有页码给你，还有上一步和下一步。我们在JSP页面上也能添加这样的功能，其实这是非常简单的！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--如果当前的页码大于1，才显示上一步--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:if&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; test&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.currentPageCount&amp;gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;&amp;lt;%--把传递过去的页码-1就行了--%&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${page.currentPageCount&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
            上一步
        &amp;lt;/a&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;


    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--如果当前的页码小于总页数，才显示下一步--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:if&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; test&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.currentPageCount&amp;lt;page.totalPageCount}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;&amp;lt;%--把传递过去的页码-1就行了--%&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${page.currentPageCount&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
            下一步
        &amp;lt;/a&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/N54siOo.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;显示当前页数总页数总记录数&quot;&gt;显示当前页数，总页数，总记录数&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
    当前页数是：[${page.currentPageCount}]&lt;span class=&quot;dv&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;

    总页数是：${page.totalPageCount}&lt;span class=&quot;dv&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;

    总记录数是：${page.totalRecord}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/NO6Jzh2.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;跳转到某页上&quot;&gt;跳转到某页上&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
    &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;currentPageCount&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;跳转&quot;&lt;/span&gt;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;页面效果：&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/SwTsYhF.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们现在要做的就是：&lt;strong&gt;怎么样才能输入框输入内容，然后点击跳转按钮，将输入框的数据发送到Servlet上，然后实现跳转到某页上功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;明显地，我们肯定要使用JavaScript代码！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;script type&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/*既然写上了JavaScript代码了，就顺便验证输入框输入的数据是否合法吧*/&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;goPage&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;/*获取输入框控件*/&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; input &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;currentPageCount&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;/*获取输入框的数据*/&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; value &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(value&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; value&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;at&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;请输入页码&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;value&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;d+&quot;&lt;/span&gt;))&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;at&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;请输入数字&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(value&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; value&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;$&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;page&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;totalPageCount&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;at&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;请输入合法数据&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/LookCustomer?currentPageCount=&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;value&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/z9nVWQE.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;记录jsp页面的开始页和结束页&quot;&gt;记录JSP页面的开始页和结束页&lt;/h3&gt;
&lt;p&gt;为什么我们要记录JSP页面的开始页和结束页呢？&lt;strong&gt;经过上面层层地优化，我们感觉不出有什么问题了。那是因为数据量太少！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们试着多添加点记录进数据库，再回来看看！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/aUhjiRk.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上面的图我们可以发现&lt;strong&gt;页数有多少，JSP页面就显示多少！&lt;/strong&gt;这明显不合理的，如果有100页也显示100页吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们做一个规定，一次只能显示10页的数据&lt;/strong&gt;。那么显示哪10页呢？这又是一个问题了，如果我们在看第11页的数据，应该显示的是第7到第16页的数据（显示11附近的页数），我们在看第2页的数据，应该显示第1到第10页的数据。&lt;strong&gt;用户想要看的页数是不明确的，我们显示附近的页数也是不明确的！&lt;/strong&gt;。&lt;strong&gt;我们应该把用户想要看的页数记录下来，然后根据逻辑判断，显示附近的页数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们显示页数的代码是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/BX01HdL.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;很明显，我们只要控制了begin和end中的数据，就控制显示哪10页了！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;①在Page类中多定义两个成员变量&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;//记录JSP页面开始的页数和结束的页数&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; startPage;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; endPage;

    &lt;span class=&quot;co&quot;&gt;//Setter,Getter方法&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;②开始页数和结束页数受用户想看的页数影响，在BusinessService的getPageData()加入下面的逻辑&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
            &lt;span class=&quot;co&quot;&gt;//第一次访问&lt;/span&gt;
            page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
            page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;);
        


            &lt;span class=&quot;co&quot;&gt;//不是第一次访问&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() &amp;lt;= &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) {
                page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
                page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
                page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;((&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;));
                page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;((&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() + &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;));

                &lt;span class=&quot;co&quot;&gt;//如果因为加减角标越界了，那么就设置最前10页，或者最后10页&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (page.&lt;span class=&quot;fu&quot;&gt;getStartPage&lt;/span&gt;() &amp;lt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) {
                    page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
                    page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;);
                }
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (page.&lt;span class=&quot;fu&quot;&gt;getEndPage&lt;/span&gt;() &amp;gt; page.&lt;span class=&quot;fu&quot;&gt;getTotalPageCount&lt;/span&gt;()) {
                    page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(page.&lt;span class=&quot;fu&quot;&gt;getTotalPageCount&lt;/span&gt;());
                    page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(page.&lt;span class=&quot;fu&quot;&gt;getTotalPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;);
                }
            }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;③：在JSP显示页数时，获取得到开始页和结束页就行了&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--提供页数的界面--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:forEach&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; var&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;pageNum&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; begin&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.startPage}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; end&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.endPage}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${pageNum}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
                [${pageNum}]&amp;amp;nbsp;
        &amp;lt;/a&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:forEach&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/DIFXJff.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;hr/&gt;
&lt;h2 id=&quot;分页重构&quot;&gt;分页重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;我们再回头看看BusinessService中获取分页数据的代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;//既然Page对象代表是分页数据，那么返回Page对象即可！&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;//web层应该传入想要看哪一页数据的参数！&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Page &lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(String currentPageCount) {

        Page page = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Page&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//获取数据库中有多少条记录，并封装到Page对象中&lt;/span&gt;
        Long totalRecord = customerDao.&lt;span class=&quot;fu&quot;&gt;getTotalRecord&lt;/span&gt;();
        page.&lt;span class=&quot;fu&quot;&gt;setTotalRecord&lt;/span&gt;(totalRecord);

        &lt;span class=&quot;co&quot;&gt;//算出总页数，并封装到Page对象中&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; totalPagecount = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (totalRecord % page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;() == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ? totalRecord / page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;() : totalRecord / page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;() + &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
        page.&lt;span class=&quot;fu&quot;&gt;setTotalPageCount&lt;/span&gt;(totalPagecount);

        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; start ;
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; end = page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//现在又分两种情况了，如果传递进来的参数是null的，那么说明外界是第一次查询的&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (currentPageCount == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {

            &lt;span class=&quot;co&quot;&gt;//第一次查询，就应该设置当前页数是第一页&lt;/span&gt;
            page.&lt;span class=&quot;fu&quot;&gt;setCurrentPageCount&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);

            page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
            page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;);

            start = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) ((page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) * page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;());

            List&amp;lt;Customer&amp;gt; customers = customerDao.&lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(start, end);

            page.&lt;span class=&quot;fu&quot;&gt;setList&lt;/span&gt;(customers);
        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {

            &lt;span class=&quot;co&quot;&gt;//如果不是第一次，就把外界传递进来的页数封装到Page对象中&lt;/span&gt;
            page.&lt;span class=&quot;fu&quot;&gt;setCurrentPageCount&lt;/span&gt;(Long.&lt;span class=&quot;fu&quot;&gt;parseLong&lt;/span&gt;(currentPageCount));

            start = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) ((page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) * page.&lt;span class=&quot;fu&quot;&gt;getLinesize&lt;/span&gt;());

            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() &amp;lt;= &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) {
                page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
                page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
                page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;((&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;));
                page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;((&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (page.&lt;span class=&quot;fu&quot;&gt;getCurrentPageCount&lt;/span&gt;() + &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;));

                &lt;span class=&quot;co&quot;&gt;//如果因为加减角标越界了，那么就设置最前10页，或者最后10页&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (page.&lt;span class=&quot;fu&quot;&gt;getStartPage&lt;/span&gt;() &amp;lt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) {
                    page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
                    page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;);
                }
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (page.&lt;span class=&quot;fu&quot;&gt;getEndPage&lt;/span&gt;() &amp;gt; page.&lt;span class=&quot;fu&quot;&gt;getTotalPageCount&lt;/span&gt;()) {
                    page.&lt;span class=&quot;fu&quot;&gt;setEndPage&lt;/span&gt;(page.&lt;span class=&quot;fu&quot;&gt;getTotalPageCount&lt;/span&gt;());
                    page.&lt;span class=&quot;fu&quot;&gt;setStartPage&lt;/span&gt;(page.&lt;span class=&quot;fu&quot;&gt;getTotalPageCount&lt;/span&gt;() - &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;);
                }
            }


            List&amp;lt;Customer&amp;gt; customers = customerDao.&lt;span class=&quot;fu&quot;&gt;getPageData&lt;/span&gt;(start, end);

            page.&lt;span class=&quot;fu&quot;&gt;setList&lt;/span&gt;(customers);

        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; page;

    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;太太太太太tm复杂，太太太太tm长了！！！！！我们BusinessService要做的仅仅是调用Dao层的功能，为web层提供数据，&lt;strong&gt;但我们在方法中使用大量了逻辑判断，而且这些逻辑判断都是属于Page类的！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;明确一下：只有获取数据库总记录数是在BusinessService中做的，其他的数据变量都是应该在Page类中完成！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在BusinessService获取了总记录数之后，我们要对其他变量进行初始化（根据总记录数，用户想要看哪一页的数据），算出其他的数据（JSP记录开始页数、结束页数、总页数等等），最好的办法就是通过Page的构造函数来实现初始化！&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;3.5&quot;&gt;&lt;li readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;strong&gt;改良后的BusinessService&lt;/strong&gt;&lt;br/&gt;```java&lt;/p&gt;
&lt;p&gt;public Page getPageData2(String currentPageCount) {&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;//获取得到总记录数
Long totalPageCount = customerDao.getTotalRecord();

if (currentPageCount == null) {

    //如果是第一次，那么就将用户想看的页数设置为1
    Page page = new Page(1, totalPageCount);

    List&amp;lt;Customer&amp;gt; customers = customerDao.getPageData(page.getStartIndex(), page.getLinesize());

    page.setList(customers);
    return page;

} else {

    //如果不是第一次，就将获取得到的页数传递进去
    Page page = new Page(Integer.parseInt(currentPageCount), totalPageCount);

    List&amp;lt;Customer&amp;gt; customers = customerDao.getPageData(page.getStartIndex(), page.getLinesize());

    page.setList(customers);
    return page;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;```&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;改良后的Page类（原来的Page类只有成员变量和setter、getter方法）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Page&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; currentPageCount, &lt;span class=&quot;dt&quot;&gt;long&lt;/span&gt; totalRecord) {


        &lt;span class=&quot;co&quot;&gt;//将传递进来的currentPageCount初始化&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;currentPageCount&lt;/span&gt; = currentPageCount;

        &lt;span class=&quot;co&quot;&gt;//总页数&lt;/span&gt;
        totalPageCount = (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;) (totalRecord % linesize == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ? totalRecord / linesize : totalRecord / linesize + &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
        
        &lt;span class=&quot;co&quot;&gt;//总记录数&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;totalRecord&lt;/span&gt; = totalRecord;

        &lt;span class=&quot;co&quot;&gt;//开始取数据的位置&lt;/span&gt;
        startIndex = (currentPageCount - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) * linesize;


        &lt;span class=&quot;co&quot;&gt;//如果当前页小于10，那么开始页为1，结束页为10就行了&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;currentPageCount&lt;/span&gt; &amp;lt;= &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) {
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;startPage&lt;/span&gt; = &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;endPage&lt;/span&gt; = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;;
        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
            startPage = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;currentPageCount&lt;/span&gt; - &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;;
            endPage = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;currentPageCount&lt;/span&gt; + &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;;

            &lt;span class=&quot;co&quot;&gt;//加减后页数越界的情况&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (startPage &amp;lt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) {
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;startPage&lt;/span&gt; = &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;endPage&lt;/span&gt; = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;;
            }
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (endPage &amp;gt; totalPageCount) {
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;startPage&lt;/span&gt; = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;currentPageCount&lt;/span&gt; - &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;endPage&lt;/span&gt; = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;totalPageCount&lt;/span&gt;;
            }
        }

    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;分页显示页面重构&quot;&gt;分页显示页面重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;分页的显示页面都是永恒不变的，我们可以把代码重构成一个jsp，需要用到分页显示页面的地方，就包含进去就行了！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;

    &amp;lt;%@ page&lt;span class=&quot;ot&quot;&gt; contentType&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;text/html;charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; language&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; &lt;/span&gt;%&amp;gt;
    &amp;lt;%@taglib&lt;span class=&quot;ot&quot;&gt; prefix&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; uri&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;http://java.sun.com/jsp/jstl/core&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; &lt;/span&gt;%&amp;gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--显示当前页数--%&amp;gt;&lt;/span&gt;
    当前页数是：[${page.currentPageCount}]&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;
    
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--如果当前的页码大于1，才显示上一步--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:if&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; test&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.currentPageCount&amp;gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;&amp;lt;%--把传递过去的页码-1就行了--%&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${page.currentPageCount&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
            上一步
        &amp;lt;/a&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--提供页数的界面--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:forEach&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; var&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;page&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; begin&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.startPage}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; end&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.endPage}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${page}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
            [${page}]&amp;amp;nbsp;
        &amp;lt;/a&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:forEach&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--如果当前的页码小于总页数，才显示下一步--%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:if&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; test&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${page.currentPageCount&amp;lt;page.totalPageCount}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    
        &lt;span class=&quot;co&quot;&gt;&amp;lt;%--把传递过去的页码-1就行了--%&amp;gt;&lt;/span&gt;
        &amp;lt;a&lt;span class=&quot;ot&quot;&gt; href&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/LookCustomer?currentPageCount=&lt;/span&gt;${page.currentPageCount&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;}&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;&amp;gt;
            下一步
        &amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;
    
    &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;currentPageCount&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;跳转&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onclick&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;goPage()&quot;&lt;/span&gt;&amp;gt;
    
    总页数是：${page.totalPageCount}&amp;amp;nbsp;&amp;amp;nbsp;
    
    总记录数是：${page.totalRecord}
    
    
    &amp;lt;script&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;
    
        /*既然写上了JavaScript代码了，就顺便验证输入框输入的数据是否合法吧*/
        function goPage() {
    
            /*获取输入框控件*/
            var input = document.getElementById(&quot;currentPageCount&quot;);
    
            /*获取输入框的数据*/
            var value = input.value;
    
            if(value==null || value==&quot;&quot;){
                alert(&quot;请输入页码&quot;);
                return false;
            }
    
            if(!value.match(&quot;\\d+&quot;)){
                alert(&quot;请输入数字&quot;);
                return false;
            }
    
            if(value&amp;lt;1&lt;span class=&quot;ot&quot;&gt; || value&lt;/span&gt;&amp;gt;${page.totalPageCount}){
                alert(&quot;请输入合法数据&quot;);
                return false ;
            }
    
            window.location.href=&quot;${pageContext.request.contextPath}/LookCustomer?currentPageCount=&quot;+value;
        }
    
    &amp;lt;/script&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;用需要用到的地方，导入即可！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
    &amp;lt;jsp:include&lt;span class=&quot;ot&quot;&gt; page&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;page.jsp&quot;&lt;/span&gt;&amp;gt;&amp;lt;/jsp:include&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;为了做到更好的通用性，处理分页数据的url应该由Servlet传进去给Page类，让Page类封装起来！要使用的时候，再用Page取出来就行了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面写法已经固定了，不够灵活！也就是说，下面的url地址不应该写死的&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    ${pageContext.&lt;span class=&quot;fu&quot;&gt;request&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;contextPath&lt;/span&gt;}/LookCustomer?currentPageCount=${page.&lt;span class=&quot;fu&quot;&gt;currentPageCount&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;我们可以这样做：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;在Controller上获取Servlet的名称，在传递用户想要看的页数的同时，把Servlet的url也传递进去&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        String servletName = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;getServletName&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//调用BusinessService的方法，获取得到所有客户信息&lt;/span&gt;
        BusinessService businessService = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BusinessService&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//把Servlet的url也传递进去&lt;/span&gt;
        Page page = businessService.&lt;span class=&quot;fu&quot;&gt;getPageData2&lt;/span&gt;(currentPageCount, request.&lt;span class=&quot;fu&quot;&gt;getContextPath&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;/&quot;&lt;/span&gt; + servletName);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;在Page类上，多增加一个成员变量&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String url;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getUrl&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; url;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setUrl&lt;/span&gt;(String url) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;url&lt;/span&gt; = url;
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;在BusinessService接受到web层传递进来的url，set到Page对象上就行了！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    page.&lt;span class=&quot;fu&quot;&gt;setUrl&lt;/span&gt;(url);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;我们在jsp页面跳转到处理分页数据的Servlet上，就再不用写死了。直接用Page对象中获取出来就行了！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
    &lt;span class=&quot;er&quot;&gt;&amp;lt;&lt;/span&gt;%--把传递过去的页码-1就行了--%&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${page.url}?currentPageCount=${page.currentPageCount-1}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        上一步
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;在查询jsp页面上，增添删除和修改的操作链接！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/PRWKPO1.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/JgDzm1T.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;开发处理删除操作的servlet&quot;&gt;开发处理删除操作的Servlet&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;超链接绑定要删除用户的id，带过去给Controller&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;        &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/DeleteCustomer?id=${customer.id}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;删除&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;controller的代码也十分简单：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        String id = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;id&quot;&lt;/span&gt;);
        
        &lt;span class=&quot;co&quot;&gt;//调用BusinessService层的功能，就可以完成删除操作了&lt;/span&gt;
        BusinessService businessService = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BusinessService&lt;/span&gt;();

        businessService.&lt;span class=&quot;fu&quot;&gt;deleteCustomer&lt;/span&gt;(id);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;删除客户记录也是一件非常重要的事情，应该提供JavaSrcript代码询问是否要真的删除&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在超链接控件上绑定事件！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
       &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/DeleteCustomer?id=${customer.id}&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onclick=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot; return sureDelete()&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;删除&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sureDelete&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;confirm&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;你确定要删除吗？&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(b) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;测试：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/4moySzR.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;修改操作&quot;&gt;修改操作&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;修改操作的流程是这样的：点击修改超链接，跳转到该用户的详细信息页面，在详细信息页面中修改数据，再提交修改！【跳转到用户详细信息页面时，用户的id还在的，在提交数据的时候，记得把id也给到服务器，【id是不包含在表单中的，要我们自己提交过去】！】&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
   &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/UpdateCustomerUI?=${customer.id}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;修改&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;开发提供用户详细信息的servlet&quot;&gt;开发提供用户详细信息的Servlet&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        String id = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;id&quot;&lt;/span&gt;);
        BusinessService businessService = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BusinessService&lt;/span&gt;();
        
        &lt;span class=&quot;co&quot;&gt;//通过id获取得到用户的详细信息&lt;/span&gt;
        Customer customer = businessService.&lt;span class=&quot;fu&quot;&gt;findCustomer&lt;/span&gt;(id);

        request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;customer&quot;&lt;/span&gt;, customer);
        &lt;span class=&quot;co&quot;&gt;//跳转到显示用户详细信息的jsp页面上&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/customerInformation&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;开发显示用户信息的jsp数据回显&quot;&gt;开发显示用户信息的JSP【数据回显】&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;想要日期能够选择，记得导入JavaScript代码，响应事件！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：在显示页面上，一定要把id传递过去给处理表单的Servlet，不然服务器是不知道你要修改哪一条数据的！&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;用户详细信息&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/customer.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onload=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;pageInit()&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;form&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; action=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/updateCustomer?id=${customer.id}&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; method=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onsubmit=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;makeForm()&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;table&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; border=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1px&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;用户名：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${customer.name}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;性别&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;gender&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;male&quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;${customer.gender&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'male'?'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;男
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;gender&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;female&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;${customer.gender&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'female'?'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;女
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;生日&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${fn:split(customer.birthday,'-')[0]}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;${fn:split(customer.birthday,'-')[0]}&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;month&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${fn:split(customer.birthday,'-')[1]}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;${fn:split(customer.birthday,'-')[1]}&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;day&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${fn:split(customer.birthday,'-')[2]}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;${fn:split(customer.birthday,'-')[2]}&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;电话号码:&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;cellphone&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${customer.cellphone}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;邮箱:&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${customer.email}&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;爱好：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;唱歌&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;${fn:contains(customer.preference,&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;'唱歌')&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=true?&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;唱歌

                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;跳舞&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;${fn:contains(customer.preference,&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;'跳舞')&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=true?&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;跳舞
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;hobbies&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;打代码&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;${fn:contains(customer.preference,&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;'打代码')&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=true?&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;打代码
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;客户类型&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;VIP&quot;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;${customer.type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'VIP'?'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;VIP
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;普通客户&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;${customer.type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'普通客户'?'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;普通客户
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;radio&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;黑名单客户&quot;&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;${customer.type&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;'黑名单客户'?'checked':''}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;黑名单客户
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;描述&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;textarea&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; cols=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;30&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rows=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;${customer.description}&lt;span class=&quot;kw&quot;&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;确定修改&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;reset&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;重置&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/IzNrTH2.gif&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;处理修改表单数据的servlet&quot;&gt;处理修改表单数据的Servlet&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

        &lt;span class=&quot;co&quot;&gt;//将数据封装到Bean中&lt;/span&gt;
        Customer customer = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request, Customer.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//将id封装到Customer对象中！！！不要忘了id！！！在表单中获取到的数据是没有id的！！！！！记得！！！！&lt;/span&gt;
        customer.&lt;span class=&quot;fu&quot;&gt;setId&lt;/span&gt;(request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;id&quot;&lt;/span&gt;));
        
        &lt;span class=&quot;co&quot;&gt;//调用Service层的方法，实现修改&lt;/span&gt;
        BusinessService businessService = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BusinessService&lt;/span&gt;();
        businessService.&lt;span class=&quot;fu&quot;&gt;updateCustomer&lt;/span&gt;(customer);
        
        &lt;span class=&quot;co&quot;&gt;//修改成功就跳回查看客户界面&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/LookCustomer&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/kAX55UY.gif&quot;/&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;在dao层中，我们有添加客户、通过id查找用户、删除用户、修改用户信息的方法。&lt;/li&gt;
&lt;li&gt;日期我们一般用下拉框来给用户选取，要想下拉框的信息有足够多的数据，我们需要用到JavaScript【DOM编程动态增加和修改数据】&lt;/li&gt;
&lt;li&gt;javasrcipt文件不能放在WEB-INF目录下面&lt;/li&gt;
&lt;li&gt;日期的数据通过下拉框选取，年、月、日是分散的，我们需要把他们拼接，于是我们也用JavaScript来拼接【减低服务器端的压力】&lt;/li&gt;
&lt;li&gt;开发工具方法request2Bean，主要用到了BeanUtils框架，这样就不用在Servlet一个一个封装了。&lt;/li&gt;
&lt;li&gt;在JSP判断集合是否有元素时，我们可以用EL表达式&lt;strong&gt;${empty(集合)}&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果记录数有很多，我们应该使用分页技术，一般地，我们使用Page类来封装分页的数据&lt;/li&gt;
&lt;li&gt;要使用分页技术，就必须在数据库用查询总记录数，通过总记录数，就可以算出总页数了【每页显示多少条记录由我们说了算】&lt;/li&gt;
&lt;li&gt;在dao层还要编写获取具体的分页数据，从哪里开始，哪里结束，返回一个List集合，再把List集合封装到Page对象上&lt;/li&gt;
&lt;li&gt;由于获取分页数据需要当前的页数是多少，（所以在service中要判断当前页数是否存在，如果不存在，那么就设置为1）&lt;strong&gt;【更新，我认为在Controller判断会好一点】&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;分页中，我们还支持上一页和下一页的功能，如果页数大于1，才显示上一页，如果页数小于1，才显示下一页。&lt;/li&gt;
&lt;li&gt;给出下拉框进行页数跳转，使用JavaScript事件机制，获取页数，再提交给Servlet处理即可&lt;/li&gt;
&lt;li&gt;我们还要控制页数的显示，因为不可能有100页，我们就显示100页，这样是不可能的。在Page类中维护两个变量，startPage，endPage。我们规定每次只能显示10页数据，如果第一次访问就显示1-10页。如果当前页数大于10，那么就显示6-15页。如果角标越界了，那么就显示前10页或者后10页&lt;/li&gt;
&lt;li&gt;我们把显示分页的页面封装成单独的jsp，使用的Servlet连接也可以用url变量来维护。&lt;/li&gt;
&lt;li&gt;前台数据做拼接，最终都是把拼接好的数据用一个隐藏域封装起来，随后让form表单一起提交&lt;/li&gt;
&lt;/ol&gt;&lt;hr/&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;如果文章有错的地方欢迎指正，大家互相交流。习惯在微信看技术文章的同学，想要获取更多的Java资源的同学，可以&lt;strong&gt;关注微信公众号:Java3y&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Sun, 25 Feb 2018 13:26:00 +0000</pubDate>
<dc:creator>Java3y</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Java3y/p/8470712.html</dc:identifier>
</item>
<item>
<title>.NET 设计模式的六大原则理论知识 - 隐于深巷丶</title>
<link>http://www.cnblogs.com/liuqiwang/p/8470691.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liuqiwang/p/8470691.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;1. 单一职责原则（SRP）（Single Responsibility Principle）&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;2. 里氏替换原则（LSP）（Liskov Substitution Principle）&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;3. 依赖倒置原则（DIP）（Dependence Inversion Principle）&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;4. 接口隔离原则（ISP）（Interface Segregation Principle）&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;5. 迪米特原则（LOD）（Law Of Demeter）&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;6. 开闭原则（OCP）（Open Closed Principle）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;1：单一职责原则（一个类只做一件事）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用场景：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;类T负责两个不同的职责：P1职责，P2职责。当P1需求发生变法时而需要修改类T时，就有可能导致原本运行正常的P2发生故障。&lt;/p&gt;
&lt;p&gt;遵循单一原则，把P1跟P2分成两个类，每个类只关注一件事情避免因为需求的修改而引发不必要的故障&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;什么情况下可以违背单一职责原则：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只要逻辑足够简单，就可以在方法级别上违背单一职责原则&lt;/p&gt;
&lt;p&gt;如果一个类足够简单，方法够少，就可以在类级别上违背单一职责原则&lt;/p&gt;
&lt;p&gt;杂话：各种级别（方法/类/接口/类库/项目/系统）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1 类逻辑变得简单&lt;/p&gt;
&lt;p&gt;2 代码稳定，可扩展性高&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1 代码会变多&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;2：里氏替换原则（任何使用基类的地方，其子类都可以透明的使用（继承，多态））&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果子类不能拥有父类的全部属性和行为，断掉继承&lt;/p&gt;
&lt;p&gt;如果子类要修改父类的行为，使用override/virtual&lt;/p&gt;
&lt;p&gt;总结来说，里氏替换原则就是规范了继承的使用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;3：依赖倒置原则（上层模块不直接依赖下层模块，二者应通过抽象依赖（抽象类/接口类））&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;依赖抽象（抽象类/接口类），而不是依赖细节（实现类）&lt;/p&gt;
&lt;p&gt;相对于细节，依赖抽象更稳定&lt;/p&gt;
&lt;p&gt;基于抽象的架构，更稳定&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;杂谈：经常听到的几个词&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1 控制反转（IOC）：把依赖交给第三方容器来完成  （目的）&lt;/p&gt;
&lt;p&gt;2 依赖注入（DI）：实现控制反转的一种手段  （行为）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;4：接口隔离原则（客户端不应该依赖于它不需要的接口，一个类对另一个类的的依赖应该建立在最小的接口上）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不要使用大而全的接口，这样导致实现不需要的方法&lt;/p&gt;
&lt;p&gt;也不能拆分的太细，这样会导致使用不便&lt;/p&gt;
&lt;p&gt;关于接口隔离原则，具体情况还需要根据业务需求来定，没有一个同一标准，该拆该合，都得需要自己度量&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;5：迪米特法则（最少知道原则）（一个对象只于关系最密切的朋友进行通讯，高内聚，低耦合）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;类于类之前，要避免不必要的依赖&lt;/p&gt;
&lt;p&gt;学校，老师，班级，学生四个类&lt;/p&gt;
&lt;p&gt;学校只与老师通讯，老师只跟班级通讯，不要学校在关联老师的同时，又关联班级，这样会增加依赖、&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;场景：老师类中有一个班级的集合，班级类中有一个学生的集合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;错误做法：在老师类中写一个方法，遍历出所有班级，在遍历中，又根据班级遍历出所有学生（这种写法虽然很爽，但是增加了不必要的依赖）&lt;/p&gt;
&lt;p&gt;正确做法：在老师类中写一个方法，在班级类中写一个方法，老师类中遍历出所有班级，在遍历中在根据班级调用班级类中自身的方法获取所有的学生（减少了不必要的依赖）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;杂谈：类与类的关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;纵向关系：继承  实现&lt;/p&gt;
&lt;p&gt;横向关系：依赖（方法内部）  关联 组合 聚合（后三个：方法返回/参数  属性）&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;&lt;span&gt;6：开闭原则（开放扩展，关闭修改）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;没有任何的指导意义，只能算是一个愿景，架构的最理想状态&lt;/p&gt;
&lt;p&gt;其他五个原则，都是为了辅助开闭原则，从而达到真正的理想状态&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1：六大原则并不是指具体的技术或者应用，而是一个指导性的原则，如何遵循六大原则需要自己度量，相当于一个建议，并不一定必须遵守六大原则，根据业务需求，自己做取舍&lt;/p&gt;
&lt;p&gt;2：真正的业务需求中，往往会出现遵循了这个原则，却违反了另一个原则，具体侧重哪个原则，还要根据业务需求来定，不要盲目的追求。&lt;/p&gt;
&lt;p&gt;3：尽可能的遵循六大原则来写代码，使你的应用变得健壮，扩展性高，易维护。&lt;/p&gt;

</description>
<pubDate>Sun, 25 Feb 2018 13:20:00 +0000</pubDate>
<dc:creator>隐于深巷丶</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liuqiwang/p/8470691.html</dc:identifier>
</item>
<item>
<title>Bootstrap入门 - 生命壹号</title>
<link>http://www.cnblogs.com/smyhvae/p/8470657.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/smyhvae/p/8470657.html</guid>
<description>&lt;blockquote readability=&quot;5.375&quot;&gt;
&lt;p&gt;本文最初发表于&lt;a href=&quot;http://www.cnblogs.com/smyhvae/p/8470657.html&quot;&gt;博客园&lt;/a&gt;，并在&lt;a href=&quot;https://github.com/smyhvae/Web&quot;&gt;GitHub&lt;/a&gt;上持续更新&lt;strong&gt;前端的系列文章&lt;/strong&gt;。欢迎在GitHub上关注我，一起入门和进阶前端。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是正文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;bootstrap-介绍&quot;&gt;Bootstrap 介绍&lt;/h2&gt;
&lt;p&gt;Bootstrap 是非常流行的前端框架。特点是：灵活简洁、代码优雅、美观大方。它是由Twitter的两名工程师 Mark Otto 和 Jacob Thornton 在2011年开发的。&lt;/p&gt;
&lt;p&gt;简单来说，Bootstrap 让 Web 开发&lt;strong&gt;更简单、更快捷&lt;/strong&gt;。使用 Bootstrap 框架并不代表我们再开发时不用自己写 CSS 样式，而是不用谢绝大多数常见的样式。&lt;/p&gt;
&lt;p&gt;PS：&lt;a href=&quot;http://amazeui.org/&quot;&gt;Amaze UI&lt;/a&gt; 这个框架其实跟 Bootstrap 很像。&lt;/p&gt;
&lt;h3 id=&quot;官网网站&quot;&gt;官网网站&lt;/h3&gt;
&lt;p&gt;V3版本：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1033.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;V4版本：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1043.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;列举几个用 Bootstrap 做的网站：&lt;/p&gt;
&lt;h3 id=&quot;bootstrap-版本&quot;&gt;Bootstrap 版本&lt;/h3&gt;
&lt;p&gt;目前市面上使用的最多的是 3.x.x 版本。各个版本的介绍：&lt;/p&gt;
&lt;p&gt;2.3.2版本：&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;2013年之后，停止维护；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;支持更广泛的浏览器&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;代码不够简洁， 功能不够多。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;3.x.x 版本：&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;目前最新的稳定版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;不支持 IE7 和早期的 Firefox&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;支持 IE8，单效果不好。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;2015年8月发布 4.0.0-alpha 的内部测试版。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;版本号的普及：&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;alpha 版：内部测试版。α 是希腊字母的第一个，表示最早的版本，bug很多。主要是给开发和测试人员找 bug 用的。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;beta 版：公开测试版。 主要是给“部落”用户和忠实用户测试用的。bug依然很多，但比 Alpha 版要稳定。这个阶段的版本还会不断增加新功能，如果你是发烧友，可以下载这个版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;rc 版：候选版本（Release Candidate）。该版本不再增加新的功能。类似于最终发行版之前的预览版（发行的候选版本）。此版本的发布，预示着最终发行版即将到来。作为普通用户，如果很着急，也可以下载 rc 版。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;stable 版：稳定版。在开源软件中，都有 stable版本，这个是开源软件的最终发行版，用户可以放心大胆地使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;bootstrap-库的下载&quot;&gt;Bootstrap 库的下载&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;这里我们以 Bootstrap V3.3.7 为例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;进入&lt;a href=&quot;https://v3.bootcss.com/&quot;&gt;中文官网&lt;/a&gt;，下载 &lt;code&gt;用于生产环境的 Bootstrap&lt;/code&gt;，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1051.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下载之后，解压 &lt;code&gt;bootstrap-3.3.7-dist&lt;/code&gt; ，有三个文件夹：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1053.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;将其拷贝到工程文件的lib文件夹下即可。&lt;/p&gt;
&lt;p&gt;PS：&lt;code&gt;dist&lt;/code&gt;表示编译之后的文件，这在库文件中是很常见的。&lt;/p&gt;
&lt;p&gt;因为 bootstrap.js依赖jQuery，所以要先引用jquery.js 然后引用bootstrap.js。&lt;/p&gt;
&lt;h3 id=&quot;bootstrap-基础模板的介绍&quot;&gt;Bootstrap 基础模板的介绍&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://v3.bootcss.com/getting-started/&quot;&gt;Bootstrap&lt;/a&gt;官网提供了基本模板，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1118.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其完整版代码 copy 如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;zh-CN&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; http-equiv=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;width=device-width, initial-scale=1.0, user-scalable=no&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;我的网站&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- Bootstrap --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/bootstrap/css/bootstrap.css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- WARNING: Respond.js doesn't work if you view the page via file:// --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;      &amp;lt;script src=&quot;https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;      &amp;lt;script src=&quot;https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    &amp;lt;![endif]--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;你好，世界！&lt;span class=&quot;kw&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- jQuery (necessary for Bootstrap's JavaScript plugins) --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- Include all compiled plugins (below), or include individual files as needed --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;js/bootstrap.min.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们需要对上面的代码进行解释。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）Compatible&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; http-equiv=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解释：设置浏览器的兼容模式版本。表示如果在IE浏览器下则使用最新的标准，渲染当前文档。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）viewport 视口&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;width=device-width, initial-scale=1.0, user-scalable=no&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解释：声明当前网页在移动端浏览器中展示的相关设置。我们在做移动 web 开发时，就用上面这行代码设置 viewport。&lt;/p&gt;
&lt;p&gt;视口的作用：在移动浏览器中，当页面宽度超出设备，浏览器内部虚拟的一个页面容器，将页面容器缩放到设备这么大，然后展示。&lt;/p&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;目前大多数手机浏览器的视口（承载页面的容器）宽度都是980；&lt;/li&gt;
&lt;li&gt;视口的宽度可以通过meta标签设置。&lt;/li&gt;
&lt;li&gt;此属性为移动端页面视口设置，上方代码设置的值，表示在移动端页面的宽度为设备的宽度，并且不缩放（缩放级别为1）
&lt;ul&gt;&lt;li&gt;width:视口的宽度&lt;/li&gt;
&lt;li&gt;initial-scale：初始化缩放&lt;/li&gt;
&lt;li&gt;user-scalable:是否允许用户自行缩放（值可以写成yes/no，也可以写成1/0）&lt;/li&gt;
&lt;li&gt;minimum-scale:最小缩放。&lt;/li&gt;
&lt;li&gt;maximum-scale:最大缩放。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;PS：如果设置了不允许用户缩放，那么最小缩放和最大缩放就没有意义了。二者是矛盾的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）条件注释&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;    &lt;span class=&quot;co&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;      &amp;lt;script src=&quot;https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;      &amp;lt;script src=&quot;https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    &amp;lt;![endif]--&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;条件注释的作用：当判断条件满足时，就会执行注释中的HTML代码，不满足时会当做注释忽略掉。&lt;/p&gt;
&lt;p&gt;上方代码的条件注释中，引入了两个脚本：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/aFarkas/html5shiv&quot;&gt;html5shiv&lt;/a&gt;：让浏览器可以识别 HTML5 的新标签。如header、footer、section等。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/scottjehl/Respond&quot;&gt;respond.js&lt;/a&gt;：让低版本浏览器可以使用 CSS3 的媒体查询。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;另外，我们还需要引入下面这个库：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery&quot;&gt;jQuery&lt;/a&gt;：Bootstrap框架中的所有 JS 组件都依赖于 jQuery 实现。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们可以把上面这三个库文件拷贝到 lib 文件夹中（注意引用的路径要写正确）。&lt;/p&gt;
&lt;h2 id=&quot;使用-bootstrap-搭建项目&quot;&gt;使用 Bootstrap 搭建项目&lt;/h2&gt;
&lt;h3 id=&quot;工程文件的目录结构&quot;&gt;1、工程文件的目录结构&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;├─ Demo ·························· 项目所在目录
└─┬─ /css/ ······················· 我们自己的CSS文件
  ├─ /font/ ······················ 使用到的字体文件
  ├─ /img/ ······················· 使用到的图片文件
  ├─ /js/ ························ 自己写的JS脚步
  ├─ /lib/ ······················· 从第三方下载回来的库【只用不改】
  ├─ /favicon.ico ················ 站点图标
  └─ /index.html ················· 入口文件&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;下载并引入-bootstrap-库文件&quot;&gt;2、下载并引入 Bootstrap 库文件&lt;/h3&gt;
&lt;p&gt;见上一段的讲解。引入之后，另外还需要引入 html5shiv、respond、jQuery 这三个库文件。&lt;/p&gt;
&lt;h3 id=&quot;字符集viewport设置浏览器兼容模式&quot;&gt;3、字符集、Viewport设置、浏览器兼容模式&lt;/h3&gt;
&lt;p&gt;我们将 Bootstrap 的基础模板代码 copy到项目的index.html中，这其中就包括最前面的三个meta标签：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; http-equiv=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;width=device-width, initial-scale=1, user-scalable=no&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;favicon站点图标&quot;&gt;4、favicon（站点图标）&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;image/x-icon&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;favicon.ico&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;引入相应的第三方文件&quot;&gt;5、引入相应的第三方文件&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 引入 Bootstrap 的核心样式文件（必须） --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/bootstrap/css/bootstrap.css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 引入我们自己写的 css 样式文件--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;css/my.css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

    ...

    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/jquery/jquery.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/bootstrap/js/bootstrap.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;js/my.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意，先引入第三方的文件，再引入我们自己写的文件。&lt;/p&gt;
&lt;h3 id=&quot;默认字体&quot;&gt;6、默认字体&lt;/h3&gt;
&lt;p&gt;在我们默认的样式表中将默认字体设置为：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;body&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;font-family:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;Helvetica Neue&quot;&lt;/span&gt;,
                Helvetica,
                Microsoft Yahei,
                Hiragino Sans GB,
                WenQuanYi Micro Hei,
                &lt;span class=&quot;dt&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;完成页面空结构&quot;&gt;7、完成页面空结构&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;先划分好页面中的大容器，然后在具体看每一个容器中单独的情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;完整代码如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;zh-CN&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; http-equiv=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;width=device-width, initial-scale=1, user-scalable=no&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;我的网站&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!--建议：第三方引用的css库放在上面，我们自己写的文件，都放在下面--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 引入 Bootstrap 的核心样式文件（必须） --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/bootstrap/css/bootstrap.css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 引入我们自己写的 css 样式文件--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;image/x-icon&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;favicon.ico&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    &amp;lt;script src=&quot;lib/html5shiv/html5shiv.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    &amp;lt;script src=&quot;lib/respond/respond.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    &amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 头部区域 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;header&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /头部区域 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 广告轮播 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;section&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;main_ad&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /广告轮播 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 特色介绍 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /特色介绍 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 立即预约 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /立即预约 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 产品推荐 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /产品推荐 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 新闻列表 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /新闻列表 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 合作伙伴 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /合作伙伴 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 脚注区域 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;footer&amp;gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- /脚注区域 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/jquery/jquery.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;lib/bootstrap/js/bootstrap.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;js/main.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;css-样式&quot;&gt;CSS 样式&lt;/h2&gt;
&lt;p&gt;全局 CSS 样式在&lt;a href=&quot;https://v3.bootcss.com/css/&quot;&gt;官网&lt;/a&gt;有介绍：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1710.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果需要哪个样式，直接根据文档的指引，在相应的元素里加指定的类名即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们选部分重要的来讲一下。&lt;/p&gt;
&lt;h3 id=&quot;布局容器container-类&quot;&gt;布局容器：container 类&lt;/h3&gt;
&lt;p&gt;截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1719.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：用于定义一个固定宽度且居中的版心。只不过，这个版心的宽度具有&lt;strong&gt;响应式&lt;/strong&gt;的效果。&lt;/p&gt;
&lt;p&gt;也就是说，在 Bootstrap 中，我们一般用 .container 类来表示版心。&lt;/p&gt;
&lt;p&gt;格式举例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; class=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;topbar&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; class=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;      此处的代码会显示在一个固定宽度且居中的容器中&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;      该容器的宽度会跟随屏幕的变化而变化&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个 container 类我们自己其实也可以写，通过媒体查询即可实现。&lt;/p&gt;
&lt;h3 id=&quot;栅格参数&quot;&gt;栅格参数&lt;/h3&gt;
&lt;p&gt;栅格系统最主要的操作是：利用 css 的响应式去做一套行列布局的预置样式。&lt;/p&gt;
&lt;p&gt;栅格参数如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1731.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们尤其要记住各个屏幕的尺寸和&lt;strong&gt;类前缀&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;组件&quot;&gt;组件&lt;/h2&gt;
&lt;p&gt;一个按钮称之为样式；两个按钮在一起，就可以称之为组件。&lt;/p&gt;
&lt;p&gt;组件在&lt;a href=&quot;https://v3.bootcss.com/components/&quot;&gt;官网&lt;/a&gt;有介绍：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1738.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们现在需要关注的不是组件怎么用，而是里面有哪些组件，避免&lt;strong&gt;重复造轮子&lt;/strong&gt;：别人已经做得很好了，不需要我们再重复。&lt;/p&gt;
&lt;h2 id=&quot;js-组件&quot;&gt;JS 组件&lt;/h2&gt;
&lt;p&gt;JS 组件在&lt;a href=&quot;https://v3.bootcss.com/javascript/&quot;&gt;官网&lt;/a&gt;有介绍：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1750.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里面包含了很多带交互的组件。比如轮播图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180225_1840.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;博主提供的下载链接&quot;&gt;博主提供的下载链接&lt;/h2&gt;
&lt;p&gt;空结构的工程文件的下载地址：(lib文件夹里包含了各种库和 Bootstrap 中文文档)&lt;/p&gt;
&lt;p&gt;还是那句话：&lt;strong&gt;如果需要哪个样式，直接根据文档的指引，在相应的元素里加指定的类名即可。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;我的公众号&quot;&gt;我的公众号&lt;/h2&gt;
&lt;p&gt;想学习&lt;span&gt;&lt;strong&gt;代码之外的软技能&lt;/strong&gt;&lt;/span&gt;？不妨关注我的微信公众号：&lt;strong&gt;生命团队&lt;/strong&gt;（id：&lt;code&gt;vitateam&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/2016040102.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 25 Feb 2018 13:11:00 +0000</pubDate>
<dc:creator>生命壹号</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/smyhvae/p/8470657.html</dc:identifier>
</item>
<item>
<title>【数据结构】——堆及其应用 - 你好，十二</title>
<link>http://www.cnblogs.com/zhonglongbo/p/8470553.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhonglongbo/p/8470553.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、堆&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;先说说堆概念&lt;/strong&gt;：如果有一个关键码的集合K = {k0，k1， k2，…，kn-1}，把它的所有元素按完全二叉树的顺序存储方式存储在一个一维数组中，并满足：Ki &amp;lt;= K2&lt;em&gt;i+1 且 Ki&amp;lt;= K2&lt;/em&gt;i+2 (Ki &amp;gt;=K2&lt;em&gt;i+1 且 Ki &amp;gt;= K2&lt;/em&gt;i+2) i =0，1，2…，则称为小堆(或大堆)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小堆(大堆)中&lt;/strong&gt;：任一结点的关键码均小于(大于)等于它的左右孩子的关键码，位于堆顶结点的关键码最小(最大)，从根节点到每个结点的路径上数组元素组成的序列都是递增(递减)的堆存储在下标为0开始的数组中，因此在堆中给定下标为i的结点时：如果i=0，结点i是根节点，没有双亲节点；否则结点i的双亲结点为结点(i-1)/2如果2 * i + 1 &amp;lt;= n - 1，则结点i的左孩子为结点2 * i + 1，否则结点i无左孩子如果2 * i + 2 &amp;lt;= n - 1，则结点i的右孩子为结点2 * i + 2，否则结点i&lt;br/&gt;&lt;strong&gt;①大小堆的构建&lt;/strong&gt;&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1313477/201802/1313477-20180225203740782-772805673.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将二叉树调整为最小堆的原理&lt;/strong&gt;：&lt;br/&gt;从最后一个非叶子结点开始调整，一直到根节点为止，将每个结点及其子树调整到满足小堆的性质即可。&lt;br/&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void AdjustDown(DataType* a, size_t n, int root) //向下调整
{
    int parent = root;
    int child = parent*2 + 1;
    while (child&amp;lt;(int)n)
    {
        if(a[child]&amp;gt;a[child+1] &amp;amp;&amp;amp; child+1 &amp;lt;(int)n)
            ++child;

        if (a[child]&amp;lt;a[parent])
            Swap(&amp;amp;a[child],&amp;amp;a[parent]);
        else
            break;

        parent = child;
        child = parent*2 + 1;
    }
}
void MakeSmallHeap(DataType* a, size_t n) //构建小堆
{
    int i = (n-2)&amp;gt;&amp;gt;1;
    for (; i &amp;gt;= 0; --i)
    {
        AdjustDown(a,n,i);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;大堆与小堆原理相同，代码相似，此处不再赘述。&lt;br/&gt;&lt;strong&gt;②堆的插入和删除&lt;/strong&gt;&lt;br/&gt;插入&lt;br/&gt;其实在一个堆中是可以在任意位置插入和删除结点的，为了高效起见我们在插入一个结点时我们将该结点尾插到存储堆结构的顺序表中，如果我们插入的结点比原来的大堆中的所有数据都大的话我们就破坏了原来的大顶堆的结构了，此时我们就需要调整新堆的，在这里用的是向上调整的算法.&lt;br/&gt;插入数据的时间复杂度为O(lgn).&lt;br/&gt;&lt;strong&gt;向上调整代码：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void AdjustUp(DataType* a,int child) //向上调整
{
    int parent = (child-1)&amp;gt;&amp;gt;1;
    while (child &amp;gt;0)
    {
        if (a[parent] &amp;gt; a[child] &amp;amp;&amp;amp; parent &amp;gt;= 0)
            Swap(&amp;amp;a[child],&amp;amp;a[parent]);
        else
            break;

        child = parent;
        parent = (child-1)&amp;gt;&amp;gt;1;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;删除&lt;br/&gt;1).将最后一个结点的数据域与堆顶的元素交换.&lt;br/&gt;2).删除最后一个结点，此时删除的就是原来的堆顶元素&lt;br/&gt;3).向下调整删除之后的堆，使其继续满足大顶堆的定义.&lt;br/&gt;删除数据的时间复杂度为O(lgn).&lt;br/&gt;插入和删除的算法会在堆的应用中写道，此处不再赘述。&lt;br/&gt;&lt;strong&gt;堆的应用&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;①优先级队列&lt;/strong&gt;&lt;br/&gt;我们知道队列的特性是先进先出，那什么是优先级队列呢？在某一情况下队列的先进先出并不能满足我们的需求，我们需要优先级高的先出队列，这就类似VIP之类的.&lt;br/&gt;下面给出实现优先级队列的两种思路:&lt;br/&gt;想法一:&lt;br/&gt;Push:在需求的优先级的位置插入数据，时间复杂度为O(n).&lt;br/&gt;&lt;a class=&quot;uri&quot;&gt;Pop:直接从队头删除数据，时间复杂度为O(1)&lt;/a&gt;.&lt;br/&gt;想法二:&lt;br/&gt;Push:直接插在队尾，时间复杂度为O(1).&lt;br/&gt;&lt;a class=&quot;uri&quot;&gt;Pop:找到优先级最高的元素删除,时间复杂度为O(n)&lt;/a&gt;.&lt;br/&gt;在实际应用中第一种想法是优于第二种想法的,但是其实还有一种更加高效的方法，那就是用堆实现优先级队列&lt;br/&gt;&lt;strong&gt;函数代码：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void PriorityQueuePush(PriorityQueue* q, DataType x)
{
    assert(q);
    if (q-&amp;gt;_size == N)
        return;

    q-&amp;gt;_a[q-&amp;gt;_size] = x;
    q-&amp;gt;_size++;
    
    AdjustUp(q-&amp;gt;_a,q-&amp;gt;_size-1);
}

void PriorityQueuePop(PriorityQueue* q)
{
    assert(q);
    if (q-&amp;gt;_size == 0)
        return;

    q-&amp;gt;_a[0] = q-&amp;gt;_a[q-&amp;gt;_size-1];
    q-&amp;gt;_size--;

    AdjustDown(q-&amp;gt;_a,q-&amp;gt;_size,0);
}

DataType PriorityQueueTop(PriorityQueue* q)
{
    if (PriorityQueueEmpty(q))
        return q-&amp;gt;_a[0];
}

size_t PriorityQueueSize(PriorityQueue* q)
{
    assert(q);
    return q-&amp;gt;_size;
}

size_t PriorityQueueEmpty(PriorityQueue* q) 
{
    assert(q);
    if (q-&amp;gt;_size &amp;gt; 0)
        return 1;
    else
        return 0;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;头文件和测试代码在结尾给出。&lt;br/&gt;&lt;strong&gt;②topk问题（构建相反堆找出前k个数）&lt;/strong&gt; 在大规模数据处理中，经常会遇到的一类问题：在海量数据中找出出现频率最好的前k个数，或者从海量数据中找出最大的前k个数，这类问题通常被称为top K问题。例如，在搜索引擎中，统计搜索最热门的10个查询词；在歌曲库中统计下载最高的前10首歌等。&lt;/p&gt;
&lt;p&gt;维护一个K个数据的小顶堆，遍历元素，若元素大于堆顶元素，则将堆顶元素移除，当前元素插入堆顶，并进行调整。&lt;br/&gt;&lt;strong&gt;代码实现&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void TopK(DataType* a, size_t n, size_t k) //topk问题
{
    size_t i = k;
    MakeSmallHeap(a,k); //构建小堆
    
    for (i=k; i&amp;lt;n; i++) //遍历剩下的数
    {
        if (a[i]&amp;gt;a[0])
        {
            a[0] = a[i];
            AdjustDown(a,k,0);//向下调整
        }
    }

    for (i=0; i&amp;lt;k; i++)
    {
        printf(&quot;%d &quot;,a[i]);
    }
    printf(&quot;\n&quot;);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;头文件和测试代码在结尾给出。&lt;br/&gt;&lt;strong&gt;③堆排序（升序 — 构建大堆 降序 — 构建小堆）&lt;/strong&gt;&lt;br/&gt;堆排序：先建立一个最大堆。然后将最大堆的a[0]与a[n]交换，然后从堆中去掉这个节点n，通过减少n的值来实现。剩余的节点中，新的根节点可能违背了最大堆的性质，因此需要调用向下调整函数来维护最大堆。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数代码：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void HeapSort(DataType* a, size_t n)  //堆排序
{
    MakeBigHeap(a,n); //构建大堆

    while (n&amp;gt;0)
    {
        Swap(&amp;amp;a[0],&amp;amp;a[n-1]);
        n--;
        AdjustDown(a,n,0);
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;头文件和测试代码在结尾给出。&lt;/p&gt;
&lt;p&gt;Head.h&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#ifndef __HEAD_H__
#define __HEAD_H__

#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;assert.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include&amp;lt;string.h&amp;gt;

typedef int DataType; 

//构建大小堆
void AdjustDown(DataType* a, size_t n, int root);
void MakeBigHeap(DataType* a, size_t n);
void MakeSmallHeap(DataType* a, size_t n);
void AdjustUp(DataType* a,int child);

// topk 最大的前K 
void TopK(DataType* a, size_t n, size_t k);

//优先级队列问题
#define N 1000 

typedef struct PriorityQueue 
{ 
    DataType _a[N]; 
    size_t _size; 

}PriorityQueue; 

void PriorityQueueInit(PriorityQueue* q);  //初始化
void PriorityQueuePush(PriorityQueue* q, DataType x); //入队
void PriorityQueuePop(PriorityQueue* q); //出队
DataType PriorityQueueTop(PriorityQueue* q); 
size_t PriorityQueueSize(PriorityQueue* q); 
size_t PriorityQueueEmpty(PriorityQueue* q); 

void HeapSort(DataType* a, size_t n); //堆排序

#endif //__HEAD_H__&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Head.c&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#include &quot;Heap.h&quot;

static void Swap(int *child,int *parent)  //交换函数
{
    int tmp = *child;
    *child = *parent;
    *parent = tmp;
}

void AdjustDown(DataType* a, size_t n, int root) //向下调整
{
    int parent = root;
    int child = parent*2 + 1;
    while (child&amp;lt;(int)n)
    {
        if(a[child]&amp;lt;a[child+1] &amp;amp;&amp;amp; child+1 &amp;lt;(int)n)
            ++child;

        if (a[child]&amp;gt;a[parent])
            Swap(&amp;amp;a[child],&amp;amp;a[parent]);
        else
            break;

        parent = child;
        child = parent*2 + 1;
    }
}
void MakeBigHeap(DataType* a, size_t n) //构建大堆
{
    int i = (n-2)&amp;gt;&amp;gt;1;
    for (; i &amp;gt;= 0; --i)
    {
        AdjustDown(a,n,i);
    }
}

void MakeSmallHeap(DataType* a, size_t n) //构建小堆
{
    int i = (n-2)&amp;gt;&amp;gt;1;
    for (; i &amp;gt;= 0; --i)
    {
        AdjustDown(a,n,i);
    }
}

void AdjustUp(DataType* a,int child) //向上调整
{
    int parent = (child-1)&amp;gt;&amp;gt;1;
    while (child &amp;gt;0)
    {
        if (a[parent] &amp;gt; a[child] &amp;amp;&amp;amp; parent &amp;gt;= 0)
            Swap(&amp;amp;a[child],&amp;amp;a[parent]);
        else
            break;

        child = parent;
        parent = (child-1)&amp;gt;&amp;gt;1;
    }
}

void TopK(DataType* a, size_t n, size_t k) //topk问题
{
    size_t i = k;
    MakeSmallHeap(a,k);
    
    for (i=k; i&amp;lt;n; i++)
    {
        if (a[i]&amp;gt;a[0])
        {
            a[0] = a[i];
            AdjustDown(a,k,0);
        }
    }

    for (i=0; i&amp;lt;k; i++)
    {
        printf(&quot;%d &quot;,a[i]);
    }
    printf(&quot;\n&quot;);
}

void PriorityQueueInit(PriorityQueue* q)
{
    assert(q);
    memset(q-&amp;gt;_a,0,sizeof(DataType)*N);
    q-&amp;gt;_size = 0;
}

void PriorityQueuePush(PriorityQueue* q, DataType x)
{
    assert(q);
    if (q-&amp;gt;_size == N)
        return;

    q-&amp;gt;_a[q-&amp;gt;_size] = x;
    q-&amp;gt;_size++;
    
    AdjustUp(q-&amp;gt;_a,q-&amp;gt;_size-1);
}

void PriorityQueuePop(PriorityQueue* q)
{
    assert(q);
    if (q-&amp;gt;_size == 0)
        return;

    q-&amp;gt;_a[0] = q-&amp;gt;_a[q-&amp;gt;_size-1];
    q-&amp;gt;_size--;

    AdjustDown(q-&amp;gt;_a,q-&amp;gt;_size,0);
}

DataType PriorityQueueTop(PriorityQueue* q)
{
    if (PriorityQueueEmpty(q))
        return q-&amp;gt;_a[0];
}

size_t PriorityQueueSize(PriorityQueue* q)
{
    assert(q);
    return q-&amp;gt;_size;
}

size_t PriorityQueueEmpty(PriorityQueue* q) 
{
    assert(q);
    if (q-&amp;gt;_size &amp;gt; 0)
        return 1;
    else
        return 0;
}

void HeapSort(DataType* a, size_t n)  //堆排序
{
    MakeBigHeap(a,n);

    while (n&amp;gt;0)
    {
        Swap(&amp;amp;a[0],&amp;amp;a[n-1]);
        n--;
        AdjustDown(a,n,0);
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Test.c&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#include &quot;Heap.h&quot;

void Test1()
{ 
    int  i = 0;
    DataType a[] = {16, 18, 15, 17, 14, 19,10,11, 13, 12};
    MakeSmallHeap(a, sizeof(a)/sizeof(DataType));
    MakeBigHeap(a, sizeof(a)/sizeof(DataType)); 

    DataType NArray[1000]; 
    srand((int)time(0)); 
    for (i = 0; i &amp;lt; 1000; ++i) 
    { 
        NArray[i] = rand()%10000; 
    } 

    NArray[30] = 10001; 
    NArray[350] = 10002; 
    NArray[999] = 10003; 
    NArray[158] = 10004; 
    NArray[334] = 10005; 

    TopK(NArray, 1000, 5); 

    HeapSort(a,sizeof(a)/sizeof(DataType));
}

void TestPriorityQueue() 
{ 
    PriorityQueue q; 
    PriorityQueueInit(&amp;amp;q); 
    PriorityQueuePush(&amp;amp;q, 5); 
    PriorityQueuePush(&amp;amp;q, 2); 
    PriorityQueuePush(&amp;amp;q, 3); 
    PriorityQueuePush(&amp;amp;q, 7); 
    PriorityQueuePush(&amp;amp;q, 6); 
    PriorityQueuePush(&amp;amp;q, 1); 
    PriorityQueuePush(&amp;amp;q, 4); 

    while (PriorityQueueEmpty(&amp;amp;q) != 0) 
    { 
        printf(&quot;%d &quot;, PriorityQueueTop(&amp;amp;q)); 
        PriorityQueuePop(&amp;amp;q); 
    } 
    printf(&quot;\n&quot;); 

} 

int main()
{
    Test1();
    TestPriorityQueue();
    return 0;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;topk问题测试时要巧妙构建测试案例。&lt;/p&gt;
</description>
<pubDate>Sun, 25 Feb 2018 12:39:00 +0000</pubDate>
<dc:creator>你好，十二</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhonglongbo/p/8470553.html</dc:identifier>
</item>
</channel>
</rss>