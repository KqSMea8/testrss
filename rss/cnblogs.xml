<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>[.Net Core] 简单使用 Mvc 内置的 Ioc（续） - 反骨仔</title>
<link>http://www.cnblogs.com/liqingwen/p/8585119.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liqingwen/p/8585119.html</guid>
<description>&lt;p&gt;　　本文基于 .NET Core 2.0。&lt;/p&gt;
&lt;p&gt;　　上一章《&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/liqingwen/p/8571366.html&quot;&gt;[.Net Core] 简单使用 Mvc 内置的 Ioc&lt;/a&gt;》已经对日常 Mvc 中的 Ioc 的简单用法进行了说明，此外还有一些需要补充的内容。&lt;/p&gt;
&lt;p&gt;　　接下来会围绕着这些疑问进行回答：AOP 中 Filter 和 Ioc 的结合使用是啥样子的呢？ 怎样直接获取 Ioc 中的实例对象，而不是以构造函数的方式进行获取呢？&lt;/p&gt;

&lt;h2&gt;目录&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;场景一：Ioc 结合过滤器 Filter 使用&lt;/li&gt;
&lt;li&gt;场景二：直接获取 Ioc 管理的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;场景一：Ioc 结合过滤器 Filter 使用&lt;/h2&gt;
&lt;p&gt;　　先编写一个过滤器 ExceptionFilter.cs，继承 IExceptionFilter，主要是用于错误时记录日志，使用的命名空间是 Microsoft.AspNetCore.Mvc.Filters。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.AspNetCore.Mvc.Filters;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; IocCoreDemo
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ExceptionFilter : IExceptionFilter
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt;&lt;span&gt; LogService _logService;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ExceptionFilter(LogService logService)
        {
            _logService &lt;/span&gt;=&lt;span&gt; logService;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnException(ExceptionContext context)
        {
            _logService.Error(context.Exception.Message);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　LogService.cs 打印日志的类：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LogService
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Error(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; message)
        {
            Console.WriteLine(message);
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　我在控制器 Demo4Controller.cs 内部的 Index() 方法中显式的让它抛出尚未实现的异常来进行测试：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Demo4Controller : Controller
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IActionResult Index()
        {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; NotImplementedException();
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　接下来，是在核心的 Startup.cs 中的 ConfigureServices() 方法内修改代码，小编使用 AddSingleton() 作为示例方法进行注入：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
        {
            services.AddSingleton(&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;(ExceptionFilter));     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;注入 ExceptionFilter&lt;/span&gt;
            services.AddSingleton(&lt;span&gt;typeof&lt;/span&gt;(LogService));          &lt;span&gt;//&lt;/span&gt;&lt;span&gt;注入 LogService&lt;/span&gt;
&lt;span&gt;
            services.AddMvc(x &lt;/span&gt;=&amp;gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建一个 ServiceProvider 对象&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; provider =&lt;span&gt; services.BuildServiceProvider();
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; filter = provider.GetService&amp;lt;ExceptionFilter&amp;gt;&lt;span&gt;();

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加过滤器&lt;/span&gt;
&lt;span&gt;                x.Filters.Add(filter);
            });
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/711762/201803/711762-20180316205459596-1244136185.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　启动程序并跳转到路径 http://localhost:port/demo4 后，我们发现能够触发异常过滤器：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/711762/201803/711762-20180316205956453-213185580.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;场景二：直接获取 Ioc 管理的对象&lt;/h2&gt;
&lt;p&gt;　　测试用的服务类 Demo5Service.cs：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Demo5Service
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; Test()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Guid.NewGuid().ToString();
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　方法一&lt;/h3&gt;
&lt;p&gt;　　我们可以在控制器内通过 this.HttpContext.RequestServices.GetService() 的方式获取已经注入 Ioc 内的服务对象，如控制器 Demo5Controller.cs：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Demo5Controller : Controller
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IActionResult Index()
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; demoService = (Demo5Service) &lt;span&gt;this&lt;/span&gt;.HttpContext.RequestServices.GetService(&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(Demo5Service));
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Json(demoService.Test());
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　不要忘记在 Startup.cs 中注入服务类：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/711762/201803/711762-20180317003040097-164651766.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;　　执行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/711762/201803/711762-20180317002359889-862421342.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;　　方法二&lt;/h3&gt;
&lt;p&gt;　　通过场景一知道：ServiceProvider 类中的 GetService() 方法可以获取已经注入的 Ioc 对象，这样我们可以考虑从如何获取该对象（ServiceProvider 类对象）着手。&lt;/p&gt;
&lt;p&gt;　　下面，我在 Startup.cs 类中添加一个静态的 ServiceProvider 类成员属性，方便可以从外部获取：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Startup
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ServiceProvider ServiceProvider { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;private&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; This method gets called by the runtime. Use this method to add services to the container.&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();

            services.AddSingleton&lt;/span&gt;&amp;lt;Demo5Service&amp;gt;&lt;span&gt;();

            ServiceProvider &lt;/span&gt;=&lt;span&gt; services.BuildServiceProvider();
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;...&lt;/span&gt;
    }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/711762/201803/711762-20180317004005235-261268832.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　之后，我们可以采取这样的方式获取 Ioc 中已经注入的对象：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Demo5Controller : Controller
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IActionResult Index()
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; demoService = (Demo5Service)Startup.ServiceProvider.GetService(&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(Demo5Service));
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Json(demoService.Test());
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原文：&lt;a id=&quot;Editor_Edit_hlEntryLink&quot; title=&quot;view: [.Net Core] 简单使用 Mvc 内置的 Ioc（续）&quot; href=&quot;http://www.cnblogs.com/liqingwen/p/8585119.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/liqingwen/p/8585119.html&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;相关的文章：&lt;/p&gt;
&lt;p&gt;　　《&lt;a id=&quot;post_title_link_8561284&quot; href=&quot;http://www.cnblogs.com/liqingwen/p/8561284.html&quot;&gt;[.Net Core] 简单读取 json 配置文件&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;　　《&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/liqingwen/p/8571366.html&quot;&gt;[.Net Core] 简单使用 Mvc 内置的 Ioc&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;　　《&lt;a href=&quot;http://www.cnblogs.com/liqingwen/p/8585119.html&quot; target=&quot;_blank&quot;&gt;[.Net Core] 简单使用 Mvc 内置的 Ioc（续）&lt;/a&gt;》&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 23:35:00 +0000</pubDate>
<dc:creator>反骨仔</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liqingwen/p/8585119.html</dc:identifier>
</item>
<item>
<title>Liveness 探测 - 每天5分钟玩转 Docker 容器技术（143） - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/8594143.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/8594143.html</guid>
<description>&lt;p&gt;&lt;span&gt;Liveness 探测让用户可以自定义判断容器是否健康的条件。如果探测失败，Kubernetes 就会重启容器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;还是举例说明，创建如下 Pod：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180318063211172-1165637315.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;启动进程首先创建文件 &lt;/span&gt;&lt;code&gt;&lt;span&gt;/tmp/healthy&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，30 秒后删除，在我们的设定中，如果 &lt;/span&gt;&lt;code&gt;&lt;span&gt;/tmp/healthy&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 文件存在，则认为容器处于正常状态，反正则发生故障。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;livenessProbe&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 部分定义如何执行 Liveness 探测：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;探测的方法是：通过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;cat&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 命令检查 &lt;/span&gt;&lt;code&gt;&lt;span&gt;/tmp/healthy&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 文件是否存在。如果命令执行成功，返回值为零，Kubernetes 则认为本次 Liveness 探测成功；如果命令返回值非零，本次 Liveness 探测失败。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;initialDelaySeconds: 10&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 指定容器启动 10 之后开始执行 Liveness 探测，我们一般会根据应用启动的准备时间来设置。比如某个应用正常启动要花 30 秒，那么 &lt;/span&gt;&lt;code&gt;&lt;span&gt;initialDelaySeconds&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的值就应该大于 30。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;periodSeconds: 5&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 指定每 5 秒执行一次 Liveness 探测。Kubernetes 如果连续执行 3 次 Liveness 探测均失败，则会杀掉并重启容器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;下面创建 Pod &lt;/span&gt;&lt;code&gt;&lt;span&gt;liveness&lt;/span&gt;&lt;/code&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180318063228766-318074746.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;从配置文件可知，最开始的 30 秒，&lt;/span&gt;&lt;code&gt;&lt;span&gt;/tmp/healthy&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 存在，&lt;/span&gt;&lt;code&gt;&lt;span&gt;cat&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 命令返回 0，Liveness 探测成功，这段时间 &lt;/span&gt;&lt;code&gt;&lt;span&gt;kubectl describe pod liveness&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Events&lt;/span&gt;&lt;/code&gt;&lt;span&gt;部分会显示正常的日志。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180318063239701-32255930.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;35 秒之后，日志会显示 &lt;/span&gt;&lt;code&gt;&lt;span&gt;/tmp/healthy&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 已经不存在，Liveness 探测失败。再过几十秒，几次探测都失败后，容器会被重启。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180318063302280-389678513.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180318063312886-1743635322.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除了 Liveness 探测，Kubernetes Health Check 机制还包括 Readiness 探测，这是我们下一节要学习的内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;书籍：&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;1.《每天5分钟玩转Docker容器技术》&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://item.jd.com/16936307278.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://item.jd.com/16936307278.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;2.《每天5分钟玩转OpenStack》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/12086376.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/12086376.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img title=&quot;https://i.imgsafe.org/68/68da21ce15.png&quot; src=&quot;https://i.imgsafe.org/68/68da21ce15.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 21:40:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/8594143.html</dc:identifier>
</item>
<item>
<title>开源使得所有的软件卖成白菜价，但终将普惠世界！ - popsuper1982</title>
<link>http://www.cnblogs.com/popsuper1982/p/8598485.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/popsuper1982/p/8598485.html</guid>
<description>&lt;p&gt;有的人用创意改变世界&lt;/p&gt;
&lt;p&gt;有的人用代码改变世界&lt;/p&gt;
&lt;p&gt;有的人用管理改变世界&lt;/p&gt;

&lt;p&gt;所有改变世界的人都令人尊敬，世界是你们的，世界是我们的，世界总归是开源的，开源的才是大众的。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、一切从技术生命周期说起&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;任何技术，任何产品都是有生命周期的，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/635909/201803/635909-20180319001708837-650053111.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;都有起步，成长，成熟和衰退四个阶段：&lt;/p&gt;
&lt;ul class=&quot;list-paddingleft-2&quot; readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;起步阶段：也即一个技术的最初发明，这个时候，也许连最初发明产品的科学家都不知道此技术在市场上究竟如何使用，如何产品化。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;成长阶段：此项技术被少数先知先觉的，有长远市场洞察力公司转化为产品，逐渐推向市场，被大众认可。此阶段，市场仍旧为蓝海，或因为技术壁垒，或因为市场不够成熟，竞争者较少，利润率较高，是先觉的公司快速增长，猛赚钱的阶段。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;成熟阶段：此项技术或已经过了专利保护期，或已经被市场上的公司广泛掌握，技术壁垒已经基本消失。此阶段一般分为两个小的阶段：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;list-paddingleft-2&quot;&gt;
&lt;ul class=&quot;list-paddingleft-2&quot; readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;第一阶段，大量的公司涌入，使得蓝海市场变为红海，利润率降低，可能产生价格战，称为群雄逐鹿的阶段；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;第二阶段，少数公司经过良好的市场运作或消灭，或合并其他的公司，最后形成垄断，继续保持较高的利润率&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;衰退阶段：此项技术已经十分成熟，比较少有创新的空间，新技术的产生及代替作用使得利润率降低，哪怕是对垄断性的公司。掌握此项技术的公司已非明星企业，但是不会很快消亡，因为技术尚在使用，并且没有太多的公司进入，因而能够维持平稳的利润。比如虽然载人飞船已经上天了，马车仍在使用，制造马车的作坊也能实现盈利。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、工业化时代，把牛的技术牢牢把控在自己手里，时间越长越好&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;在工业化时代到来之前，大牛们都是跨界的，能包揽数学家，物理学家，哲学家，天文学家为一人身上，社会分工和社会协作没那么重要。&lt;/p&gt;

&lt;p&gt;工业化时代，社会协作已经非常普遍，很难像传统社会一样不相互协作，但是协作主要的方式是跨行业和领域，但是同一个垂直领域内的事情，只要技术足够好，一个大规模的企业是能够完成内部大规模协作的，所以企业规模会非常非常的大，人数会非常非常的多。&lt;/p&gt;

&lt;p&gt;例如卡尔·本茨发明了内燃机车，从而有了奔驰，福特发明了流水线，从而有了福特公司，爱迪生创办通用电气等等。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、信息化时代，最牛的干不过最兼容的&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;信息化时代，社会分工进一步细化和复杂，哪怕巨无霸之类的企业也没办法将一个垂直领域的事情在企业内部搞定，否则成本会非常高，产品会非常贵。&lt;/p&gt;

&lt;p&gt;这个时候企业会有两种选择，一个是在技术初期形成技术壁垒，并保持这个技术壁垒，但是技术壁垒能够保持的时间越来越短，因为有的企业会做第二种选择，就是虽然技术不同，但是提供功能类似的产品，并一开始就保持兼容，这样使得整个行业和第一类企业进行PK，这样第一类企业抱在手里的技术不是是否能称为壁垒的问题，而是会被整个行业边缘化的问题，这样第一类的企业必须不断的创新，保持新的技术壁垒，而旧的行业已经因为兼容性，很快被卖成了白菜价，根本撑不起公司内部的合作。&lt;/p&gt;

&lt;p&gt;例如在企业级服务器市场，IBM长期严格保护着自己在POWER微架构上的技术知识产权，开发了一整套从底层硬件、系统平台再到应用软件的垂直整合的封闭式堆栈。本来Power机器卖的非常的贵，IBM赚的盆满钵满的，但是还是迎来了x86开放平台的竞争。&lt;/p&gt;

&lt;p&gt;首先，英特尔并不是x86处理器唯一的供应商，除了耳熟能详的AMD之外，还有多家供应商曾经涉足这一市场。x86指令集是一个比较开放的指令集，包括英特尔、AMD在内的供应商之间，长期以来通过交叉授权指令集的方式，构成了相对RISC架构更为开放的x86架构。但最重要的原因还是体现在操作系统和应用软件上，以英特尔为代表的x86处理器供应商，在一开始就致力于兼容、支持更多的操作系统和应用软件，比如说在操作系统领域，Windows、Linux自不必说，VMware的vSphere也是依靠x86服务器平台而发展起来的。&lt;/p&gt;

&lt;p&gt;于是后来康柏，惠普，戴尔，联想，浪潮都把X86服务器卖成了白菜价，利润率大幅降低。&lt;/p&gt;

&lt;p&gt;同样在个人电脑领域，在巨头们都没有在意这个市场的时候，苹果公司率先推出了苹果个人电脑，受到了市场的巨大欢迎，然而随着兼容器的大量涌入市场，个人电脑的成本越来越低，到现在买个笔记本电脑也和买个白菜差不多了。&lt;/p&gt;

&lt;p&gt;从硬件到软件都做的苹果公司在成本上肯定要高于纯粹的兼容机生产商，虽然苹果粉们无无限热爱MAC个人电脑，但是仅仅靠个人电脑部分无法撑起整个苹果帝国，所以苹果必须快速打造下一个创新点，也就是大家众所周知的移动设备领域的苹果手机。&lt;/p&gt;

&lt;p&gt;然而后来有了移动领域的开源操作系统安卓，于是移动设备领域又出现了个人电脑领域同样的一幕，所有其他的厂商借着开源操作系统杀了进来，价格越来越低，已经几乎人手一部的节奏。苹果公司借着先发优势，良好的用户体验，仍然活的非常爽，但不能不说同样危急四伏。可以想象在开源的领域，有一部分人会进一步降低手机的价格，有一部分人会进一步增强手机的性能，还有一部分人不断的增强用户体验(例如罗永浩)，苹果需要赶快开启下一个新的创新点，开启新的技术生命周期，而不能仅仅限于屏幕变大些，系统变快些的小改动。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、互联网时代，开源对技术生命周期进行彻底的冲击&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;互联网时代，分工已经如此的细，细到一个专家只能专注于某个非常非常细分的领域，就像图灵奖获得者姚期智的成就为创建理论计算机科学的重要次领域：通讯复杂性和伪随机数生成计算理论，大家不用理解这是什么，但从名称已经可以看出比《自然哲学的数学原理》细分了N多倍。&lt;/p&gt;

&lt;p&gt;从事计算机软件的人可能更加的清楚，从计算机语言几十种，到从事的领域(通信，ERP，搜索，视频等等上百种)，不同的框架(上千种)等等千差外别，不一而足，分的不能再细了。&lt;/p&gt;

&lt;p&gt;好在有互联网，可以将如此多细分的领域通过网络的链接起来，进行自由协作，在这个时代，我们发现技术生命周期不管用了。&lt;/p&gt;

&lt;p&gt;企业和组织很难抱着一个封闭的技术，通过法律的保护，过几年高利润的生活，因为任何的创新都会飞快的在组织外进行复制，不是偷你的知识产权，不是偷你的代码，你不用把门禁系统搞的这么严，没用的，只要你的产品出来了，这个形态市场喜欢，开源软件的大牛们就能够根据这个思想，通过互联网的相互协作，组织起比你的公司更多的力量，重新快速的写一套代码，可能很快更加稳定，应用范围更广，会有大批的企业用这个开源软件开发出新的产品，很快就能把这个产品干成白菜价，知识产权保护不了你多久，就能够普惠大众。&lt;/p&gt;

&lt;p&gt;我们能够发现无论是那种技术的普及，都离不开三种牛人的馈赠：&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第一类大牛：产品和技术的创意者。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;世上本没有某种东西，是这些大牛有独特的产品的思维，或者技术的能力，创造出了某种东西。例如苹果的智能机操作系统IOS，Google的分布式文件系统GFS，搜索引擎，Oracle数据库，Vmware虚拟化软件等。&lt;/p&gt;

&lt;p&gt;这些产品和技术改变了世界，带来了便利，自然应该取得商业上的回报，赚的盆满钵满。在这个阶段，虽然站在岸边看着的公司和技术人员看着别人数钱数到手抽筋，却只能眼巴巴的看着，没有办法，大家都在等待第二类大牛的出现。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第二类大牛：开源软件的实现者。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;这个世界上还是有很多有情怀的人的，尤其是程序员里面，有情怀的人喜欢做一件什么事情呢？开源。这个世界上很多软件都是有闭源就有开源，源就是源代码。就是说某个软件做的好，所有人都爱用，这个软件的代码呢，我封闭起来只有我公司知道，其他人不知道，如果其他人想用这个软件，就要付我钱，这就叫闭源。但是世界上总有一些大牛看不惯钱都让一家赚了去。大牛们觉得，这个技术你会我也会，你能开发出来，我也能，我开发出来就是不收钱，把代码拿出来分享给大家，全世界谁用都可以，所有的人都可以享受到好处，这个叫做开源。&lt;/p&gt;

&lt;p&gt;在上个阶段大部分平庸的公司和技术人员眼巴巴的看着创意者赚钱的时候，大牛们早就开始动手了，这些大牛书写开源软件的速度超出人们的想象，初期的代码往往直接和略带混乱，于是有了Android，Hadoop，Lucene，Mysql，OpenStack等。&lt;/p&gt;

&lt;p&gt;如果不是有开源技术的大牛，如我们普通的技术人员还不知道要等多久。&lt;/p&gt;
&lt;p&gt;然而一旦开源技术出现，马上就会有大量的厂商带领着大量的普通技术人员涌入，基于开源软件迅速封装自己的产品，并以低价杀入市场，打破原来创意者躺着赚钱的美梦。在开源软件领域，从大批公司疯了一样的做搜索引擎，底层大部分使用lucene，后来又有大批公司做大数据，底层大部分用hadoop，后来的OpenStack热，Docker热，都是开源大牛带给世界的红利。&lt;/p&gt;

&lt;p&gt;不要以为将开源软件封装为产品很简单，在大家的技术栈几乎相同的情况下，能够杀出一条血路，也是非常牛的。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第三类大牛：开源产品的经营者。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;当技术都差不多的时候，能活下来的公司的经营者，所需要的综合素质比前两种牛人一点都不低，简直是十八班武艺样样精通，如何在开源软件的基础上开发出有差异的产品，产品需要上市速度快并且用户体验好，要能认准一个此类技术最试用的行业迅速杀进去占领市场，要能留得住开源领域内的大牛，要能够控制好公司的成本，要能够在这轮钱烧完之前做出成绩融到下一轮。最终大浪淘沙留下来的都是牛人，也正是因为他们，相应的技术才能够以白菜价被大众使用，普通人和公司才能买的起。&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、未来，开源会使企业的主动选择&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;以后互联网软件的方式，是企业会主动选择开源，只有尽早开源，拥抱开源，才能更多的主导开源的江湖，而不被边缘化，反而只有更早的开源，才能保持自己的技术优势。&lt;/p&gt;

&lt;p&gt;在云计算领域很多人都知道CloudStack和OpenStack的故事，两个功能几乎类似的云计算软件，CloudStack甚至都比OpenStack成熟N多倍，但是因为CloudStack开源的时间晚了一点点，并且被少数的公司主导，而使得OpenStack迅速发展壮大，所有如雷贯耳的公司都加入到OpenStack社区里面来，OpenStack已经成为开源云计算的事实标准，Vmware也开始对其进行兼容，大批企业的涌入很快将云计算基础设施干成了白菜价。&lt;/p&gt;

&lt;p&gt;再后来，如Docker，DC/OS, kubernetes，tensorflow等，都是尽早开源的，都是在创立这个技术的公司还没有用这个技术赚到钱就开源了，以后的差别可能不再是软件代码本身，而是数据和服务。&lt;/p&gt;

&lt;p&gt;开源是互联网时代个人力量的崛起，GitHub的伟大不仅仅是代码的管理工具，而是聚合程序员的力量，程序员是改变世界的人群，在人工智能时代，他们的代码会控制着社会的方方面面。&lt;/p&gt;

&lt;p&gt;欢迎关注微信公众号&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/635909/201803/635909-20180319001840666-796944160.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 16:19:00 +0000</pubDate>
<dc:creator>popsuper1982</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/popsuper1982/p/8598485.html</dc:identifier>
</item>
<item>
<title>Unity如何管理住Android 6.0 调皮的权限 - wuzhang</title>
<link>http://www.cnblogs.com/wuzhang/p/wuzhang20180319.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuzhang/p/wuzhang20180319.html</guid>
<description>&lt;p&gt;　　前天我们项目有这么个需求，台湾版本由于要上谷歌Play要求安卓系统6.0以上的动态申请权限，对于一个做Unity的来说，是不是有点懵逼，这我该何去何从呢？我想静静，静静的想一想，权限也不就那么点事吗？这算是事吗？这都不是事，遇到问题，不要急着去解决，&lt;span&gt;这里不是不解决，是不要着急为了解决而解决&lt;/span&gt;！软件工程告诉我们需求分析才是第一位的，大学都觉的软件工程是很扯淡的课，其实不然，它是灰常重要的，灰常重要，灰常重要！！！重要的事情说三变。再复习下软件工程的几个步骤：需求分析-&amp;gt;概要设计-&amp;gt;详细设计-&amp;gt;码代码-&amp;gt;测试-&amp;gt;维护！上课基本听老师扯淡了，大致是这么个流程！！！&lt;/p&gt;
&lt;h5&gt;Q1：我怎么知道的APK到底有多少个权限？&lt;br/&gt;&lt;span&gt;A1：这里我要引用我们策划经常说的一句话了，“小伙子，这个问题问的好！”。作为一个懂开发的猿，这个要是不知道，我也不知道该不该说你了。。。AndroidManifest.xml这个你眼熟吧？不错，是你是你就是你！！&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/506960/201803/506960-20180318231658380-1331112951.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;Q2:这些权限看到是看到了，我怎么和他们交个朋友了，熟悉了好办事啊？&lt;br/&gt;&lt;span&gt;A2:注意，首先你是一个会写代码的猿，看懂代码对你来说是事吗？其实我也是现学的，没做过安卓开发，既然都是小白，那还怕什么，有人是不是在静静的看着楼主装X。。。&lt;br/&gt;&lt;span&gt;　　1 如何获取呢，请睁大你的双眼，这里是部分代码，稍后完整的工程会全部奉上！！！&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;collapse:true;;gutter:true;&quot;&gt;
final Bundle bundle = getArguments();&lt;br/&gt;final String[] permissions = bundle.getStringArray(PERMISSIONS);
if (permissions != null)
{
       Collections.addAll(requestedPermissions, permissions);
       allPermissions = permissions;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;轻轻松松拿到了我们想要的一切权限，是不是So Easy!&lt;/p&gt;
&lt;p&gt;拿到了权限我们该怎么处理呢？目前需求是这样的，APK必须的权限都已授权，OK，结束！否则用户不想授予某个权限，例如读取你的联系人之类的，那就没办法了，应用关闭，结束！我感觉这么处理有点太直接了，说不定一个潜在的金主爸爸就这么流失了，我们是不是可以这样，既然拿到权限列表了，最笨的方法也是最有效的，我逐个检测是否授权不就得了，未授权，我给你弹个获取权限的框，说不定，用户一想，授权这也没什么啊，即使读取隐私，也是光明正大的了！那么读取联系人的权限就拿到了，下一个权限。。。权限列表请求一遍了，发现还有未授权的，那就真的GG了，此时不能再弹框申请权限了，用户会烦的，一位哪个傻逼写了个死循环呢！所以这是没办法了，要么此时来个温馨提示，由于您未授权读取联系人，部分功能无法启动，请打开权限后再次使用，谢谢！&lt;br/&gt;我们接下来要做的就是拿到权限列表了，如何动态请求权限呢？&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;56.5&quot;&gt;
&lt;pre class=&quot;brush:java;collapse:true;;gutter:true;&quot; readability=&quot;20&quot;&gt;
   public static void AskPermissions(final String gameObject, final int requestCode, final String[] permissions) {
        UnityPlayer.currentActivity.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                final Bundle bundle = new Bundle();
                bundle.putString(GAME_OBJECT, gameObject);
                bundle.putInt(REQUEST_CODE, requestCode);
                bundle.putStringArray(PERMISSIONS, permissions);
                final PermissionProvider fragment = new PermissionProvider();
                fragment.setArguments(bundle);
                UnityPlayer.currentActivity
                        .getFragmentManager()
                        .beginTransaction()
                        .add(fragment, PermissionProvider.class.getCanonicalName())
                        .commit();
            }
        });
    }&lt;p&gt;/**&lt;br/&gt;* Once user allow or deny permissions this method is called&lt;br/&gt;*/&lt;br/&gt;@Override&lt;br/&gt;public void onRequestPermissionsResult(final int requestCode, final String[] permissions, final int[] grantResults) {&lt;br/&gt;LogExtensions.v(TAG, &quot;[onRequestPermissionsResult] &quot; + requestCode + &quot; | &quot; + Arrays.toString(permissions) + &quot; | &quot; + Arrays.toString(grantResults));&lt;/p&gt;&lt;p&gt;if (requestCode == this.requestCode) {&lt;br/&gt;boolean result = true;&lt;br/&gt;for (int i : grantResults) {&lt;br/&gt;if (i != PackageManager.PERMISSION_GRANTED) {&lt;br/&gt;result = false;&lt;br/&gt;break;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;　　　　　　　//权限请求后的回调，告诉Unity我是否被授权了&lt;br/&gt;onComplete(gameObject, requestCode, result);&lt;br/&gt;}&lt;br/&gt;super.onRequestPermissionsResult(requestCode, permissions, grantResults);&lt;br/&gt;}
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 在Unity那边我只要记录一个权限列表的字典，被授权的在回掉中从自字典中删除该权限，到最后检测该字典的Count是否大于0即可，授权后且字典的Count大于0，第一轮的逐个权限请求还未结束，继续。直到权限全部授权结束！这是我们期望的结果，第二种结果是，其中一个用户未授权，那么gg了，弹框提示，退出应用，一首凉凉送给自己！&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;43&quot;&gt;
&lt;pre class=&quot;brush:csharp;collapse:true;;gutter:true;&quot;&gt;
using UnityEngine;
using System.Collections;
using System;
using Platform.Android.Stubs;

namespace Platform.Android
{
        public class PermissionProvider : MonoBehaviour
        {

                public static event Action&amp;lt;bool&amp;gt; OnReceiveStoragePermission;
                #if UNITY_ANDROID
                private AndroidJavaClass _request;
                public  AndroidJavaClass Request { 
                        get { 
                                if (_request == null)
                                        _request = new AndroidJavaClass (&quot;com.example.androidpermissionmgr.PermissionProvider&quot;);
                                return _request;
                        } 
                }
                #else
                
                public AndroidJavaClassStub Request = new AndroidJavaClassStub ();
                
                #endif

                public void VerifyStorage (Action&amp;lt;bool&amp;gt; action)
                {
                        Debug.Log (&quot;[PermissionProvider] VerifyStorage&quot; );
                        OnReceiveStoragePermission += action;
                        RequestPermissions (1001, &quot;android.permission.READ_EXTERNAL_STORAGE&quot;, &quot;android.permission.ACCESS_NETWORK_STATE&quot;);//android.permission.ACCESS_NETWORK_STATE  &quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;

        }

        public void RequestPermissions (int requestCode, params string[]permissions)
                {
                        Debug.Log (&quot;[PermissionProvider] Requesting permissions: &quot;+ requestCode + &quot; &quot; + permissions );
                        Request.CallStatic (&quot;verifyPermissions&quot;, gameObject.name, requestCode, permissions);
                }

                public void OnGranted (string requestCode)
                {
                        Debug.Log(&quot;[PermissionProvider] OnGranted &quot; + requestCode);
            Example.result = &quot;[PermissionProvider] OnGranted &quot; + requestCode;

            if (requestCode.Equals(&quot;1001&quot;))
            {
                if (OnReceiveStoragePermission != null)
                    OnReceiveStoragePermission(true);
            }
                        if (Example.permissionDic.ContainsValue(int.Parse(requestCode)))
                        {
                                foreach (var item in Example.permissionDic)
                                {
                                        if (item.Value == int.Parse(requestCode))
                                        {
                                                Example.permissionDic.Remove(item.Key);
                                                break;
                                        }
                                }
                        }
                        CheckPermissionAgain();
                }

                public void OnDenied (string requestCode)
                {
                        Debug.Log(&quot;[PermissionProvider] OnDenied &quot; + requestCode);
            Example.result += &quot;[PermissionProvider] OnDenied &quot; + requestCode;
            if (requestCode.Equals(&quot;1001&quot;))
            {
                if (OnReceiveStoragePermission != null)
                    OnReceiveStoragePermission(false);
            }
                        //只要有一个重要权限未授权直接退出，或者再次请求权限
                        if (Example.permissionDic.Count&amp;gt;0)
                        {
                                Application.Quit();
                        }
                }

        public void AskForPermission()
        {
            RequestPermissions(100, &quot;android.permission.READ_CONTACTS&quot;);//android.permission.ACCESS_NETWORK_STATE  &quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;

            Example.result += &quot;AskForPermission&quot;;
        }

                public void GetNoGrantPermission()
                {
                        Request.Call(&quot;GetNoGrantPermission&quot;);
                }

                public void AskForAllPermission()
                {
                        foreach (var item in Example.permissionDic)
                        {
                                RequestPermissions(item.Value, item.Key);
                        }
                }

                public void CheckPermissionAgain()
                {
                        if (Example.permissionDic.Count &amp;gt; 0)
                        {
                                AskForAllPermission();
                        }
                        else
                        {
                                Example.result = &quot;APK已全部授权成功!&quot;;
                        }
                }
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 由于写的比较粗糙，基本功能是实现了！大家有问题了可以@我，共同学习！！！&lt;br/&gt; 不知不觉又凌晨了，明天要继续上班，碎觉了，做一只按时睡觉的猿！！！&lt;/p&gt;
&lt;p&gt;&lt;span&gt;截图&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/506960/201803/506960-20180319000531438-932034846.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/506960/201803/506960-20180319000701753-2002962057.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;工程地址：&lt;a href=&quot;https://gitee.com/wuzhang/UnityAndroidPermissionProject.git&quot; target=&quot;_blank&quot;&gt;https://gitee.com/wuzhang/UnityAndroidPermissionProject.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;欢迎Fork和Star！&lt;/p&gt;

</description>
<pubDate>Sun, 18 Mar 2018 16:12:00 +0000</pubDate>
<dc:creator>wuzhang</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wuzhang/p/wuzhang20180319.html</dc:identifier>
</item>
<item>
<title>Oracle GoldenGate实现数据库同步 - 竹吟</title>
<link>http://www.cnblogs.com/VoiceOfDreams/p/8576973.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/VoiceOfDreams/p/8576973.html</guid>
<description>&lt;p&gt;&lt;span&gt;前言：最近刚好在弄数据库同步，网上查了些资料再加上自己整理了一些，做个分享！&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span lang=&quot;EN-US&quot;&gt;1、安装包准备&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;span&gt;数据库版本：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Oracle Database 11g Release 2(11.2.0.1.0)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;此次使用的安装包版本为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;Oracle GoldenGate 12.3.0.1.2 for Oracle on Linux x86-64&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1291797/201803/1291797-20180315224457565-908853003.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;MsoNoSpacing&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;root&lt;/span&gt;&lt;span&gt;权限&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNoSpacing&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;span&gt;创建&lt;/span&gt;&lt;/span&gt;&lt;span&gt;安装包存放目录&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@dbsrc oracle]# &lt;span&gt;mkdir /data/goldengate&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;MsoNoSpacing&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;span&gt;创建&lt;/span&gt;&lt;/span&gt;&lt;span&gt;源端安装目录&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@dbsrc oracle]# &lt;span&gt;mkdir /data/oracle/product/ogg_src&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;MsoNoSpacing&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;span&gt;创建&lt;/span&gt;&lt;/span&gt;&lt;span&gt;目标端安装目录&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@dbtrg oracle]# &lt;span&gt;mkdir /data/oracle/product/ogg_trg&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;将U盘中的安装包拷贝到本地目录进行解压缩（此处不再赘述）&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;2、配置环境变量&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;（oracle&lt;span&gt;权限&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;vim ~/.bash_profile&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;添加以下参数&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;# User specific environment and startup programs

PATH=$PATH:$HOME/.local/bin:$HOME/bin

export PATH

export ORACLE_BASE=/data/oracle
export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1
export ORACLE_SID=orcl
export ORACLE_TERM=xterm
export PATH=$ORACLE_HOME/bin:/usr/sbin:$PATH
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export LANG=C
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8&lt;br/&gt;&lt;span&gt;#以上参数为安装oracle时配置的环境变量&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# Path Oracle GoldenGate
export OGG_HOME=/data/oracle/product/ogg_src
export PATH=$OGG_HOME:$PATH
export LD_LIBRARY_PATH=$OGG_HOME:$LD_LIBRARY_PATH&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;span&gt;OGG_HOME&lt;/span&gt;为&lt;span&gt;GoldenGate&lt;/span&gt;的安装目录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;source ~/.bash_profile&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;3、运行安装程序进行图形化界面安装&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@dbsrc oracle]# &lt;span&gt;cd /data/goldengate/fbo_oggs_Linux_x64_shiphome/Disk1&lt;/span&gt;
[root@dbsrc Disk1]# &lt;span&gt;./runInstaller&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;根据使用的数据库版本选择相应的版本&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1291797/201803/1291797-20180315230154472-64080537.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1291797/201803/1291797-20180315230206558-679348258.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;选择安装目录为刚才创建的安装目录其他都默认，接下来都步骤都默认直至安装完成。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4、配置快捷命令&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/VoiceOfDreams/p/8576850.html&quot;&gt;&lt;span&gt;详见上一篇：Rlwrap工具的安装和配置&lt;/span&gt;&lt;/a&gt;(&lt;a href=&quot;http://www.cnblogs.com/VoiceOfDreams/p/8576850.html&quot;&gt;http://www.cnblogs.com/VoiceOfDreams/p/8576850.html&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(源端)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;alias ggsci=&quot;rlwrap /data/oracle/product/ogg_src/ggsci&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;(目标端)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;alias ggsci=&quot;rlwrap /data/oracle/product/ogg_trg/ggsci&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;路径均为&lt;span&gt;GoldenGate&lt;/span&gt;的安装目录&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;5、查看&lt;span&gt;GoldenGate&lt;/span&gt;是否安装成功&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;ggsci&lt;/span&gt;

Oracle GoldenGate Command Interpreter for Oracle
Version 12.3.0.1.2 OGGCORE_12.3.0.1.0_PLATFORMS_171208.0005_FBO
Linux, x64, 64bit (optimized), Oracle 11g on Dec  8 2017 21:13:00
Operating system character set identified as US-ASCII.

Copyright (C) 1995, 2017, Oracle and/or its affiliates. All rights reserved.

GGSCI (dbsrc) 1&amp;gt; &lt;span&gt;view param mgr&lt;/span&gt;
PORT 7809

GGSCI (dbsrc) 2&amp;gt; &lt;span&gt;info mgr&lt;/span&gt;
Manager is running (IP port dbsrc.7809,Process ID 5682)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;此版本已经自动建立子目录，无需再使用（&lt;span&gt;create subdirs&lt;/span&gt;）命令创建&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;1、为&lt;span&gt;GoldenGate&lt;/span&gt;创建独立的用户和分配必要的权限&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;sqlplus / as sysdba&lt;/span&gt;

SQL*Plus: Release 11.2.0.1.0 Production on Mon Mar 12 16:09:25 2018

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL&amp;gt; &lt;span&gt;create tablespace OGG logging datafile '/data/oracle/oradata/orcl/OGG.DBF' size 20m autoextend on uniform size 2m;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;span&gt;autoextend on&lt;/span&gt; 打开自动扩展         &lt;/span&gt;&lt;span&gt;&lt;span&gt;uniform&lt;/span&gt; 指定表空间&lt;span&gt;extend&lt;/span&gt;的大小，缺省值为&lt;span&gt;1m&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;此表空间只用于&lt;span&gt;DDL&lt;/span&gt;模式，不可用于其他模式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;若需删除表空间：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;drop tablespace OGG including contents and datafiles cascade constraints;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;创建用户并授权&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;create user ogg identified by pwd default tablespace OGG temporary tablespace TEMP quota unlimited on OGG;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;span&gt;create user&lt;/span&gt; 用户名 &lt;span&gt;identified by&lt;/span&gt; 密码 &lt;span&gt;default tablespace&lt;/span&gt; 表空间名 &lt;span&gt;temporary tablespace&lt;/span&gt; 临时表空间名 &lt;span&gt;quota unlimited on&lt;/span&gt; 表空间名;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;若需要删除用户，执行以下&lt;span&gt;SQL&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;drop user &lt;span&gt;用户名&lt;/span&gt; cascade；&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;给用户授权&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant unlimited tablespace to ogg;&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;grant connect, resource, dba to ogg;&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;grant create table, create sequence to ogg;
&lt;/span&gt;SQL&amp;gt; &lt;span&gt;grant create session, alter session to ogg;&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;grant execute on utl_file to ogg;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant select any table, insert any table, update any table, drop any table to ogg;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant select on dba_clusters to ogg;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant select on v_$database to ogg;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant select on sys.logmnr_buildlog to ogg;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant execute on dbms_flashback to ogg;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant execute on dbms_capture_adm to ogg;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;grant execute on dbms_streams to ogg;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;创建测试用表和数据&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;create table ogg.togg(id primary key, name, type, CREATED, update_date) as select object_id, object_name, object_type, CREATED, sysdate from dba_objects where rownum &amp;lt; 101;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;2、开启数据库附加日志&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;oracle 11.2.0.4&lt;/span&gt;和&lt;span&gt;oracle 12.1.0.2&lt;/span&gt;及之后的版本需要设置如下参数，本次所用数据库版本为&lt;span&gt;Oracle 11.2.0.1.0&lt;/span&gt;就无需设置此参数了，做个记录吧！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;alter system set enable_goldengate_replication=true scope=both;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;查看归档模式、附加日志和强制日志是否开启&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;select log_mode, supplemental_log_data_min, force_logging from v$database;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改模式&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;shutdown immediate;&lt;/span&gt;                                  &lt;span&gt;#立即关闭数据库，不允许新的连接和事物启动&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;startup mount;&lt;/span&gt;                                       &lt;span&gt;#装载数据库而不启动&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;alter database archivelog; &lt;/span&gt;                          &lt;span&gt;#启用归档模式&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;alter database open;&lt;/span&gt;                                 &lt;span&gt;#打开数据库&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;alter database force logging;&lt;/span&gt;                        &lt;span&gt;#启用强制日志
&lt;/span&gt;SQL&amp;gt; &lt;span&gt;alter database add supplemental log data;&lt;/span&gt;            &lt;span&gt;#启用附加日志&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;3、执行配置脚本&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;进入GoldenGate安装目录&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(源端)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;cd /data/oracle/product/ogg_src&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;（目标端）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbtrg ~]$ &lt;span&gt;cd /data/oracle/product/ogg_trg&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;登录&lt;span&gt;sqlplus&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;SQL&amp;gt; &lt;span&gt;@marker_setup&lt;/span&gt;
&lt;span&gt;输入&lt;/span&gt;GoldenGate&lt;span&gt;账户名&lt;/span&gt;&lt;span&gt;ogg&lt;/span&gt;&lt;br/&gt;SQL&amp;gt; &lt;span&gt;@ddl_setup&lt;/span&gt;
&lt;span&gt;输入&lt;/span&gt;GoldenGate&lt;span&gt;账户名&lt;/span&gt;&lt;span&gt;ogg&lt;br/&gt;&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;@role_setup&lt;/span&gt;
&lt;span&gt;输入&lt;/span&gt;GoldenGate&lt;span&gt;账户名&lt;/span&gt;&lt;span&gt;ogg&lt;/span&gt;

GRANT GGS_GGSUSER_ROLE TO &lt;/span&gt;&lt;span&gt;&amp;lt;loggedUser&amp;gt;&lt;/span&gt;&lt;span&gt;

SQL&amp;gt; &lt;span&gt;grant ggs_ggsuser_role to ogg;&lt;br/&gt;&lt;/span&gt;
SQL&amp;gt; &lt;span&gt;@ddl_enable&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;(DDL同步配置完成)&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4、测试用户是否创建成功&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~&lt;span&gt;]$ &lt;span&gt;ggsci&lt;/span&gt;
GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; dblogin userid ogg, password pwd&lt;/span&gt;
Successfully logged into database&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;5、配置&lt;span&gt;Manager&lt;/span&gt;进程(管理进程)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; Manager&lt;/span&gt;进程必须在源端和目标端运行，并且在&lt;span&gt;Extract&lt;/span&gt;和&lt;span&gt;Replicat&lt;/span&gt;进程之前启动，没有该进程&lt;span&gt;OGG&lt;/span&gt;无法做其它的操作，它管理启动&lt;span&gt;Oracle GoldenGate&lt;/span&gt;进程、启动动态进程、分配端口给&lt;span&gt;GoldenGate&lt;/span&gt;进程、管理&lt;span&gt;trail file&lt;/span&gt;、创建事件，错误和诊断报告工作；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~&lt;span&gt;]$ &lt;span&gt;ggsci&lt;/span&gt;

GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt;  info mgr&lt;/span&gt;
Manager &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; running (IP port dbsrc.&lt;span&gt;7809&lt;/span&gt;,Process ID &lt;span&gt;5682&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;源端：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc) &lt;span&gt;2&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; edit param mgr&lt;/span&gt;

&lt;span&gt;PORT &lt;/span&gt;&lt;/span&gt;&lt;span&gt;7839
DYNAMICPORTLIST  7840-7939
AUTOSTART EXTRACT *
AUTORESTART EXTRACT *, RETRIES 5, WAITMINUTES 2
PURGEOLDEXTRACTS /data/oracle/product/ogg_src/dirdat/*, USECHECKPOINTS, MINKEEPDAYS 5
LAGREPORTHOURS 1
LAGINFOMINUTES 30
LAGCRITICALMINUTES 45&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PORT 7839&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;通信端口&lt;span&gt;7839&lt;/span&gt;， 源端和目标端需要保持一致。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DYNAMICPORTLIST  7840-7939&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;动态端口列表的范围从&lt;span&gt;7840&lt;/span&gt;到&lt;span&gt;7939&lt;/span&gt;。当制定端口被占用或者出现通信故障，管理进程将会从列表中选择下一个端口尝试连接，避免通信端口的单点故障。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AUTOSTART EXTRACT *&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当&lt;span&gt;MGR&lt;/span&gt;进程启动后启动&lt;span&gt;EXTRACT&lt;/span&gt;进程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AUTORESTART EXTRACT *, RETRIES 5, WAITMINUTES 2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当&lt;span&gt;EXTRACT&lt;/span&gt;进程中断后尝试自动重启，每隔2分钟尝试启动一次，尝试5次。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PURGEOLDEXTRACTS /data/oracle/product/ogg_src/dirdat/*, USECHECKPOINTS, MINKEEPDAYS 5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(相对路径写法)&lt;/span&gt;&lt;span&gt;PURGEOLDEXTRACTS ./dirdat/*, USECHECKPOINTS, MINKEEPDAYS 5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;定期清理&lt;span&gt;dirdat&lt;/span&gt;路径下的本地队列（&lt;span&gt;local trail&lt;/span&gt;）。保留期限10天，过期后自动删除。从而控制队列文件的目录不会增长过大。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;LAGREPORTHOURS 1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每隔一小时检查各进程延时情况，并记录到goldengate report文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;LAGINFOMINUTES 30&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;进程复制延时超过30分钟，向日志文件记录一条错误日志&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;LAGCRITICALMINUTES 45&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;传输延时超过45分钟将写入警告日志&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;目标端：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbtrg) &lt;span&gt;1&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; edit param mgr&lt;/span&gt;

&lt;span&gt;PORT &lt;/span&gt;&lt;/span&gt;&lt;span&gt;7839
DYNAMICPORTLIST  7840-7939
AUTOSTART REPLICAT *
AUTORESTART REPLICAT *, RETRIES 5, WAITMINUTES 2
PURGEOLDEXTRACTS /data/oracle/product/ogg_trg/dirdat/*, USECHECKPOINTS, MINKEEPDAYS 10
PURGEDDLHISTORY MINKEEPDAYS 7, MAXKEEPDAYS 10
PURGEMARKERHISTORY MINKEEPDAYS 7, MAXKEEPDAYS 10
LAGREPORTHOURS 1
LAGINFOMINUTES 30
LAGCRITICALMINUTES 45&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AUTOSTART REPLICAT *&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当&lt;span&gt;MGR&lt;/span&gt;进程启动后启动&lt;span&gt;REPLICAT&lt;/span&gt;进程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AUTORESTART REPLICAT *, RETRIES 5, WAITMINUTES 2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当&lt;span&gt;REPLICAT&lt;/span&gt;进程中断后尝试自动重启，每隔2分钟尝试启动一次，尝试5次。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PURGEDDLHISTORY MINKEEPDAYS 7, MAXKEEPDAYS 10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;删除&lt;span&gt;DDL&lt;/span&gt;历史表，最小保存7天，最大保存10天。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PURGEMARKERHISTORY MINKEEPDAYS 7, MAXKEEPDAYS 10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;删除&lt;span&gt;MARKER&lt;/span&gt;历史表，最小保存7天，最大保存10天。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;6、配置&lt;span&gt;Extract&lt;/span&gt;进程（只在源端配置）&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;Extract&lt;/span&gt; 运行在源端或者根据系统和业务的需求可以同时运行在两端，抽取捕获系统变更统数据；它可以配置为初始化数据加载(直接从数据源中加载静态的数据)和在某个时间点后源端与服务端变更数据同步(从在线日志或归档日志抽取捕获变更的数据)，它也可以在支持&lt;span&gt;DDL&lt;/span&gt;变更的系统中抽取捕获&lt;span&gt;DDL&lt;/span&gt;；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　当配置为数据同步时，&lt;span&gt;extract&lt;/span&gt;进程抽取捕获&lt;span&gt;extract&lt;/span&gt;配置文件里配置的对象的任何&lt;span&gt;DML&lt;/span&gt;和&lt;span&gt;DDL&lt;/span&gt;(需要额外配置)的操作，&lt;span&gt;extract&lt;/span&gt;进程记录这些操作，直到用户提交或回滚事务；当收到回滚(&lt;span&gt;rollback&lt;/span&gt;)时，&lt;span&gt;extract&lt;/span&gt;撤销这些记录；当收到(&lt;span&gt;commit&lt;/span&gt;)操作后，&lt;span&gt;extract&lt;/span&gt;进程记录保存这些操作到一个或多个&lt;span&gt;trail&lt;/span&gt;文件里并以队列的形式发送到目标端，以确保数据传输速度和数据的一致性。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;1)、配置主抽取进程(&lt;span&gt;Primary Extract&lt;/span&gt;)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;使用&lt;span&gt;ogg&lt;/span&gt;用户登录&lt;span&gt;GoldenGate&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc) &lt;span&gt;5&lt;/span&gt;&amp;gt; &lt;span&gt;dblogin userid ogg, password pwd&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;创建主抽取进程&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc &lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;6&lt;/span&gt;&amp;gt; &lt;span&gt;add extract ext1,tranlog,begin now&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;创建源端&lt;span&gt;trail&lt;/span&gt;文件并指定路径&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;主进程的作用是抽取捕获系统变更数据并将这些数据保存到&lt;span&gt;trail&lt;/span&gt;文件里，所以必须为其配置&lt;span&gt;trail&lt;/span&gt;文件目录和&lt;span&gt;trail&lt;/span&gt;文件名的两个字符名&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc &lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;7&lt;/span&gt;&amp;gt; &lt;span&gt;add exttrail /data/oracle/product/ogg_src/dirdat/&lt;/span&gt;&lt;span&gt;&lt;span&gt;sr, extract ext1&lt;/span&gt;

GGSCI (dbsrc &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;8&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; edit param ext1&lt;/span&gt; 

&lt;span&gt;extract ext1
SETENV(ORACLE_SID&lt;/span&gt;&lt;/span&gt;&lt;span&gt;=&quot;orcl&quot;)
SETENV(NLS_LANG=AMERICAN_AMERICA.AL32UTF8)
userid ogg, password pwd
REPORTCOUNT EVERY 30 MINUTES, RATE
DISCARDFILE /data/oracle/product/ogg_src/dirrpt/extsr.dsc, APPEND, MEGABYTES 1024
DISCARDROLLOVER AT 3:00
EXTTRAIL /data/oracle/product/ogg_src/dirdat/sr
DYNAMICRESOLUTION
DBOPTIONS  ALLOWUNUSEDCOLUMN
FETCHOPTIONS NOUSESNAPSHOT
FETCHOPTIONS FETCHPKUPDATECOLS
table ogg.*;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;SETENV(ORACLE_SID=&quot;orcl&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;设置&lt;span&gt;Oracle&lt;/span&gt;数据库实例&lt;span&gt;sid&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;SETENV(NLS_LANG=AMERICAN_AMERICA.AL32UTF8)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;设置&lt;span&gt;goldengate&lt;/span&gt;的字符集变量信息，此处值会覆盖操作系统级别的变量。该值需要和数据库字符集匹配一致。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;REPORTCOUNT EVERY 30 MINUTES, RATE&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每隔30分钟报告一次从程序开始到现在的抽取进程或者复制进程的事物记录数，并汇报进程的统计信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DISCARDFILE /data/oracle/product/ogg_src/dirrpt/extsr.dsc, APPEND, MEGABYTES 1024&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将执行失败的记录保存在&lt;span&gt;discard file&lt;/span&gt;中，&lt;span&gt;discard file&lt;/span&gt;文件记录了&lt;span&gt;GoldenGate&lt;/span&gt;进程错误、数据库错误、&lt;span&gt;GoldenGate&lt;/span&gt;操作等信息。该文件位于&lt;span&gt;/data/oracle/product/ogg_src/dirrpt/extsr.dsc&lt;/span&gt;,大小为&lt;span&gt;1024MB&lt;/span&gt;。 文件中已经包含记录的话，再后面继续追加，不删除之前的记录。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DISCARDROLLOVER AT 3:00&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了防止&lt;span&gt;discard file&lt;/span&gt;被写满，每天3：00做一次文件过期设定&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;EXTTRAIL /data/oracle/product/ogg_src/dirdat/sr&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;队列文件路径, &lt;span&gt;trail&lt;/span&gt;文件存放路径。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DYNAMICRESOLUTION&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有时候开启&lt;span&gt;OGG&lt;/span&gt;进程的时候较慢，可能是因为需要同步的表太多，&lt;span&gt;OGG&lt;/span&gt;在开启进程之前会将需要同步的表建立一个记录并且存入到磁盘中，这样就需要耗费大量的时间。使用该参数来解决此问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DBOPTIONS  ALLOWUNUSEDCOLUMN&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用于阻止抽取进程抽取数据时由于表含有&lt;span&gt;unused&lt;/span&gt;列而导致进程异常终止&lt;span&gt;(abend)&lt;/span&gt;。使用该参数，抽取进程抽取到&lt;span&gt;unused&lt;/span&gt;列时也会向日志文件记录一条警告信息。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;FETCHOPTIONS NOUSESNAPSHOT&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;默认值为 &lt;span&gt;usesnapshot&lt;/span&gt;，表示利用数据库闪回读取数据。&lt;span&gt;Nousesnapshot&lt;/span&gt;表示直接从原表读取相关数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;FETCHOPTIONS FETCHPKUPDATECOLS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当使用了&lt;span&gt;HANDLECOLLISIONS&lt;/span&gt;时，请使用该参数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复制进程出现丢失&lt;span&gt;update&lt;/span&gt;记录&lt;span&gt;（missing update）&lt;/span&gt;并且更新的是主键，&lt;span&gt;update&lt;/span&gt;将转换成&lt;span&gt;insert&lt;/span&gt;。由于插入的记录可能不是完整的行，若要保证完整需要加入此参数&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;table ogg.*;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;需要复制的对象列表&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;2)、配置投递进程&lt;span&gt;（Data Pump）&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;Data Pumps&lt;/span&gt;是第二种类型的&lt;span&gt;GoldenGate extract&lt;/span&gt;配置，如果不使用&lt;span&gt;Data Pump&lt;/span&gt;，&lt;span&gt;extract&lt;/span&gt;进程必须发送抽取捕获的操作数据到目标端&lt;span&gt;trail&lt;/span&gt;；如果配置了&lt;span&gt;Data Pump&lt;/span&gt;，&lt;span&gt;extract&lt;/span&gt;进程抽取捕获数据写入到&lt;span&gt;trail&lt;/span&gt;，&lt;span&gt;Data pump&lt;/span&gt;读取&lt;span&gt;trail&lt;/span&gt;并且通过网络发送&lt;span&gt;trail&lt;/span&gt;到目标端&lt;span&gt;trail&lt;/span&gt;，&lt;span&gt;data pump&lt;/span&gt; 加强了源端和目标端抽取捕获数据的可用性，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;主要优点:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.保护网络传输失败和目标端失败；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.可以实现复杂的数据过滤和转换；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.可以结合多个数据源到目标端；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.可以同步一个源数据到多个目标端。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;创建并指定源数据库&lt;span&gt;trail&lt;/span&gt;文件位置，必须包含两个字符，这个路径和主抽取进程&lt;span&gt;(Primary Extract)&lt;/span&gt;中指定的&lt;span&gt;trail&lt;/span&gt;目录和&lt;span&gt;trail&lt;/span&gt;文件命名必须相同，因为&lt;span&gt;Data Pump&lt;/span&gt;进程要从此读取主抽取进程生成的&lt;span&gt;trail&lt;/span&gt;文件;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc &lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;9&lt;/span&gt;&amp;gt; &lt;span&gt;add extract dpump1, exttrailsource /data/oracle/product/ogg_src/dirdat/&lt;/span&gt;&lt;span&gt;&lt;span&gt;sr
&lt;/span&gt;
GGSCI (dbsrc &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;10&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; edit param dpump1&lt;/span&gt;

&lt;span&gt;extract dpump1
SETENV(ORACLE_SID&lt;/span&gt;&lt;/span&gt;&lt;span&gt;=&quot;orcl&quot;)
SETENV(NLS_LANG=AMERICAN_AMERICA.AL32UTF8)
RMTHOST 10.0.0.64, mgrport 7839, COMPRESS
PASSTHRU
RMTTRAIL /data/oracle/product/ogg_trg/dirdat/tr
--DYNAMICRESOLUTION
table ogg.*;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;RMTHOST 10.0.0.64, mgrport 7839, COMPRESS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;目标端主机&lt;span&gt;IP&lt;/span&gt;，管理进程端口号，投递前压缩队列文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PASSTHRU&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;表示传输进程直接跟抽取进程交互，而不再和数据库进行交互，减少数据库资源的利用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;RMTTRAIL /data/oracle/product/ogg_trg/dirdat/tr&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;目标端保存队列文件的目录&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DYNAMICRESOLUTION&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;动态解析表名&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;table ogg.*;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复制范围和抽取进程对应即可&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;源端可以配置多个主抽取进程，也可以配置多个&lt;span&gt;Data Pump&lt;/span&gt;进程，但必须为每个要同步的目标端配置一个&lt;span&gt;Data Pump&lt;/span&gt;进程；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;指定&lt;span&gt;Data Pump&lt;/span&gt;进程发送&lt;span&gt;trail&lt;/span&gt;文件到目标端的位置（目标端&lt;span&gt;trail&lt;/span&gt;文件添加到队列中）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc &lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;11&lt;/span&gt;&amp;gt; &lt;span&gt;add rmttrail /data/oracle/product/ogg_trg/dirdat/tr, extract dpump1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;7、目标端配置Replicat进程（复制进程）&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;Replicat&lt;/span&gt;进程运行在目标端读取&lt;span&gt;tail&lt;/span&gt;文件和重构&lt;span&gt;DML、DDL&lt;/span&gt;并应用到目标数据库；&lt;span&gt;Replicat&lt;/span&gt;编译&lt;span&gt;SQL&lt;/span&gt;一次，当变量值不同时重复使用编译过的&lt;span&gt;SQL&lt;/span&gt;；&lt;span&gt;Replicat&lt;/span&gt;进程可以像&lt;span&gt;extract&lt;/span&gt;进程一样配置初始化数据加载(直接从数据源中加载静态的数据)和在某个时间点后源端与服务端变更数据同步(从在线日志或归档日志抽取捕获变更的数据)；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　Checkpoint&lt;/span&gt;存储从文件读取和写入的检测点位置，用于还原和恢复数据，&lt;span&gt;Checkpoint&lt;/span&gt;确保发生变化并提交&lt;span&gt;(commit)&lt;/span&gt;的数据被&lt;span&gt;extract&lt;/span&gt;抽取捕获和被&lt;span&gt;replicat&lt;/span&gt;进程应用到目标端；保证在系统、网络或者&lt;span&gt;GoldenGate&lt;/span&gt;需要重启进程时发生的错误不会导致数据丢失；在复杂的同步配置中&lt;span&gt;checkpoints&lt;/span&gt;启用多个&lt;span&gt;extract&lt;/span&gt;和&lt;span&gt;replicat&lt;/span&gt;进程从同一个&lt;span&gt;trail&lt;/span&gt;集中读取数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用&lt;span&gt;GoldenGate&lt;/span&gt;用户&lt;span&gt;（ogg）&lt;span&gt;登录&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbtrg) &lt;span&gt;1&lt;/span&gt;&amp;gt;&lt;span&gt; dblogin userid ogg, password pwd&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;创建和配置&lt;/span&gt;Checkpoint Table&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbtrg &lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;2&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; add checkpointtable ogg.checkpoint&lt;/span&gt;

GGSCI (dbtrg &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;3&lt;/span&gt;&amp;gt; &lt;span&gt;edit param ./&lt;/span&gt;&lt;span&gt;&lt;span&gt;GLOBALS&lt;/span&gt;

&lt;span&gt;GGSCHEMA ogg
CHECKPOINTTABLE ogg.checkpoint&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：首次编辑&lt;span&gt;GoldenGate&lt;/span&gt;配置文件时，&lt;span&gt;GLOBALS&lt;/span&gt;文件以大写命名并且没有扩展名创建在&lt;span&gt;GoldenGate_home&lt;/span&gt;根目录&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;创建&lt;span&gt;replicat&lt;/span&gt;进程&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbtrg &lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;4&lt;/span&gt;&amp;gt; &lt;span&gt;add replicat rep1, exttrail /data/oracle/product/ogg_trg/dirdat/&lt;/span&gt;&lt;span&gt;&lt;span&gt;tr, checkpointtable ogg.checkpoint
&lt;/span&gt;
GGSCI (dbtrg &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; ogg@orcl) &lt;span&gt;5&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; edit param rep1&lt;/span&gt;

&lt;span&gt;EPLICAT rep1
SETENV(ORACLE_SID&lt;/span&gt;&lt;/span&gt;&lt;span&gt;=&quot;orcl&quot;)
SETENV(NLS_LANG=AMERICAN_AMERICA.AL32UTF8)
USERID ogg, PASSWORD pwd
REPORT AT 06:00
REPORTCOUNT EVERY 30 MINUTES, RATE
REPORTROLLOVER AT 02:00
REPERROR DEFAULT, ABEND
ALLOWNOOPUPDATES
ASSUMETARGETDEFS
HANDLECOLLISIONS
DISCARDFILE /data/oracle/product/ogg_trg/dirrpt/repsa.dsc, APPEND, MEGABYTES 1024
DISCARDROLLOVER AT 02:00
MAP ogg.*, target ogg.*;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;REPORT AT 06:00&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每天06:00定期生成一个&lt;span&gt;report&lt;/span&gt;文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;REPORTCOUNT EVERY 30 MINUTES, RATE&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每隔30分钟报告一次从程序开始到现在的抽取进程或者复制进程的事物记录数，并汇报进程的统计信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;REPORTROLLOVER AT 02:00&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了防止&lt;span&gt;report file&lt;/span&gt;被写满，每天2：00做一次文件过期设定&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;REPERROR DEFAULT, ABEND&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除了特殊指定的&lt;span&gt;REPERROR&lt;/span&gt;语句，报告所有复制期间出现的错误，回滚非正常中断的事物和进程。遇到不能处理的错误就自动&lt;span&gt;abend&lt;/span&gt;，启动需要人工干预处理&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ALLOWNOOPUPDATES&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当源表有排除列情况或者有目标表不存在的列时，当更新这列&lt;span&gt;goldengate&lt;/span&gt;默认报错。应用该参数后，即可让&lt;span&gt;goldengate&lt;/span&gt;生成一条警告信息而不是报错。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ASSUMETARGETDEFS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用&lt;span&gt;ASSUMETARGETDEFS&lt;/span&gt;参数时，用&lt;span&gt;MAP&lt;/span&gt;语句中指定的生产库源表和灾备端目标表具有相同的列结构。它指示的&lt;span&gt;Oracle GoldenGate&lt;/span&gt;不在生产端查找源表的结构定义。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HANDLECOLLISIONS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用于&lt;span&gt;goldengate&lt;/span&gt;自动过滤不能出来的冲突记录，为了严格保证数据一致性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DISCARDFILE /data/oracle/product/ogg_trg/dirrpt/repsa.dsc, APPEND, MEGABYTES 1024&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将执行失败的记录保存在&lt;span&gt;discard file&lt;/span&gt;中，&lt;span&gt;discard file&lt;span&gt;文件记录了&lt;span&gt;GoldenGate&lt;/span&gt;进程错误、数据库错误、&lt;span&gt;GoldenGate&lt;/span&gt;操作等信息&lt;/span&gt;&lt;/span&gt;。该文件位于&lt;span&gt;./dirrpt/repsa.dsc&lt;/span&gt;,大小为&lt;span&gt;1024MB&lt;/span&gt;。 文件中已经包含记录的话，再后面继续追加，不删除之前的记录。&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DISCARDROLLOVER AT 02:00&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了防止&lt;span&gt;discard file&lt;/span&gt;被写满，每天2：00做一次文件过期设定&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;MAP ogg.*, target ogg.*;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对应需要复制的对象，默认一一对应传输进程&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;三、 初始化数据&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;　&lt;span&gt;　&lt;span&gt;DML&lt;/span&gt;操作包括&lt;span&gt;INSERT、UPDATE、DELETE、SELECT&lt;/span&gt;操作，而在这些操作中&lt;span&gt;UPDATE、DELETE&lt;/span&gt;操作&lt;span&gt;Redo&lt;/span&gt;只记录了变更的数据列以及行&lt;span&gt;ID(ROWID)，GoldenGate&lt;/span&gt;抽取数据后将其转换为自己的格式发送都目标端。在同步开始前目标端没有初始化数据(目标端为空数据)，那么事物产生的&lt;span&gt;UPDATE、DELETE DML&lt;/span&gt;操作发送到目标端，目标端&lt;span&gt;GoldenGate Replicat&lt;/span&gt;进程会因为找不到数据而报错从而导致&lt;span&gt;Replicat&lt;/span&gt;进程崩溃停止&lt;span&gt;(ABENDED)&lt;/span&gt;，所以这就需要我们在同步前初始化数据，初始化完后再同步，这样大大降低错误率。同步数据的方式可以通过&lt;span&gt;DBLINK、EXP/IMP、SQLLDR&lt;/span&gt;或者表空间迁移等方式同步。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;四、启动G&lt;span&gt;oldenGate&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;数据初始化后，分别启动目标端&lt;span&gt;MGR&lt;/span&gt;进程、&lt;span&gt;Replicat&lt;/span&gt;进程，源端&lt;span&gt;MGR&lt;/span&gt;进程、主抽取进程&lt;span&gt;(Primary Extract)、Data Pump&lt;/span&gt;进程&lt;span&gt;(Secondly Extract)&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(目标端)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;[oracle@dbtrg ~&lt;span&gt;]$ &lt;span&gt;ggsci&lt;/span&gt;

GGSCI (dbtrg) &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; start mgr&lt;/span&gt;
Manager started.


GGSCI (dbtrg) &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; info all&lt;/span&gt;

Program     Status      Group       Lag at Chkpt  Time Since Chkpt

MANAGER     RUNNING                                           
REPLICAT    RUNNING     REP1        &lt;/span&gt;&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;      &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;02&lt;/span&gt;&lt;span&gt;    


GGSCI (dbtrg) &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; stats rep1&lt;/span&gt;

Sending STATS request to REPLICAT REP1 ...

No active replication maps. &lt;/span&gt;   &lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;(源端)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~&lt;span&gt;]$ &lt;span&gt;ggsci
&lt;/span&gt;
GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; start mgr&lt;/span&gt;
Manager started.


GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; info all&lt;/span&gt;

Program     Status      Group       Lag at Chkpt  Time Since Chkpt

MANAGER     RUNNING                                           
EXTRACT     RUNNING     DPUMP1      &lt;/span&gt;&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;      &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt;&lt;span&gt;    
EXTRACT     RUNNING     EXT1        &lt;/span&gt;&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;      &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;03&lt;/span&gt;&lt;span&gt;    


GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; stats ext1&lt;/span&gt;

Sending STATS request to EXTRACT EXT1 ...

No active extraction maps.


GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; stats dpump1&lt;/span&gt;

Sending STATS request to EXTRACT DPUMP1 ...

No active extraction maps.&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;因为在mgr都相应的配置了extract进程和replicat进程的自启动，所以在mgr进程启动后会自动启动extract进程和replicat进程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果启动失败，查看日志文件&lt;span&gt;ggserr.log&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;日志文件存储路径：&lt;span&gt;GoldenGate&lt;/span&gt;安装目录下（&lt;/span&gt;&lt;span&gt;/data/oracle/product/ogg_src/ggserr.log&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;vi $OGG_HOME/ggserr.log&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Oracle GoldenGate&lt;span&gt;错误集&lt;/span&gt;：&lt;/span&gt;&lt;a href=&quot;https://wenku.baidu.com/view/e78f9dd402d276a201292e14.html&quot;&gt;https://wenku.baidu.com/view/e78f9dd402d276a201292e14.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;五、同步测试&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt;1、源端进行数据插入操作&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbsrc ~]$ &lt;span&gt;sqlplus / as sysdba&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;使用&lt;span&gt;ogg&lt;/span&gt;账户登录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;conn ogg/&lt;/span&gt;&lt;span&gt;&lt;span&gt;pwd&lt;/span&gt;

SQL&lt;/span&gt;&amp;gt;&lt;span&gt; select count(*) from&lt;/span&gt;&lt;span&gt;&lt;span&gt; togg;&lt;/span&gt;
  COUNT(&lt;/span&gt;*&lt;span&gt;)
&lt;/span&gt;----------
      &lt;span&gt;100&lt;/span&gt;&lt;span&gt;


SQL&lt;/span&gt;&amp;gt; insert into togg(id,name,type) values(&lt;span&gt;111&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ww&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt; row created.

SQL&lt;/span&gt;&amp;gt; &lt;span&gt;select count(*) from&lt;/span&gt;&lt;span&gt;&lt;span&gt; ogg.togg;&lt;/span&gt;
  COUNT(&lt;/span&gt;*&lt;span&gt;)
&lt;/span&gt;----------
      &lt;span&gt;101&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;2、源端查看&lt;span&gt;extract&lt;/span&gt;（提取）进程状态&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbsrc) &lt;span&gt;5&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; stats ext1
&lt;/span&gt;
Sending STATS request to EXTRACT EXT1 ...

Start of Statistics at &lt;/span&gt;&lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;&lt;span&gt;.

Output to &lt;/span&gt;/data/oracle/product/ogg_src/dirdat/&lt;span&gt;sr:

Extracting &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; SA.emp1 to SA.emp1:

&lt;/span&gt;*** Total statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;31&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Daily statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;31&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Hourly statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;31&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Latest statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;31&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;

End of Statistics.


GGSCI (dbsrc) &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; stats dpump1&lt;/span&gt;

Sending STATS request to EXTRACT DPUMP1 ...

Start of Statistics at &lt;/span&gt;&lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;:&lt;span&gt;49&lt;/span&gt;&lt;span&gt;.

Output to &lt;/span&gt;/data/oracle/product/ogg_trg/dirdat/&lt;span&gt;tr:

Extracting &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; SA.emp1 to SA.emp1:

&lt;/span&gt;*** Total statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;32&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Daily statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;32&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Hourly statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;32&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Latest statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;32&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;

End of Statistics.&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;3、目标端查看&lt;span&gt;replicat&lt;/span&gt;（复制）进程状态&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;GGSCI (dbtrg) &lt;span&gt;4&lt;/span&gt;&amp;gt;&lt;span&gt;&lt;span&gt; stats rep1&lt;/span&gt;

Sending STATS request to REPLICAT REP1 ...

Start of Statistics at &lt;/span&gt;&lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;&lt;span&gt;.

Replicating &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; SA.emp1 to SA.emp1:

&lt;/span&gt;*** Total statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;36&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Daily statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;36&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Hourly statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;36&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;

*** Latest statistics since &lt;span&gt;2018&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;15&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;:&lt;span&gt;36&lt;/span&gt; ***&lt;span&gt;
    Total inserts                                  &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;
    Total updates                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total deletes                                  &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total discards                                 &lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
    Total operations                               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt;

End of Statistics.&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;4、目标端数据查询&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[oracle@dbtrg ~]$ &lt;span&gt;sqlplus / as sysdba&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;使用&lt;span&gt;ogg&lt;/span&gt;账户登录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SQL&amp;gt; &lt;span&gt;conn ogg/&lt;/span&gt;&lt;span&gt;&lt;span&gt;pwd&lt;/span&gt;

SQL&lt;/span&gt;&amp;gt; &lt;span&gt;select count(*) from&lt;/span&gt;&lt;span&gt;&lt;span&gt; togg;&lt;/span&gt;
  COUNT(&lt;/span&gt;*&lt;span&gt;)
&lt;/span&gt;----------
      &lt;span&gt;101&lt;/span&gt;&lt;span&gt;

SQL&lt;/span&gt;&amp;gt; &lt;span&gt;select id, name, type from togg where name='ww'&lt;/span&gt;&lt;span&gt;&lt;span&gt;;
&lt;/span&gt;
  ID           NAME       TYPE
&lt;/span&gt;---------- ---------- -------------------
 &lt;span&gt;111&lt;/span&gt;            ww         user&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Sun, 18 Mar 2018 15:54:00 +0000</pubDate>
<dc:creator>竹吟</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/VoiceOfDreams/p/8576973.html</dc:identifier>
</item>
<item>
<title>Android RecyclerView 滚动到中间位置 - huansky</title>
<link>http://www.cnblogs.com/huansky/p/8598342.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huansky/p/8598342.html</guid>
<description>&lt;p&gt;最近看到QQ音乐的歌词每次滑动后都可以滚回到中间位置。觉得甚是神奇，打开开发者模式显示布局，发现歌词部分不是采用 android 控件的写的，应该是前端写的。于是，我想，能不能用 recyclerView 实现这个自动回滚到中间位置呢。&lt;/p&gt;
&lt;p&gt;功夫不负有心人，查找了一些资料之后，终于搞定了。&lt;/p&gt;
&lt;p&gt;下面由我细细讲来。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;点击某个条目，在经过4s无任何操作之后，该条目滚动到中间位置显示。点击后，用户在滑动，等用户不操作后再开始延时。用户多次点击，记最后一次点击位置。&lt;/p&gt;
&lt;h2&gt;分析&lt;/h2&gt;
&lt;p&gt;首先先考虑，滚动到指定位置是如何操作的？&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 滚动到指定位置&lt;/span&gt;
&lt;span&gt;recyclerView.scrollToPosition(position);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 平滑滚动到指定位置&lt;/span&gt;
recyclerView.smoothScrollToPosition(position);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有没有滚动到制定像素位置呢？&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; scrollBy(x, y)这个方法是自己去控制移动的距离，单位是像素,所以在使用scrollBy(x, y)需要自己去计算移动的高度或宽度。&lt;/span&gt;
recyclerView.scrollBy(x, y)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可是，问题是滚动到中间位置啊？这个怎么办呢？这样子行不行呢？&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
mRecyclerView.scrollToPosition(0&lt;span&gt;);
mRecyclerView.scrollBy(&lt;/span&gt;0,400);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先滚动到制定位置，在滚动一段距离不就好了？运行发现，这两行代码只执行第一行，第二行无效。&lt;/p&gt;
&lt;p&gt;debug 调试看了下，还是没有弄懂，实现太复杂。&lt;/p&gt;
&lt;p&gt;那就是说这样是不行的，那有没有其他办法呢？&lt;/p&gt;
&lt;p&gt;RecyclerView 有一个滚动监听方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
mRecyclerView.addOnScrollListener(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; RecyclerView.OnScrollListener() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onScrollStateChanged(RecyclerView recyclerView, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; newState) {
                &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onScrollStateChanged(recyclerView, newState);
            }

            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onScrolled(RecyclerView recyclerView, &lt;span&gt;int&lt;/span&gt; dx, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; dy) {
                &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onScrolled(recyclerView, dx, dy);
            }
        });&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;onScrollStateChanged 方法对应三种状态：静止（SCROLL_STATE_IDLE），拖动滚动（SCROLL_STATE_DRAGGING），滑动（SCROLL_STATE_SETTLING）。&lt;br/&gt;当手动缓慢滑动的时候，会触发：&lt;strong&gt;&lt;span&gt;onScrollStateChanged (拖动滚动) --&amp;gt; (n个)onScrolled --&amp;gt;onScrollStateChanged(静止)；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当手快速滑动的时候，会触发：&lt;strong&gt;&lt;span&gt;onScrollStateChanged (拖动滚动) --&amp;gt; (n个)onScrolled --&amp;gt; onScrollStateChanged (滑动) --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;(n个)onScrolled&lt;/span&gt;&lt;/strong&gt; &lt;strong&gt;&lt;span&gt;--&amp;gt; onScrollStateChanged (静止)；&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;有想法了，点击的时候，先运行 scrollToPosition，在 onScrolled 方法里面 运行 scrollBy 方法。写代码，运行，通过。&lt;br/&gt;下面就是中间位置的计算了。&lt;/p&gt;
&lt;p&gt;首先计算出 recylerview 的展现高度。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 Rect rect = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect();
 mRecyclerView.getGlobalVisibleRect(rect);
 reHeight &lt;/span&gt;= rect.bottom - rect.top - vHeight;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当运行 scrollToPosition 后，点击条目就会出现在视野当中，这时候，计算出相应的位移即可。需要注意一点的是，当点击条目在视野内的时候，是不会运行 scrollToPosition 方法的。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;int&lt;/span&gt; top = mRecyclerView.getChildAt(position -&lt;span&gt; firstPosition).getTop();
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; half = reHeight / 2&lt;span&gt;;
        mRecyclerView.scrollBy(&lt;/span&gt;0, top - half);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后就是延时的设定，采用Handler 进行延时。&lt;/p&gt;
&lt;h2&gt;代码&lt;/h2&gt;
&lt;p&gt;核心代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MainActivity &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; AppCompatActivity {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String TAG = &quot;MainActivity&quot;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; RecyclerView mRecyclerView;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; LinearLayoutManager mLayoutManager;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; RecyclerView.Adapter mAdapter;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String[] data;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Handler handler;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isClick = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; vHeight = -1&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; reHeight = -1&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; position = 0&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; target = 10&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isMove = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Runnable runnable;

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onCreate(Bundle savedInstanceState) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        handler &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Handler();

        mRecyclerView &lt;/span&gt;=&lt;span&gt; (RecyclerView) findViewById(R.id.my_recycler_view);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建默认的线性LayoutManager&lt;/span&gt;
        mLayoutManager = &lt;span&gt;new&lt;/span&gt; LinearLayoutManager(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        mLayoutManager.setAutoMeasureEnabled(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        mRecyclerView.setLayoutManager(mLayoutManager);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果可以确定每个item的高度是固定的，设置这个选项可以提高性能&lt;/span&gt;
        mRecyclerView.setHasFixedSize(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        mRecyclerView.setNestedScrollingEnabled(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        data &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; String[]{&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;, &quot;13&quot;, &quot;14&quot;, &quot;15&quot;, &quot;16&quot;, &quot;17&quot;, &quot;18&quot;, &quot;19&quot;, &quot;20&quot;, &quot;21&quot;&lt;span&gt;};


       runnable &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Runnable() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isVisible()) {
                    scrollToMiddle();
                } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                    mRecyclerView.scrollToPosition(position);
                    isMove &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                    isClick &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                }
            }
        };
&lt;/span&gt;
        mAdapter = &lt;span&gt;new&lt;/span&gt; MyAdapter(data, &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MyAdapter.onRecyclerViewItemClick() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onItemClick(View v, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; pos) {
                Toast.makeText(MainActivity.&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;, &quot;第&quot; + pos + &quot;行&quot;&lt;span&gt;, Toast.LENGTH_SHORT).show();
                position &lt;/span&gt;=&lt;span&gt; pos;
                vHeight &lt;/span&gt;=&lt;span&gt; v.getHeight();

                Rect rect &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect();
                mRecyclerView.getGlobalVisibleRect(rect);
                reHeight &lt;/span&gt;= rect.bottom - rect.top -&lt;span&gt; vHeight;

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; handler.removeCallbacksAndMessages(null);&lt;/span&gt;
&lt;span&gt;                handler.removeCallbacks(runnable);
                handler.postDelayed(runnable, &lt;/span&gt;4000&lt;span&gt;);
                isClick &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

            }
        });
        mRecyclerView.setAdapter(mAdapter);
        mRecyclerView.addOnScrollListener(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; RecyclerView.OnScrollListener() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onScrollStateChanged(RecyclerView recyclerView, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; newState) {
                &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onScrollStateChanged(recyclerView, newState);
                Log.d(TAG, &lt;/span&gt;&quot;&quot; +&lt;span&gt; newState);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (newState == RecyclerView.SCROLL_STATE_DRAGGING &amp;amp;&amp;amp; !&lt;span&gt;isMove) {
                    handler.removeCallbacks(runnable);
                }
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (newState ==&lt;span&gt; RecyclerView.SCROLL_STATE_IDLE) {
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isClick) {
                        handler.postDelayed(runnable, &lt;/span&gt;4000&lt;span&gt;);
                    }
                }
            }

            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onScrolled(RecyclerView recyclerView, &lt;span&gt;int&lt;/span&gt; dx, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; dy) {
                &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onScrolled(recyclerView, dx, dy);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isMove) {
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (vHeight &amp;lt; 0&lt;span&gt;) {
                        isMove &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
                    }
                    scrollToMiddle();
                }
            }
        });
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; scrollToMiddle() {
        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; firstPosition =&lt;span&gt; mLayoutManager.findFirstVisibleItemPosition();
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; top = mRecyclerView.getChildAt(position -&lt;span&gt; firstPosition).getTop();
        Log.d(TAG, &lt;/span&gt;&quot; position&quot; + position + &quot; &quot; +&lt;span&gt; top);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; half = reHeight / 2&lt;span&gt;;
        mRecyclerView.scrollBy(&lt;/span&gt;0, top -&lt;span&gt; half);
        isMove &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;

    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isVisible() {
        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; firstPosition =&lt;span&gt; mLayoutManager.findFirstVisibleItemPosition();
        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; lastPosition =&lt;span&gt; mLayoutManager.findLastVisibleItemPosition();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; position &amp;lt;= lastPosition &amp;amp;&amp;amp; position &amp;gt;=&lt;span&gt; firstPosition;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onDestroy() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onDestroy();
        handler.removeCallbacksAndMessages(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        handler &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 18 Mar 2018 15:41:00 +0000</pubDate>
<dc:creator>huansky</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huansky/p/8598342.html</dc:identifier>
</item>
<item>
<title>java ssm框架实现分页功能 （oracle） - 筱月</title>
<link>http://www.cnblogs.com/ainyi/p/8598217.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ainyi/p/8598217.html</guid>
<description>&lt;h2&gt;java web 实现分页功能&lt;/h2&gt;
&lt;p&gt;使用框架：ssm&lt;/p&gt;
&lt;p&gt;数据库：oracle&lt;/p&gt;
&lt;p&gt;话说 oracle 的分页查询比 mysql 复杂多了，在这里简单谈一下：&lt;/p&gt;
&lt;p&gt;查询 前十条数据：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;FROM&lt;/span&gt;&lt;span&gt;(
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;        &lt;span&gt;SELECT&lt;/span&gt; ROWNUM WN,RN.&lt;span&gt;*&lt;/span&gt; &lt;span&gt;FROM&lt;/span&gt;&lt;span&gt; (
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;SELECT&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;                  id,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;                  title,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                   create_time &lt;span&gt;as&lt;/span&gt;&lt;span&gt; createTime,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;                  musictor,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;                  musictitle
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;              &lt;span&gt;FROM&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                 krry_blog
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;              &lt;span&gt;ORDER&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; create_time &lt;span&gt;desc&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;         )RN
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    )WN
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;WHERE&lt;/span&gt; WN &lt;span&gt;&amp;lt;= 10&lt;/span&gt; &lt;span&gt;AND&lt;/span&gt; WN &amp;gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法较为复杂，&lt;/p&gt;
&lt;p&gt;同样的结果，mysql 的语法是：用一个 LIMIT 就可以解决。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    id,
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    title,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     create_time &lt;span&gt;as&lt;/span&gt;&lt;span&gt; createTime,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    musictor,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    musictitle
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;FROM&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    krry_blog
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;ORDER&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; create_time &lt;span&gt;desc&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; LIMIT &lt;span&gt;0&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;SSM 框架的搭建，就不多说了，以前的博客有详细介绍，这里就谈谈实现 java web 分页的功能。&lt;/p&gt;
&lt;p&gt;用到插件 js ：&lt;a href=&quot;https://files.cnblogs.com/files/ainyi/krry_page.js&quot; target=&quot;_blank&quot;&gt; krry_page.js&lt;/a&gt;，还有jQuery&lt;/p&gt;

&lt;h2&gt;mapper 持久层：&lt;/h2&gt;
&lt;p&gt;BlogMapper.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.mapper;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; * 
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * Mapper：操作数据库
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0.0
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; BlogMapper {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;     * 查询所有博客
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;&lt;span&gt; findBlogs(Params params);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;     * 计算博客数量
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;     * com.krry.dao.admin 
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;     * 方法名：countBlogs
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry 
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; int
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@exception&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@since&lt;/span&gt;&lt;span&gt;  1.0.0
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; countBlogs();
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     
&lt;span&gt;35&lt;/span&gt;     
&lt;span&gt;36&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;BlogMapper.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;com.krry.mapper.BlogMapper&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 分页查询所有的博客信息 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;findBlogs&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;java.util.HashMap&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;Params&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        SELECT * FROM(
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            SELECT ROWNUM WN,RN.* FROM (
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;                SELECT
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;                    id,
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                    title,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;                    create_time as createTime,
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                    musictor,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                    musictitle
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;                FROM
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;                    krry_blog
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                ORDER BY create_time desc
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            )RN
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        )WN
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         WHERE WN &lt;span&gt;&amp;amp;lt;&lt;/span&gt;= #{pageSize} AND WN &lt;span&gt;&amp;amp;gt;&lt;/span&gt;&lt;span&gt; #{pageNo}
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 查询博客数量 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;countBlogs&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;long&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;        SELECT
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;            count(*)
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;        FROM
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;            krry_blog
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     
&lt;span&gt;33&lt;/span&gt;     
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;service业务层：&lt;/h2&gt;
&lt;p&gt;接口类：IBlogService.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.service;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Param;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Blog;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt; * service层：处理业务逻辑（impl里面实现）
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; asusaad
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IBlogService {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;     * 分页查询所有博客
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;&lt;span&gt; findBlogs(Params params);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     
&lt;span&gt;27&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * 计算博客数量
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; countBlogs();
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     
&lt;span&gt;34&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;impl 实现类：BlogService.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.service.impl;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.mapper.BlogMapper;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.service.IBlogService;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt; * 实现service层接口
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; asusaad
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;@Service
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BlogService &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; IBlogService{
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; BlogMapper blogMapper;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;     * 查询博客
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;&lt;span&gt; findBlogs(Params params) {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;查询博客信息&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; blog =&lt;span&gt; blogMapper.findBlogs(params);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         
&lt;span&gt;33&lt;/span&gt;         
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; blog;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;     
&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;     * 计算博客数量
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; countBlogs(){
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         
&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;long&lt;/span&gt; coutBlogs =&lt;span&gt; blogMapper.countBlogs();
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; coutBlogs;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;     
&lt;span&gt;49&lt;/span&gt;     
&lt;span&gt;50&lt;/span&gt; 
&lt;span&gt;51&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;controller控制层：&lt;/h2&gt;
&lt;p&gt;KrryController.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.controller;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.ResponseBody;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.service.IBlogService;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt; * KrryController
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; * controller层，作为请求转发
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; asusaad
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; @Controller  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;表示是多例模式，每个用户返回的web层是不一样的&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KrryController {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; IBlogService blogService;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;     * 首页，并且分页查询
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;     @RequestMapping(&quot;/index&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView index(Params params){
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         
&lt;span&gt;33&lt;/span&gt;         params.setPageNo(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         params.setPageSize(10); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;一开始只查询10条
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         
&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;调用业务层&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;         List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; blogs =&lt;span&gt; blogService.findBlogs(params);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;查询博客数量&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;long&lt;/span&gt; coutBlogs =&lt;span&gt; blogService.countBlogs();
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         
&lt;span&gt;41&lt;/span&gt;         ModelAndView modelAndView = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ModelAndView();
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         modelAndView.addObject(&quot;blogs&quot;&lt;span&gt;, blogs);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         modelAndView.addObject(&quot;coutBlogs&quot;&lt;span&gt;, coutBlogs);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         modelAndView.setViewName(&quot;index&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; modelAndView;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;     
&lt;span&gt;49&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;     * ajax请求 的 分页查询
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;     @RequestMapping(&quot;/loadData&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HashMap&amp;lt;String, Object&amp;gt;&lt;span&gt; loadData(Params params){
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;         
&lt;span&gt;58&lt;/span&gt;         HashMap&amp;lt;String, Object&amp;gt; map = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;String, Object&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; blogs =&lt;span&gt; blogService.findBlogs(params);
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;         map.put(&quot;blogs&quot;&lt;span&gt;, blogs);
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         
&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; map;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;     
&lt;span&gt;65&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;这里要有两个实体类，作为数据库查询的注入 Blog，还有分页查询的两个参数 Params：&lt;/h3&gt;
&lt;h3&gt;设置data参数：pageNo（下一页）：就是当前页数 * 下一页要显示的数量&lt;br/&gt;  　　　　　　 pageSize（下一页）：已经查询出来的数量（pageNo） + 每页要显示的数量&lt;br/&gt;在数据库中是 WN &amp;lt;= pageSize and WN &amp;gt; pageNo 来查询分页数据&lt;/h3&gt;
&lt;p&gt;Blog.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.entity;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * 
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * User
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0.0
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Blog {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 主键&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String id;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;博客标题&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String title;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;音乐作者&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String musictor;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;音乐标题&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String musictitle;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建时间&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String createTime;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;      
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Blog(String id, String title, String musictor, String musictitle,
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            String createTime) {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.title =&lt;span&gt; title;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictor =&lt;span&gt; musictor;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictitle =&lt;span&gt; musictitle;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.createTime =&lt;span&gt; createTime;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getId() {
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(String id) {
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getTitle() {
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; title;
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setTitle(String title) {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.title =&lt;span&gt; title;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; 
&lt;span&gt;49&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getMusictor() {
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; musictor;
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMusictor(String musictor) {
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictor =&lt;span&gt; musictor;
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; 
&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getMusictitle() {
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; musictitle;
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMusictitle(String musictitle) {
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictitle =&lt;span&gt; musictitle;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; 
&lt;span&gt;65&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCreateTime() {
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; createTime;
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; 
&lt;span&gt;69&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreateTime(String createTime) {
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.createTime =&lt;span&gt; createTime;
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;      
&lt;span&gt;73&lt;/span&gt;      
&lt;span&gt;74&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Params.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.entity;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * 
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * Params
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0.0
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Params {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Integer pageSize = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Integer pageNo = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getPageNo() {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; pageNo;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPageNo(Integer pageNo) {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.pageNo =&lt;span&gt; pageNo;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getPageSize() {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; pageSize;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPageSize(Integer pageSize) {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.pageSize =&lt;span&gt; pageSize;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;web 页面 index.jsp&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; import&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java.util.*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@taglib uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/jsp/jstl/core&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;String&lt;/span&gt;&lt;span&gt; path &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; request.getContextPath();
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;String&lt;/span&gt;&lt;span&gt; basePath &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; request.getScheme()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;://&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;request.getServerName()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;request.getServerPort()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;path&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;pageContext.setAttribute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;basePath&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, basePath);
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE HTML&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;分页&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;        body&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;url(&quot;resource/images/78788.jpg&quot;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;cover&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;        .titless&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 34px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; black&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 16px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;        .ke_tabbox&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;556px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;900px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#f9f9f9&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px auto 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;            .ke_tabbox .sendMy&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;                    font-family&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &quot;微软雅黑&quot;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;                    font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 28px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;                    -webkit-text-fill-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;                    background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -webkit-gradient(linear,left top,left bottom,from(#FD8700),to(#FF00B1))&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;                    -webkit-background-clip&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; text&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;                    margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;8px auto 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 35px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;            .ke_tabbox .ke_table&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 26px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;            .ke_tabbox  th&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#ccc&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;font-weight&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;bold&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;            .ke_tabbox .ke_table td,th&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;white-space&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; nowrap&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; ellipsis&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #fff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#666&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt;             &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;分页相关&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;            .tzPage&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 480px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt;             
&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;            #tbody tr:hover&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#eaeaea&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;            #tbody .t_mode&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;padding-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;            #tbody .t_avbiaoq:hover&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#FF6857&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;transition&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;.4s&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;            #tbody .t_dele&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;padding-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt;     
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;            .tzPage a&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;text-decoration&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#7d7d7d&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#f2f2f2&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;            .tzPage a:hover&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#dd5862&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#FFF&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;            .tzPage a,.tzPage span&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0em 0.5em&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;min-width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1em&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 22px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 22px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;            .tzPage .current&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#dd5862&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#FFF&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;            .tzPage .current.prev,.tzPage .current.next&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#999&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #e5e5e5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#fff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;            .tm_psize_go&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;24px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;33px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #e5e5e5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#999&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;            #tm_pagego&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;18px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #e5e5e5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 22px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#999&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;            .sortdesc&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;            .sortasc&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;            .red&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;red&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;    
&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;            .green&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;green&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;             
&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;            .hideAdd&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;                    text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;                    line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;                    margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 16px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;            .hideAdd a&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;28px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;-webkit-text-fill-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -webkit-gradient(linear,left top,left bottom,from(#FD0051),to(#A22C93))&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;-webkit-background-clip&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; text&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt;   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;   
&lt;span&gt; 55&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt;       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ke_tabbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;titless&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;分页展示&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ke_table&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:25%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:25%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;音乐人&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:30%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;音乐标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:20%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;发布时间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;             
&lt;span&gt; 68&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tbody &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;tbody&quot;&lt;/span&gt;&lt;span&gt; data-itemcount&lt;/span&gt;&lt;span&gt;=&quot;${coutBlogs}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;=&quot;blog&quot;&lt;/span&gt;&lt;span&gt; items&lt;/span&gt;&lt;span&gt;=&quot;${blogs}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 70&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;t_avbiaoq&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;${blog.TITLE}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.TITLE}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;t_avbiaoq&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;${blog.MUSICTOR}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.MUSICTOR}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;t_avbiaoq&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;${blog.MUSICTITLE}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.MUSICTITLE}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.CREATETIME}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 75&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;krryPage&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;${basePath}/resource/js/jquery-1.11.3.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;${basePath}/resource/js/krry_page.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; basePath &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${basePath}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt;         
&lt;span&gt; 86&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; krryAdminBlog &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;            initPage:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(itemCount){
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;                $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#krryPage&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).tzPage(itemCount, {
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;                    num_display_entries : &lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;主体页数&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;                    num_edge_entries : &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;边缘页数&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;                    current_page : &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指明选中页码&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;                    items_per_page : &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;每页显示多少条&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;                    prev_text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;上一页&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;                    next_text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;下一页&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;                    showGo:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示&lt;/span&gt;
&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;                    showSelect:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;                    callback : &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(pageNo, psize) {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;会回传两个参数，第一个是当前页数，第二个是每页要显示的数量&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;                        krryAdminBlog.loadData(pageNo,psize);
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;                });
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; &lt;span&gt;            },
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置data参数：pageNo（下一页）：就是当前页数 * 下一页要显示的数量&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;            pageSize（下一页）：已经查询出来的数量（pageNo）  + 每页要显示的数量&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;在数据库中是  WN &amp;lt;= pageSize and WN &amp;gt; pageNo 来查询分页数据&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt; &lt;span&gt;            loadData:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(pageNo,pageSize){
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;                pageNo &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; pageNo &lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt; pageSize;
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; &lt;span&gt;                pageSize &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; pageNo &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;                $.ajax({
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &lt;span&gt;                    url:basePath&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/loadData&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;                    data:{pageNo:pageNo,pageSize:pageSize},
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;                    success:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(data){
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; blogArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; data.blogs;
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;                             &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,len&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;blogArr.length;i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; len;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;                                 &lt;span&gt;var&lt;/span&gt;&lt;span&gt; json &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; blogArr[i];
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;                                html&lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;119&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&amp;lt;a class='t_avbiaoq' title='&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.TITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.TITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;120&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&amp;lt;a class='t_avbiaoq' title='&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.NAME&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.MUSICTOR&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;121&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&amp;lt;a class='t_avbiaoq' title='&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.MUSICTITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.MUSICTITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;122&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.CREATETIME&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;123&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; &lt;span&gt;                            }
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; &lt;span&gt;                            $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#tbody&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(html);
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;                });
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;        };
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;         
&lt;span&gt;132&lt;/span&gt; &lt;span&gt;        krryAdminBlog.initPage($(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#tbody&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).data(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;itemcount&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt;         
&lt;span&gt;134&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt;   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;分页效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1344447/201803/1344447-20180318231658521-9669559.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 链接地址：&lt;a href=&quot;https://www.ainyi.com/krry_pages&quot; target=&quot;_blank&quot;&gt;https://www.ainyi.com/krry_pages&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 18 Mar 2018 15:15:00 +0000</pubDate>
<dc:creator>筱月</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ainyi/p/8598217.html</dc:identifier>
</item>
<item>
<title>浅谈强化学习的方法及学习路线 - Angel_Kitty</title>
<link>http://www.cnblogs.com/ECJTUACM-873284962/p/8597995.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ECJTUACM-873284962/p/8597995.html</guid>
<description>&lt;div readability=&quot;181.33137398971&quot;&gt;
&lt;p&gt;目前，对于全球科学家而言，“如何去学习一种新技能”成为了一个最基本的研究问题。为什么要解决这个问题的初衷是显而易见的，如果我们理解了这个问题，那么我们可以使人类做一些我们以前可能没有想到的事。或者，我们可以训练去做更多的“人类”工作，常遭一个真正的人工智能时代。&lt;/p&gt;
&lt;p&gt;虽然，对于上述问题，我们目前还没有一个完整的答案去解释，但是有一些事情是可以理解的。先不考虑技能的学习，我们首先需要与环境进行交互。无论我们是学习驾驶汽车还是婴儿学习走路，学习都是基于和环境的相互交互。从互动中学习是所有智力发展和学习理论的基础概念。&lt;/p&gt;

&lt;p&gt;今天，我们将探讨强化学习，这是一种基于环境相互交互的学习算法。有些人认为，强化学习是实现强人工智能的真正希望。这种说法也是正确的，因为强化学习所拥有的潜力确实是巨大的。&lt;/p&gt;
&lt;p&gt;目前，有关强化学习的研究正在快速增长，人们为不同的应用程序生成各种各样的学习算法。因此，熟悉强化学习的技术就变得尤其重要了。如果你还不是很熟悉强化学习，那么我建议你可以去看看我以前有关强化学习文章和一些开源的强化学习平台。&lt;/p&gt;
&lt;p&gt;一旦你已经掌握和理解了强化学习的基础知识，那么请继续阅读这篇文章。读完本文之后，你会对强化学习有一个透彻的了解，并且会进行实际代码实现。&lt;/p&gt;
&lt;p&gt;注：在代码实现部分，我们假设你已经有了Python的基本知识。如果你还不知道Python，那么你应该先看看&lt;a href=&quot;https://link.jianshu.com/?t=https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;这篇教程&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;1. 确定一个强化学习问题&lt;/h2&gt;
&lt;p&gt;强化学习是学习如何去做，如何根据与环境的交互采取相应的行动。最终的结果就是使得系统的回报信号数值最大化。学习者不会被告知去执行哪个行动，而是要他自己去发现哪种行动将产生最大的回报。让我们通过一个简单的例子来解释一下：&lt;/p&gt;
&lt;p&gt;我们将一个正在学习走路的孩子作为一个例子。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;1280&quot; data-width=&quot;1920&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-bed60c27d7e8179a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;324389&quot; data-original-format=&quot;image/jpeg&quot; data-original-height=&quot;1280&quot; data-original-width=&quot;1920&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-bed60c27d7e8179a.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;以下是孩子在学习走路时所要采取的步骤：&lt;/p&gt;
&lt;p&gt;1.孩子会观察的第一件事，就是注意你是如何走路的。你使用两条腿，一次走一步，一步一步往前走。孩子会抓住这个概念，然后试图去模仿你。&lt;/p&gt;
&lt;p&gt;2.但很快他/她又会明白，在走路之前，孩子必须先站起来！在学习走路的时候，这对于孩子来说是一个挑战。因此，孩子试图自己站起来，他/她不断跌倒，但是任然不断地站起来。&lt;/p&gt;
&lt;p&gt;3.然而还有另外一个挑战需要应付。站起来是相对容易的，但是要保持站立状态就是另一个挑战了。在一个狭小的空气中，找到支撑，孩子设法保持站立。&lt;/p&gt;
&lt;p&gt;4.现在，孩子的真正任务就是开始学习走路了。但是学习走路说起来很容易，而实际做起来就不是那么容易了。在孩子的大脑中需要处理很多事情，比如平衡身体，决定哪个脚是下一次需要放下的，放在哪里。&lt;/p&gt;
&lt;p&gt;这听起来像是一个很困难的任务，对吗？它实际上确实是一个挑战，先要学习站立，然后才能学习行走。但是，现在我们不都学会了走路嘛，再也不会被这个问题所困扰了。现在，你可以明白，为什么这对于孩子是多么困难的原因了。&lt;/p&gt;
&lt;p&gt;让我们形式化上面的例子。例子所要陈述的问题是“走路问题”，其中孩子是一个试图通过采取行动（走路）来操纵环境（在地上走路）的智能体，他/她试图从一个状态（即，他/她走的每一步）转移到另一个状态。当他/她完成任务的一个子模块（即，孩子走了几步）时，孩子会获得奖励（比如，一些巧克力），但是当他/她不会走路时，他/她不会收到任何巧克力（这是一个负反馈过程）。这就是像话学习问题的简单描述。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;175&quot; data-width=&quot;434&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-4362ef3c4906a5fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/434&quot; alt=&quot;&quot; data-original-filesize=&quot;7761&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;175&quot; data-original-width=&quot;434&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-4362ef3c4906a5fe.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;175&quot; data-width=&quot;434&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-197d562de91483bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/434&quot; alt=&quot;&quot; data-original-filesize=&quot;21048&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;175&quot; data-original-width=&quot;434&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-197d562de91483bd.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;这是一个有关强化学习很好的&lt;a href=&quot;https://link.jianshu.com/?t=https://youtu.be/m2weFARriE8&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;介绍视频&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;2. 与其他机器学习方法的比较&lt;/h2&gt;
&lt;p&gt;强化学习属于更打雷的机器学习算法。以下是有关机器学习算法类型的描述。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;597&quot; data-width=&quot;939&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-51d057cc9af03a50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;35760&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;597&quot; data-original-width=&quot;939&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-51d057cc9af03a50.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;让我们比较一下强化学习算法和别的类型算法之间的区别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;监督学习与强化学习&lt;/strong&gt;：在监督学习中，在外部有一个“监督主管”，它拥有所有环境的知识，并且与智能体一起共享这个知识，从而帮助智能体完成任务。但是这样存在一些问题，因为在一个任务中，其中存在如此多的子任务之间的组合，智能体应该执行并且实现目标。所以，创建一个“监督主管”几乎是不切实际的。例如，在象棋游戏中，存在数万个可以移动的玩法。因此，去创建一个可以获胜的玩法知识库是一个单调乏味的任务。在这些问题中，从自己的经验中学习，并且获得知识是更加合理可行的。这就是强化学习和监督学习的主要区别。在监督学习和强化学习中，在输入和输出之间都存在映射。但是在强化学习中，存在的是对智能体的奖励反馈函数，而不是像监督学习直接告诉智能体最终的答案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无监督学习与强化学习&lt;/strong&gt;：在强化学习中，有一个从输入到输出的映射过程，但是这个过程在无监督学习中是不存在的。在无监督学习中，主要任务是找到一个最基础的模式，而不是一种映射关系。例如，如果任务是向用户推荐新闻文章，则无监督学习算法是先查看该人以前读过的类似文章，并把它们推荐给其他人。而强化学习算法则是，通过用户的一些文章，并且获得用户的不断反馈，从而构建一个“知识图谱”，从而得知用户与文章之间的喜爱关系。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;还有第四种类型的机器学习，成为半监督学习，其本质上是监督学习和无监督学习的组合。它不同于强化学习，类似于监督学习和半监督学习具有直接的参照答案，而强化学习不具有。&lt;/p&gt;
&lt;h2&gt;3.解决强化学习问题的框架&lt;/h2&gt;
&lt;p&gt;为了理解如何去解决一个强化学习问题，让我们通过一个经典的例子来说明一下强化学习问题——多臂赌博机。首先，我们需要了解探索与开发的基本问题，然后去定义解决强化学习问题的框架。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;750&quot; data-width=&quot;1123&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-41978be8c6834a60.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;124778&quot; data-original-format=&quot;image/jpeg&quot; data-original-height=&quot;750&quot; data-original-width=&quot;1123&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-41978be8c6834a60.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Tiger Machine如上图，假设你已经在Tiger Machine上面玩了很多次了。&lt;/p&gt;
&lt;p&gt;现在你想做的是从Tiger Machine上面获得最大的回报，并且尽可能的快。你会怎么做呢？&lt;/p&gt;
&lt;p&gt;一个比较天真的想法是，只选择一个Tiger Machine，然后一整天都在玩它。这听起来非常无聊，但Tiger Machine可能会给你一些“报酬”，即让你赢钱。使用这种方法，你可能中奖的概率大约是0.00000.....1。也就是说，大多数时间你可能知识坐在Tiger Machine面前亏钱。正式说明一下，这可以被定义为一种纯粹的开发方法。但是这是最佳选择吗？答案当然是否定的。&lt;/p&gt;
&lt;p&gt;让我们看看另外一种方法。我们可以拉每个Tiger Machine的拉杆，并且向上帝祈祷，让我们至少打中一个。当然，这是另一种天真的想法，你只会一天都在拉动拉杆，但只是给你一点点报酬。正式说明一下，这种方法只是一种纯粹的探索方法。&lt;/p&gt;
&lt;p&gt;这两种方法都不是最优的，我们必须在它们之间找到适当的平衡点，已获得最大的回报。这被称为强化学习的探索和开发困境。&lt;/p&gt;
&lt;p&gt;首先，我们正式的定义解决强化学习问题的框架，然后列出可能的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;马尔科夫决策过程：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在强化学习场景中，我们定义问题的数学框架被称之为马尔科夫决策过程。这可以被设计为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;状态集合：S&lt;/li&gt;
&lt;li&gt;动作集合：A&lt;/li&gt;
&lt;li&gt;奖励函数：R&lt;/li&gt;
&lt;li&gt;策略：π&lt;/li&gt;
&lt;li&gt;价值：V&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们必须采取一定的行动（A），让我们从开始状态移动到结束状态（S）。每当我们采取一个行动之后，我们都会得到一定的回报作为奖励。当然，所获得的奖励的性质（正面奖励还是负面奖励）是由我们的行动决定的。&lt;/p&gt;
&lt;p&gt;我们的策略集合（π）是由我们的动作集合来确定的，而我们得到的回报确定了我们的价值（V）。在这里，我们的任务就是通过选择正确的策略来最大化我们的价值。所以我们必须最大化下面的方程：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;54&quot; data-width=&quot;137&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-103d4e4788d356c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/137&quot; alt=&quot;&quot; data-original-filesize=&quot;2856&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;54&quot; data-original-width=&quot;137&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-103d4e4788d356c6.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;对于时间t，所有可能的S。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;旅行推销员问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;让我们通过另外一个例子来说明一下。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;435&quot; data-width=&quot;830&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-22319143c159960c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;62069&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;435&quot; data-original-width=&quot;830&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-22319143c159960c.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;这个问题是一系列旅行商（TSP）问题的代表。任务是以尽可能低的成本，完成从地点A到地点F。两个字母之间的每条边上的数字表示两地之间的距离花费。如果这个值是负数，那么表示经过这条路，你会得到一定的报酬。我们定义价值是当你用选择的策略走完整个路程时，所获得的总价值。&lt;/p&gt;
&lt;p&gt;这里说明一下符号：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;状态节点集合：{A,B,C,D,E,F}&lt;/li&gt;
&lt;li&gt;动作集合是从一个地点到另一个地点：{A-&amp;gt;B, C-&amp;gt;D, etc}&lt;/li&gt;
&lt;li&gt;奖励函数是边上的值&lt;/li&gt;
&lt;li&gt;策略函数指的是完整的路径规划，比如: {A -&amp;gt; C -&amp;gt; F}&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;现在假设你在地点A，唯一你能看见的路就是你下一个目的地（也就是说，你只能看见B，D，C，E），而别的地点你是不知道的。&lt;/p&gt;
&lt;p&gt;你可以采取贪心算法，去获取当前状态下最有利的步骤，也就是说你从{A -&amp;gt; (B,C,D,E)}中选择采取 {A-&amp;gt;D} 这种方法。同样，现在你所在的地点是D，想要到达地点F。你可以从{D -&amp;gt; (B, C, F)} 中采取 {D -&amp;gt; F} 这个方法，可以让你得到最大的报酬。因此，我们采取这一条路。&lt;/p&gt;
&lt;p&gt;至此，我们的策略就是采取{A -&amp;gt; D -&amp;gt; F}，我们获得的回报是-120。&lt;/p&gt;
&lt;p&gt;恭喜！你刚刚就实现了强化学习算法。这种算法被称之为 epsilon 贪婪算法。这是一种逐步测试从而解决问题的贪婪算法。现在，如果见你（推销员）想再次从地点A到地点F，你总是会选择这一条路了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他旅游方式？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你能猜出我们的策略是属于哪个类别（纯粹的探索还是纯粹的开发）吗？&lt;br/&gt;请注意，我们采取的策略并不是一个最佳策略。我们必须“探索”一点，然后去寻找最佳的策略。在这里，我们采取的方法是局域策略的而学习，我们的任务是在所有可能的策略中找到最佳的策略。有很多的方法都可以解决这个问题，在这里，我们简要的列出一些主要类别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;策略优先：我们的重点是找到最佳的策略&lt;/li&gt;
&lt;li&gt;回报优先：我们的重点是找到最佳的回报价值，即累计奖励&lt;/li&gt;
&lt;li&gt;行动优先：我们的重点是在每个步骤上采取最佳行动&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在以后的文章中，我会深入讨论强化学习算法。到那时，你可以参考这篇关于强化学习算法调研的&lt;a href=&quot;https://link.jianshu.com/?t=https://www.jair.org/media/301/live-301-1562-jair.pdf&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;论文&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;4.强化学习的实现&lt;/h2&gt;
&lt;p&gt;接下来，我们将使用深度Q学习算法。Q学习是一种基于策略的学习算法，它具有和神经网络近似的函数表示。这个算法被Google使用，并且打败了Atari游戏。&lt;/p&gt;
&lt;p&gt;让我们看看Q学习的伪代码：&lt;/p&gt;
&lt;p&gt;1.初始化价值表 ‘Q(s, a)’.&lt;br/&gt;2.观察当前的状态值 ‘s’.&lt;br/&gt;3.基于动作选择一个策略（例如，epsilon贪婪）作为该状态选择的动作.&lt;br/&gt;4.根据这个动作，观察回报价值 ’r’ 和下一个新的状态 &lt;code&gt;s&lt;/code&gt;.&lt;br/&gt;5.使用观察到的奖励和可能的下一个状态所获得的最大奖励来更新状态的值。根据上述公式和参数进行更新。&lt;br/&gt;6.将状态设置为新的状态，并且重复上述过程，直到达到最终状态。&lt;/p&gt;
&lt;p&gt;Q学习的简单描述可以总结如下：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;527&quot; data-width=&quot;479&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-da4dc2982467cee0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/479&quot; alt=&quot;&quot; data-original-filesize=&quot;73469&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;527&quot; data-original-width=&quot;479&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-da4dc2982467cee0.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;我们首先来了解一下 Cartpole 问题，然后继续编写我们的解决方案。&lt;/p&gt;
&lt;p&gt;当我还是一个孩子的时候，我记得我会选择一根木棍，并试图用一只手指去使它保持平衡。我和我的朋友过去有这样一个比赛，看谁能让木棍保持平衡的时间更多，谁就能得到一块巧克力作为奖励。&lt;/p&gt;
&lt;p&gt;这里有一个&lt;a href=&quot;https://link.jianshu.com/?t=https://youtu.be/XiigTGKZfks&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;简单的视频&lt;/a&gt;来描述一个真正的 Cart-Pole 系统。&lt;/p&gt;
&lt;p&gt;让我们开始编写代码吧！&lt;/p&gt;
&lt;p&gt;在开始编写之前，我们需要先安装几个软件。&lt;/p&gt;
&lt;p&gt;步骤一：安装 keras-rl包&lt;/p&gt;
&lt;p&gt;在终端中，你可以运行以下命令：&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;我们假设你已经安装好了pip，那么你只需要使用以下命令进行安装：&lt;/p&gt;&lt;p&gt;接下来，我们配置和编译我们的智能体。我们将策略设置为 Epsilon 贪婪，我们还将我们的存储空间设置为序列存储，因为我们要需要存储我们执行操作的结果和每一个操作所获得的奖励。&lt;/p&gt;&lt;div readability=&quot;47&quot;&gt;
&lt;pre&gt;
policy =&lt;span&gt; EpsGreedyQPolicy() 
memory &lt;/span&gt;= SequentialMemory(limit=50000, window_length=1&lt;span&gt;) 
dqn &lt;/span&gt;= DQNAgent(model=model, nb_actions=nb_actions, memory=memory, nb_steps_warmup=10, target_model_update=1e-2, policy=&lt;span&gt;policy) 
dqn.compile(Adam(lr&lt;/span&gt;=1e-3), metrics=[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;mae&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]) 
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Okay, now it's time to learn something! We visualize the training here for show, but this slows down training quite a lot. &lt;/span&gt;
dqn.fit(env, nb_steps=5000, visualize=True, verbose=2) 
&lt;/pre&gt;&lt;/div&gt;</description>
<pubDate>Sun, 18 Mar 2018 14:32:00 +0000</pubDate>
<dc:creator>Angel_Kitty</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ECJTUACM-873284962/p/8597995.html</dc:identifier>
</item>
<item>
<title>数据结构—无序树 - daniumeng</title>
<link>http://www.cnblogs.com/daniumeng/p/8597862.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/daniumeng/p/8597862.html</guid>
<description>&lt;hr/&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;节点的度：&lt;/strong&gt;书中某一节点拥有的子节点数量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;数的度：&lt;/strong&gt;该树中所有节点的度的最大值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;叶节点（终端节点）:&lt;/strong&gt;度为零的节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;分支节点（非终端节点）:&lt;/strong&gt;度不为零的节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;根节点（开始节点）：&lt;/strong&gt;树中的第一个节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;内部节点：&lt;/strong&gt;树中除了根节点之外的节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;节点的层数：&lt;/strong&gt;若根节点层数为1，根节点的第n代子节点的层数为n。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;树的高度：&lt;/strong&gt;书中的节点的最大层数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;有序树和无序树&lt;/strong&gt;：若树中某一节点的子节点无序，则该树为无序树，否则为有序树。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;森林：&lt;/strong&gt;去掉一棵树的根节点后得到的n棵树。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1.树是一种很基础很重要的非线性结构。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.除表头（树根）和表尾（叶节点）外，任何一个节点只有一个直接前驱，但有多个直接后继。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.树是数据的有限集，树分为空树和非空树。　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　非空树：有且只有一个根节点。若根节点的子节点大于1，可以理解为这棵非空树有m棵相互独立的非空树组成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.&lt;span&gt;树的递归特性（★★★）&lt;/span&gt;：一颗非空树有若干子树组成，每一棵子树又由更小的子组成。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;C++实现：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[MyTree.h]：无序树类模板头文件&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;#pragma&lt;/span&gt; once&lt;span&gt;

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyTree
{
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt; TreeNode  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义私有，不让用户使用&lt;/span&gt;
&lt;span&gt;    {
        T data;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据域，可以多个数据
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指针域&lt;/span&gt;
        TreeNode *parent;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;节点的父指针&lt;/span&gt;
        TreeNode *child;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;子指针&lt;/span&gt;
        TreeNode *brother;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;兄弟指针  兄弟之间逐级管理&lt;/span&gt;
&lt;span&gt;    };
    TreeNode &lt;/span&gt;*pRoot;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根节点&lt;/span&gt;

&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    MyTree();
    &lt;/span&gt;~&lt;span&gt;MyTree();
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; clear();
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; insertNode(&lt;span&gt;const&lt;/span&gt; T&amp;amp; parentData, &lt;span&gt;const&lt;/span&gt; T&amp;amp; insertData, &lt;span&gt;bool&lt;/span&gt; insertChild = &lt;span&gt;true&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;默认插入为子节点
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;bool isFind(const T&amp;amp; findData);&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; preOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;前序（前根）遍历&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; posOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;前序（后根）遍历&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; inOrderPrint(TreeNode *root  &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;);   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;中序（中根）遍历    &lt;/span&gt;
    TreeNode*&lt;span&gt; getTreeRoot();
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; _clear(TreeNode *root);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于clear（）函数的实现，不提供接口&lt;/span&gt;
    TreeNode* _find(TreeNode *root, &lt;span&gt;const&lt;/span&gt; T&amp;amp;&lt;span&gt; findData);
};

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
typename MyTree&lt;/span&gt;&amp;lt;T&amp;gt;::TreeNode* MyTree&amp;lt;T&amp;gt;&lt;span&gt;::getTreeRoot()
{
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pRoot;
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::inOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;root)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    inOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; root-&amp;gt;data &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    inOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;brother);
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::posOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;root)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    posOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
    posOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;brother);
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; root-&amp;gt;data &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::preOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;root)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; root-&amp;gt;data &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    preOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
    preOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;brother);
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::insertNode(&lt;span&gt;const&lt;/span&gt; T&amp;amp; parentData, &lt;span&gt;const&lt;/span&gt; T&amp;amp; insertData, &lt;span&gt;bool&lt;/span&gt; insertChild &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= true&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    TreeNode &lt;/span&gt;*tempInsertNode = &lt;span&gt;new&lt;/span&gt; TreeNode;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成一个待插入的节点&lt;/span&gt;
    tempInsertNode-&amp;gt;data =&lt;span&gt; insertData;
    tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; NULL;
    tempInsertNode&lt;/span&gt;-&amp;gt;child =&lt;span&gt; NULL;
    tempInsertNode&lt;/span&gt;-&amp;gt;brother =&lt;span&gt; NULL;

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pRoot)  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断树是否为空&lt;/span&gt;
&lt;span&gt;    {
        TreeNode &lt;/span&gt;*findNode = _find(pRoot, parentData);    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;找到插入位置&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (findNode)
        {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;找到了插入位置&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (insertChild)
            {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在子节点插入&lt;/span&gt;
                TreeNode *temp = findNode-&amp;gt;&lt;span&gt;child;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (temp)
                {
                    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (temp-&amp;gt;&lt;span&gt;brother)
                        temp &lt;/span&gt;= temp-&amp;gt;&lt;span&gt;brother;
                    temp&lt;/span&gt;-&amp;gt;brother =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; findNode;
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    findNode&lt;/span&gt;-&amp;gt;child =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; findNode;
                }
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在兄弟节点插入&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt; (findNode-&amp;gt;&lt;span&gt;brother)
                {
                    TreeNode &lt;/span&gt;*tempNode = findNode-&amp;gt;&lt;span&gt;brother;
                    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (tempNode-&amp;gt;&lt;span&gt;brother)
                        tempNode &lt;/span&gt;= tempNode-&amp;gt;&lt;span&gt;brother;
                    tempNode&lt;/span&gt;-&amp;gt;brother =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent = tempNode-&amp;gt;&lt;span&gt;parent;
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;没有兄弟节点&lt;/span&gt;
                    findNode-&amp;gt;brother =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent = findNode-&amp;gt;&lt;span&gt;parent;
                }
            }
        }
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
        {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果没有找到插入位置  设计为插入在末尾&lt;/span&gt;
            std::cout &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;can not find the parent,insert the data in the end&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
            TreeNode &lt;/span&gt;*temp =&lt;span&gt; pRoot;
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (temp-&amp;gt;&lt;span&gt;child)
                temp &lt;/span&gt;= temp-&amp;gt;&lt;span&gt;child;
            temp&lt;/span&gt;-&amp;gt;child =&lt;span&gt; tempInsertNode;
            tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; temp;
        }
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;树为空的情况
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         TreeNode *temp = new TreeNode;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         temp-&amp;gt;data = insertData;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         temp-&amp;gt;parent = NULL;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         inNode-&amp;gt;child = inNode-&amp;gt;brother = NULL;&lt;/span&gt;
        pRoot =&lt;span&gt; tempInsertNode;
    }
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
typename MyTree&lt;/span&gt;&amp;lt;T&amp;gt;::TreeNode * MyTree&amp;lt;T&amp;gt;::_find(TreeNode *root, &lt;span&gt;const&lt;/span&gt; T&amp;amp;&lt;span&gt; findData)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (root)    &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;递归结束条件  传入的的指针为空  例如判断叶节点是  将叶子节点的子节点传入递归函数，
        不满足条件直接返回空&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;先判断本节点 在判断子节点  最后判断兄弟节点 找到直接返回 不继续找&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (root-&amp;gt;data == findData)        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断当前节点是否为 需要找的节点&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt;&lt;span&gt; root;
        TreeNode &lt;/span&gt;* temp = _find(root-&amp;gt;&lt;span&gt;child, findData);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (temp)
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; temp;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (temp = _find(root-&amp;gt;&lt;span&gt;brother, findData))
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; temp;
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; NULL;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;若没有找到  返回为空&lt;/span&gt;
&lt;span&gt;}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::_clear(TreeNode *&lt;span&gt;root)
{
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用递归删除所有节点   树的递归特性&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (root)
    {
        _clear(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
        _clear(root&lt;/span&gt;-&amp;gt;brother);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;先删除兄弟和先删除儿子一样&lt;/span&gt;
        &lt;span&gt;delete&lt;/span&gt;[]root;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;必须先删除兄弟和儿子后才能删除自己&lt;/span&gt;
        root = nullptr;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;所有内存被释放后 指针置空&lt;/span&gt;
&lt;span&gt;    }
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;&lt;span&gt;::clear()
{
    _clear(pRoot);  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;不需要再进行判空 ，_clear()中会判断&lt;/span&gt;
&lt;span&gt;}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
MyTree&lt;/span&gt;&amp;lt;T&amp;gt;::~&lt;span&gt;MyTree()
{
    clear();
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
MyTree&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;::MyTree()
{
    pRoot &lt;/span&gt;=&lt;span&gt; nullptr;
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;代码测试：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 无序树.cpp : 定义控制台应用程序的入口点。
&lt;/span&gt;&lt;span&gt;//
&lt;/span&gt;#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stdafx.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MyTree.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;iostream&amp;gt;
&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; _tmain(&lt;span&gt;int&lt;/span&gt; argc, _TCHAR*&lt;span&gt; argv[])
{
    MyTree&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; tree;
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tree:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;;

    tree.insertNode(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;;

     tree.insertNode(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    tree.insertNode(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;2&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;—&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;5&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;— —&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;9&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;  &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; endl;

    tree.insertNode(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;3&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;  &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;6&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;—&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;7&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;10&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;

     tree.insertNode(&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    tree.insertNode(&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;4&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;8&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;

    

    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;前序遍历：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    tree.preOrderPrint(tree.getTreeRoot());
    std::cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; std::endl;

    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;后序遍历：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    tree.posOrderPrint(tree.getTreeRoot());
    std::cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; std::endl;

    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;中序遍历：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    tree.inOrderPrint(tree.getTreeRoot());
    std::cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; std::endl;

    std::cin.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;测试结果：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1345649/201803/1345649-20180318221500335-1975294921.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



</description>
<pubDate>Sun, 18 Mar 2018 14:19:00 +0000</pubDate>
<dc:creator>daniumeng</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/daniumeng/p/8597862.html</dc:identifier>
</item>
<item>
<title>Java基础知识回顾之一  ----- 基本数据类型 - 虚无境</title>
<link>http://www.cnblogs.com/xuwujing/p/8597557.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuwujing/p/8597557.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;在开始工作至今，学习各种各样的技术之中发现自己的很多Java的基础知识都忘了⊙﹏⊙b汗。。。 而且越是学习越是发现Java基础的重要性，所以准备单独抽一下时间进行Java基础的重新学习。在重新学习的时候，对这些又有了不同的感悟，于是准备将这些都记载下来，并整理成博客，希望能够帮助那些需要的人。&lt;/p&gt;
&lt;h2 id=&quot;基本数据类型介绍&quot;&gt;基本数据类型介绍&lt;/h2&gt;
&lt;p&gt;基本数据类型主要有这几个:&lt;br/&gt;&lt;strong&gt;byte、short、int、long、float、double、char、boolean&lt;/strong&gt;&lt;br/&gt;可以分为三类:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;数值类型:&lt;strong&gt;byte、short、int、long、float、double&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;字符类型:&lt;strong&gt;char&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;布尔型:&lt;strong&gt;boolean&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;byte&quot;&gt;byte&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;byte是8位的数据类型，占用1个字节(8bit)，默认值是0，它的取值范围是&lt;strong&gt;(-2^7) ~ (2^7-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-128 ~ 127&lt;/strong&gt;之间，所以最大存储数据量是255;&lt;/li&gt;
&lt;li&gt;byte一般在大型数组中使用，来代替整数，因为byte变量占用的空间只有int的1/4。&lt;/li&gt;
&lt;li&gt;byte使用示例: byte a = 10,byte=-10。在使用byte数据类型的时候需要注意取值范围！！！&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;short&quot;&gt;short&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;short是16位的数据类型，占用2个字节，默认值是0，它的取值范围是&lt;strong&gt;(-2^15) ~(2^15-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-32768 ~ 32767&lt;/strong&gt;之间，所以最大数据存储量是65536;&lt;/li&gt;
&lt;li&gt;short虽然是int型变量所占空间的1/2，但是在实际中却很少用到。在大型数组中也可以节省空间。&lt;/li&gt;
&lt;li&gt;short使用示例:short a=100,short b=-200;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;int&quot;&gt;int&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;int是32位的数据类型，占用4个字节，默认值是0，它的取值范围是&lt;strong&gt;(-2^31) ~(2^31-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-2147483648 ~ 2147483647&lt;/strong&gt;之间，所以最大数据存储量是&lt;strong&gt;2^32-1&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;int是数据类型是整型，是我们在项目中用到最多的数据类型之一;&lt;/li&gt;
&lt;li&gt;int 使用示例:int a=1000,int b=-2000;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;long&quot;&gt;long&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;long是64位的数据类型，占用8个字节，默认值是0L，它的取值范围是&lt;strong&gt;(-2^63) ~(2^63-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-9223372036854775808 ~ 9223372036854775808&lt;/strong&gt;之间，所以最大数据存储量是&lt;strong&gt;2^64&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;long是数据类型是长整型，是我们在项目中用到最多的数据类型之一。在使用long类型的数据时最好在数值末尾带上大写的L！&lt;/li&gt;
&lt;li&gt;long 使用示例:long a=1000L,long b=-2000L;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;float&quot;&gt;float&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;float是32位的数据类型，占用4个字节，默认值是0，它的取值范围是&lt;strong&gt;3.4e-45 ~ 1.4e38&lt;/strong&gt; 之间;&lt;/li&gt;
&lt;li&gt;float是数据类型是单精度，在直接赋值时必须在数字后加上f或F。&lt;/li&gt;
&lt;li&gt;float使用示例:float a=10.25f, float b=-20.35F;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;double&quot;&gt;double&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;double是64位的数据类型，占用8个字节，默认值是0，它的取值范围是&lt;strong&gt;4.9e-324 ~ 1.8e308&lt;/strong&gt; 之间;&lt;/li&gt;
&lt;li&gt;double是数据类型是双精度，在直接赋值的时候最好加上D或d。&lt;/li&gt;
&lt;li&gt;double使用示例:double a=10.123d, double b= -10.25644D;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;boolean&quot;&gt;boolean&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;boolean是布尔类型，占用1个字节，只有两个值,false和true，默认值是 false。&lt;/li&gt;
&lt;li&gt;boolean只能用一种标志来记录 true或false，一般和 if 结合使用。&lt;/li&gt;
&lt;li&gt;boolean使用示例: boolean a=true，boolean b=false;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;char&quot;&gt;char&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;char是字符类型，占用2个字节，默认值为空，取值范围 为 &lt;strong&gt;0~65535&lt;/strong&gt;，也就是 &lt;strong&gt;\u0000 ~ \uffff&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;char数据类型可以储存任何字符。&lt;/li&gt;
&lt;li&gt;char 使用示例: char a=1，char b='A';&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;数值类型的级别从低到高分别为：&lt;br/&gt;&lt;strong&gt;byte,char,short(这三个平级)——&amp;gt;int——&amp;gt;float——&amp;gt;long——&amp;gt;double&lt;/strong&gt;&lt;br/&gt;其中由低级别转到高级别，是属于&lt;strong&gt;自动类型转换&lt;/strong&gt;，这点是由系统自动转换的。&lt;/p&gt;
&lt;p&gt;例如将int类型的数据转为float类型的数据。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int i=10;
float j=i;
System.out.println(&quot;i:&quot;+i+&quot;,j:&quot;+j);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;i:10,j:10.0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果由高级别转为低级别，则需要&lt;strong&gt;强制转换&lt;/strong&gt;，也就是强制类型转换。&lt;br/&gt;例如将int类型的数据转换为byte类型的数据。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int i=127;
int j=128;
byte bye=(byte)i;
byte bye2=(byte)j;
System.out.println(&quot;i:&quot;+i+&quot;,bye:&quot;+bye);
System.out.println(&quot;j:&quot;+j+&quot;,bye2:&quot;+bye2);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;i:127,bye:127
j:128,bye2:-128&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明:因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。所以在进行强制类型转换的时候，要注意取值范围！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;强制转换&lt;/strong&gt;的时候需要注意数据的精确度，否则可能会出现数据精确丢失。&lt;br/&gt;例如 double类型的数据转换为float类型数据。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;double d=10.1111115;
float f=(float) d;
System.out.println(&quot;f:&quot;+f+&quot;,d:&quot;+d);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;f:10.111112,d:10.1111115&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;了解了数据类型的级别之后，如果用不同的数据类型进行计算，那么最终的数据类型又是哪一种呢?&lt;br/&gt;这里我们用这几种来测试:&lt;br/&gt;1.byte 类型的数据 加 short 类型的数据;&lt;br/&gt;2.short 类型的数据 加 int 类型的数据;&lt;br/&gt;3.int 类型的数据 加 long 类型的数据;&lt;/p&gt;
&lt;p&gt;这里我们使用这个方法来获取最终的数据类型&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public static String getType(Object o){ 
        return o.getClass().toString(); 
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;代码:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;short a=1;
byte b=2;
int c = 3;
long d = 4;
System.out.println(getType(a));
System.out.println(getType(b));
System.out.println(getType(c));
System.out.println(getType(d));
System.out.println(getType(a+b));
System.out.println(getType(a+c));
System.out.println(getType(c+d));&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class java.lang.Short
class java.lang.Byte
class java.lang.Integer
class java.lang.Long
class java.lang.Integer
class java.lang.Integer
class java.lang.Long&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;看到结果是不是有点吃惊呢？那么是为什么呢?&lt;br/&gt;这里的不同的数值类型数据进行相加的时候，会自动转换为级别最高的那一个。&lt;br/&gt;那么short 类型的数据加 byte 类型的数据为什么是int类型呢？&lt;br/&gt;因为在java的世界里，如果比int类型小的类型做运算，java在编译的时候就会将它们统一强转成int类型。&lt;br/&gt;如果上述不好理解的，那么这里我们来做个实验测试下，通过结果来进行验证。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;short a=1,b=2;
byte c=3,d=4;
System.out.println(getType(a+b));
System.out.println(getType(c+d));
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class java.lang.Integer
class java.lang.Integer&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;那么这里可以得出结论，在数值类型中，若级别小于int，进行计算的时候，最终的数据类型会自动转换为int，如果高于int，最终数据结果会取其中最高的一个！&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 13:21:00 +0000</pubDate>
<dc:creator>虚无境</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuwujing/p/8597557.html</dc:identifier>
</item>
</channel>
</rss>