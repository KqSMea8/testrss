<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Mego(04) - NET简单实现EXCEL导入导出 - CarefreeXT</title>
<link>http://www.cnblogs.com/CarefreeXT/p/8988264.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CarefreeXT/p/8988264.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;相信做过信息系统的朋友都会遇到EXCEL导入导出的相关开发，做过不少EXCEL导入导出后总结起来大致有如下几种方式实现：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ADO.NET的OldDb或ODBC连接EXCEL使用DataTable来读取数据。&lt;/li&gt;
&lt;li&gt;Microsoft.Office.Interop.Excel用微软提供的组件操作WorkSheet对象。&lt;/li&gt;
&lt;li&gt;使用一些第三方的库比如Fast Excel、ExcelDataReader等等。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;今天要向大家介绍的更简单的方式来实现日常开发的各种EXCEL导入导出需求。&lt;/p&gt;
&lt;h2 id=&quot;简单导入&quot;&gt;简单导入&lt;/h2&gt;
&lt;p&gt;我们还是使用ADO.NET中的System.Data.OleDb做为底层，这种方式会很高效。先定义一个对象用来承载数据。&lt;br/&gt;&lt;code&gt;c# public class Product { public int Id { get; set; } public string Code { get; set; } public string Name { get; set; } public int Category { get; set; } public bool IsValid { get; set; } }&lt;/code&gt;c#&lt;br/&gt;然后声明一个连接字符串模型如下&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;private const string conStr =
    @&quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties='Excel 12.0 Xml;HDR=YES'&quot;;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后声明一个访问EXCEL的上下文&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;public class ExcelContext : DbContext
{
    public ExcelContext(string filename)
        : base(string.Format(conStr, filename), &quot;System.Data.OleDb.Excel&quot;)
    {
        this.Configuration.EnableAutoConversionStorageTypes = true;
    }
    public DbSet&amp;lt;Product&amp;gt; Products { get; set; }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;到这里准备工作就完成了，然后我们就能从数据源提取数据如下所示：&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;using (var context = new ExcelContext(&quot;sample.xls&quot;))
{
    var data = context.Products.ToArray();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;只要两行代码就能获取数据转成NET的对象，如果这里有一个能访问业务数据库的上下文就能直接导入数据，例如下面的临时代码：&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;using (var context = new OracleContext())
{
    context.Products.AddRange(data);
    context.Executor.Execute();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;到此我们都以一个很简单的方式就能完成从EXCEL提取并向数据库导入数据的工作。&lt;/p&gt;
&lt;h2 id=&quot;万能导入&quot;&gt;万能导入&lt;/h2&gt;
&lt;p&gt;也许你会考虑到导入EXCEL的格式会很多，不能每次都来定义一个上下文和数据对象类，这里我们可以定义一种通用方式来读取EXCEL。&lt;br/&gt;我们还是利用上面的连接字符串再定义一个通用的数据上下文。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;public class AnonymouExcelContext : DbContext
{
    public AnonymouExcelContext(string filename)
        : base(string.Format(conStr, filename), &quot;System.Data.OleDb.Excel&quot;)
    {
        this.Configuration.EnableAutoConversionStorageTypes = true;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接着我们利用C#的匿名对象来读取数据。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;using (var context = new ExcelContext(&quot;sample.xls&quot;))
{
    var item = new { Id = 1, Name = &quot;P&quot;, IsValid = false };
    var data = context.Set(item, &quot;Products&quot;).Where(a =&amp;gt; a.Id &amp;gt; 20).ToArray();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们先定义一个匿名对象，其实就是以匿名形式声明了将要导入数据的字段，使用匿名类型还一个好处就是可以进行LINQ操作，例如上面的代码。&lt;/p&gt;
&lt;h2 id=&quot;导出数据&quot;&gt;导出数据&lt;/h2&gt;
&lt;p&gt;导出EXCEL也是个比较麻烦的事，首先你需要写表头，然后再写入数据，可能在不同的场景下你需要重要写导出的代码这个在使用Microsoft.Office.Interop.Excel导出时特别严重。这里我们还是用上面的数据上下文来导出数据。&lt;br/&gt;首先我们先创建一些数据用于导出。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;Random r = new Random();
var products = Enumerable.Range(0, 1000).Select(i =&amp;gt; new Product()
{
    Id = i,
    Name = &quot;Product &quot; + i.ToString(),
    Category = r.Next(1, 10),
    Code = &quot;P&quot; + i.ToString(),
    IsValid = true
});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们需要创建一个空白的EXCEL文件，这里不声明代码了。&lt;br/&gt;最后就是写入表头和内容：&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;using (var context = new ExcelContext(filename))
{
    var operate = context.Database.Manager.CreateTable&amp;lt;Product&amp;gt;();
    context.Executor.Execute(operate);//创建表头
    context.Products.AddRange(products);
    context.Executor.Execute();//写入数据
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;同样的匿名对象也是同样可以如此操作，&lt;br/&gt;创建数据&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;Random r = new Random();
var items = Enumerable.Range(0, 1000).Select(i =&amp;gt; new
{
    Id = i,
    Name = &quot;Product &quot; + i.ToString(),
    Category = r.Next(1, 10),
    IsValid = true
}).ToArray();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;写入数据&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;using (var context = new ExcelContext(filename))
{
    var item = items[0];
    var operate = context.Database.Manager.CreateTable(item.GetType(),
        DbName.NameOnly(&quot;Sheet1$&quot;));
    context.Executor.Execute(operate);
    context.Set(item, &quot;[Sheet1$]&quot;).AddRange(items);
    context.Executor.Execute();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;复杂excel导入&quot;&gt;复杂EXCEL导入&lt;/h2&gt;
&lt;p&gt;通过上面的代码已经可以满足大多数的开发需求，不过业务需求永远无止境，不知道下面EXCEL导入案例大家是否有遇到。&lt;br/&gt;客户需要一次导入上万条订单加明细数据，在正式导入到数据库之前还要在系统界面上浏览确认及修改，确认无误后才发命令写入到数据库。（最麻烦的是这是个基于WEB的系统）。&lt;/p&gt;
&lt;p&gt;上传EXCEL是少不了的，但是浏览修改会麻烦一点，不过基于良好的用户体验需要把EXCEL保存在服务器的临时位置，然后分页向用户显示数据并提供修改功能，最后当用户确认后才提交到数据库。&lt;br/&gt;首先我们先创建一个相对复杂的数据上下文。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;internal class ComplexContext : DbContext
{
    public ComplexContext(string filename)
        : base(string.Format(conStr, filename), &quot;System.Data.OleDb.Excel&quot;)
    {
        this.Configuration.EnableAutoConversionStorageTypes = true;
    }
    public DbSet&amp;lt;Order&amp;gt; Orders { get; set; }
    public DbSet&amp;lt;OrderDetail&amp;gt; OrderDetails { get; set; }
    public DbSet&amp;lt;Customer&amp;gt; Customers { get; set; }
    public DbSet&amp;lt;Product&amp;gt; Products { get; set; }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里忽略数据类的定义，这里的数据间关系是订单有多个明细，订单关系一个客户，明细关系一个产品，对于EXCEL而言这已经很复杂了。&lt;br/&gt;不过在这里你可以很容易的查询所有订单及订单明细，过滤加分页向用户显示数据，如下所示&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;using (var context = new ComplexContext(&quot;sample.xls&quot;))
{
    var query = from a in context.Orders.Include(a=&amp;gt;a.Details)
                where a.Id &amp;gt; 4
                select a;
    var items = query.Take(10).Skip(20).ToArray();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们直接上个图来证明下数据的正确性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1364581/201805/1364581-20180503233943450-954052158.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;以上代码都已上传&lt;a href=&quot;https://github.com/CarefreeXT/Mego_Samples/tree/master/ExcelImport&quot;&gt;Github&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;以上都是基于&lt;a href=&quot;https://github.com/CarefreeXT/Mego&quot;&gt;Mego框架&lt;/a&gt;实现的对EXCEL操作，当然&lt;a href=&quot;https://github.com/CarefreeXT/Mego&quot;&gt;Mego&lt;/a&gt;还支持许多数据库，欢迎大家试用。&lt;/p&gt;
</description>
<pubDate>Thu, 03 May 2018 15:42:00 +0000</pubDate>
<dc:creator>CarefreeXT</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CarefreeXT/p/8988264.html</dc:identifier>
</item>
<item>
<title>线程的基本操作 - 大道方圆</title>
<link>http://www.cnblogs.com/xdecode/p/8988246.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xdecode/p/8988246.html</guid>
<description>&lt;h4&gt;目录&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;线程状态切换&lt;/li&gt;
&lt;li&gt;终止线程(stop)&lt;/li&gt;
&lt;li&gt;中断线程(interrupt)&lt;/li&gt;
&lt;li&gt;挂起(suspend) 和 继续执行(resume)&lt;/li&gt;
&lt;li&gt;等待线程结束(join) 和 谦让(yield)&lt;/li&gt;
&lt;li&gt;sleep&lt;/li&gt;
&lt;li&gt;线程优先级&lt;/li&gt;
&lt;li&gt;守护线程&lt;/li&gt;
&lt;li&gt;线程的同步操作(synchronized, wait, notify)&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;线程状态切换&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1285727/201804/1285727-20180425235510159-968925702.jpg&quot; alt=&quot;&quot; width=&quot;496&quot; height=&quot;220&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;终止线程(stop)&lt;/h4&gt;
&lt;p&gt;不推荐使用Thread.stop(), 他会释放所有的monitor, 导致数据不一致.&lt;/p&gt;
&lt;p&gt;假设有一条数据库记录, 有两个字段ID, Name.&lt;/p&gt;
&lt;p&gt;为了保持同一条记录ID, Name一致, 会在读写该对象的时候加锁. &lt;/p&gt;
&lt;p&gt;线程A获取到锁, 开始写操作, 写完ID = 1, 还没写Name, 被强制stop了, 释放掉了锁.&lt;/p&gt;
&lt;p&gt;线程B拿到锁, 读取对象, 以为是线程安全的, 实际上数据是错的, 只有ID有值, Name为null.&lt;/p&gt;
&lt;h4&gt;中断线程(interrupt)&lt;/h4&gt;
&lt;p&gt;可以通过调用thread.interrupt()对线程进行中断操作.&lt;/p&gt;
&lt;p&gt;当线程收到interrupt信号后, 可能会有两种场景:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;线程处于运行状态 : 将isinterrupt置为true &lt;/li&gt;
&lt;li&gt;线程处于阻塞状态 : 抛出InterruptedException, isinterrupt为false.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;线程有两个可以判断是否中断的方法, 如下所示.&lt;/p&gt;
&lt;p&gt;使用静态Thread.interrupted, &lt;strong&gt;会清除当前中断状态&lt;/strong&gt;, 而thread.isInterrupted则不会清除状态.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 中断线程 &lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Thread.interrupt() 
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 判断是否被中断 &lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; Thread.isInterrupted() 
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 判断是否被中断，并清除当前中断状态isinterrupt&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; Thread.interrupted() 
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;          &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;              &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (Thread.currentThread().isInterrupted()) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;                  System.out.println(&quot;Interruted!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                  &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;             }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;             Thread.yield();
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;         }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;     }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;  
&lt;span&gt;11&lt;/span&gt;      t1.interrupt();
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;挂起(suspend) 和 继续执行(resume)&lt;/h4&gt;
&lt;p&gt;@Deprecated不推荐使用, 原因是如果在多线程环境中, 假设多个线程调用线程A的suspend和resume.&lt;/p&gt;
&lt;p&gt;如果线程B先调用了threadA.suspend(), 线程C再调用threadA.resume(), 则没问题.&lt;/p&gt;
&lt;p&gt;如果线程B先调用了threadA.resume(), 线程C再调用threadA.suspend(), 这个时候将导致线程A处于冻结状态, 其持有的锁无法释放.&lt;/p&gt;
&lt;h4&gt;等待线程结束(join) 和 谦让(yield)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;yield&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以让当前线程暂停一下, 类似于sleep, 但是他不会阻塞该线程, 只是从运行状态切换为就绪状态.&lt;/p&gt;
&lt;p&gt;当yeild执行后, 优先级大于等于当前线程优先级的所有线程都会有竞争CPU执行的机会, 他自身也会参与竞争.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;join&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该操作会使得线程执行存在等待, 如果A线程调用B线程的join操作, 则A会等待B执行完成后, 才会继续往下执行.&lt;/p&gt;
&lt;p&gt;线程B执行完毕后, 系统会调用notifyAll()来通知所有等待线程.&lt;/p&gt;
&lt;p&gt;join也可以指定时间参数, 等待N秒后, 无论目标线程是否完成, 当前线程都会继续往下执行.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;join的本质, 处于等待状态&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;      &lt;span&gt;while&lt;/span&gt;&lt;span&gt;(isAlive()){
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;          wait(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;      }
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;sleep&lt;/h4&gt;
&lt;p&gt;sleep相对容易理解, 他会使得&lt;strong&gt;当前Thread&lt;/strong&gt;进入阻塞状态, 同时不释放该线程占用的锁.&lt;/p&gt;
&lt;h4&gt;守护线程&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;在后台默默地完成一些系统性的服务，比如垃圾回收线程、JIT线程就可以理解为守护线程&lt;/li&gt;
&lt;li&gt;当一个Java应用内，只有守护线程时，Java虚拟机就会自然退出&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在一个大型系统中, 应当在new Thread的时候给他加上是否为守护线程, 以及线程名称.&lt;/p&gt;
&lt;p&gt;防止系统退出的时候, 出现一堆Thread未关闭阻塞退出.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;         Thread t= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DaemonT(); 
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;         t.setName(&quot;DaemonT&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         t.setDaemon(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;); 
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;         t.start();
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;线程优先级&lt;/h4&gt;
&lt;p&gt;高优先级的线程更容易在竞争中获胜, 但并不是绝对的.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     Thread high=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HightPriority();
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     LowPriority low=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; LowPriority();
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;high.setPriority(Thread.MAX_PRIORITY);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;low.setPriority(Thread.MIN_PRIORITY);
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;low.start();
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     high.start();
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;线程的同步操作&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;synchronized&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;指定加锁对象：对给定对象加锁，进入同步代码前要获得给定对象的锁&lt;/li&gt;
&lt;li&gt;直接作用于实例方法：相当于对当前实例加锁，进入同步代码前要获得当前实例的锁&lt;/li&gt;
&lt;li&gt;直接作用于静态方法：相当于对当前类加锁，进入同步代码前要获得当前类的锁&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Object.wait 和 Object.notify notifyAll&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;三个方法都是&lt;strong&gt;Object对象&lt;/strong&gt;的方法, 需要在synchronized语句块内使用.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;wait&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使当前线程暂停执行并释放对象锁标示, 让其他线程可以进入synchronized数据块, 当前线程被放入对象等待池中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;notify&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从对象的等待池中移走一个任意的线程并放到锁标志等待池中, 只有锁标志等待池中线程能够获取锁标志;&lt;/p&gt;
&lt;p&gt;如果锁标志等待池中没有线程，则notify()不起作用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;notifyAll&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从对象等待池中移走所有等待那个对象的线程并放到锁标志等待池中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; SimpleWait {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Object lock = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Object();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; T1 &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Thread {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        @Override
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (lock) {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                 System.out.println(&quot;T1 start!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;                 &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                     System.out.println(&quot;T1 wait for lock!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;                    lock.wait();
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (InterruptedException e) {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                    e.printStackTrace();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 2s后, T2释放锁, T1拿到锁才开始执行wait后的操作&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;                 System.out.println(&quot;T1 end!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;             }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;     }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;      &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; T2 &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Thread {
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;  
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;         @Override
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;          &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;             &lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (lock) {
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                  System.out.println(&quot;T2 start, notify others!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                 lock.notify();
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                  System.out.println(&quot;T2 end!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                 &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                      Thread.sleep(2000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                  } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (InterruptedException e) {
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                     e.printStackTrace();
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;                 }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;             }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;     }
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;  
&lt;span&gt;40&lt;/span&gt;      &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         T1 t1 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; T1();
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;          T2 t2 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; T2();
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;         t1.start();
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;         t2.start();
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;     }
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;  }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1285727/201804/1285727-20180426002449582-1498477528.jpg&quot; alt=&quot;&quot; width=&quot;704&quot; height=&quot;302&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下一篇博文我们将讲述Java内存模型&lt;/p&gt;
</description>
<pubDate>Thu, 03 May 2018 15:38:00 +0000</pubDate>
<dc:creator>大道方圆</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xdecode/p/8988246.html</dc:identifier>
</item>
<item>
<title>百度编辑器上传视频音频的bug - 天高任鸟飞吧</title>
<link>http://www.cnblogs.com/beyonds/p/8988207.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/beyonds/p/8988207.html</guid>
<description>&lt;p&gt;&lt;span&gt;前言：UEditor是由百度web前端研发部开发所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点，开源基于MIT协议，允许自由使用和修改代码，百度Ueditor &lt;span&gt;支持多种后台语言上传使用，&lt;/span&gt;&lt;span&gt;php,java,net,nodejs&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;官网没有提供&lt;/span&gt;nodejs &lt;span&gt;的后台配置，如果使用&lt;/span&gt;&lt;span&gt;koa&lt;/span&gt; &lt;span&gt;框架可以参考这个模块：&lt;/span&gt;&lt;a href=&quot;https://www.npmjs.com/package/ueditor-koa&quot;&gt;https://www.npmjs.com/package/ueditor-koa&lt;/a&gt;；上传图片，视频，音频等基本文件的功能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;百度Ueditor 下载地址：&lt;a href=&quot;http://ueditor.baidu.com/website/download.html&quot;&gt;&lt;span&gt;http://ueditor.baidu.com/website/download.html&lt;/span&gt;&lt;/a&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;本文不介绍ueditor 的具体用法配置，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;主要解决问题：&lt;span&gt;视频和音频上传显示不正确的问题&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;span&gt;前端问题，确保后台正确上传配置&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;第一个问题&lt;/span&gt;：上传视频不显示&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;     &lt;span&gt;首先我们来上传一个视频，如图&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503225202174-1604136864.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt; 发现视频是成功上传了，说明后台已经成功返回数据了，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;span&gt;点击确认后，发现视频并没有成功插入编辑器中，发现显示的是一张图片，并不是视频&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503225433822-644171912.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;　&lt;span&gt;打开控制器，审查元素看，插入的元素标签是&lt;/span&gt;img ,&lt;span&gt;不是&lt;/span&gt;&lt;span&gt;vidoe,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503225548282-511742264.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　&lt;span&gt;到这一步，发现问题的所在了，接下来就是要解决问题了&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;span&gt; &lt;span&gt;第一：找到&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;ueditor.config.js&lt;/span&gt; &lt;span&gt;这个文件，大概在&lt;/span&gt;&lt;span&gt;365&lt;/span&gt;&lt;span&gt;行这 个&lt;/span&gt; &lt;span&gt;whitList&lt;/span&gt; &lt;span&gt;属性&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503230130733-589019899.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　　&lt;span&gt;在whitlList 的属性里面添加以下代码 &lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  source: [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;],
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;  embed: [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pluginspage&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;align&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;wmode&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;play&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;autoplay&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;loop&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;menu&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;allowscriptaccess&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;allowfullscreen&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;controls&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;preload&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;],
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;  iframe: [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;max-width&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;max-height&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;align&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;frameborder&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;allowfullscreen&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] 
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;　   　&lt;span&gt;如图所示&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　    &lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503230349381-1420990483.png&quot; alt=&quot;&quot; width=&quot;1061&quot; height=&quot;272&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　   &lt;span&gt;&lt;span&gt;第二&lt;/span&gt; &lt;span&gt;、找到&lt;/span&gt;&lt;span&gt;ueditor.all.js&lt;/span&gt; &lt;span&gt;这文件  ，搜索这个&lt;/span&gt;&lt;span&gt;me.commands[&quot;insertvideo&quot;]&lt;/span&gt; &lt;span&gt;方法，大概在&lt;/span&gt;17780&lt;span&gt;行；找到&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;   　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503230611795-1630758021.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  　&lt;span&gt;改为：&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;将&lt;/span&gt;image &lt;span&gt;改为&lt;/span&gt; &lt;span&gt;video&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　 &lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503230706724-1649511596.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;源码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;,vi,len = videoObjs.length;i&amp;lt;len;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     vi =&lt;span&gt; videoObjs[i];
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     cl = (type == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;upload&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; ? &lt;span&gt;'&lt;/span&gt;&lt;span&gt;edui-upload-video video-js vjs-default-skin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:&lt;span&gt;'&lt;/span&gt;&lt;span&gt;edui-faked-video&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     html.push(creatInsertStr( vi.url, vi.width || &lt;span&gt;420&lt;/span&gt;,  vi.height || &lt;span&gt;280&lt;/span&gt;, id + i, &lt;span&gt;null&lt;/span&gt;, cl, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;video&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　完成到一步，我们重新上传视频，这回应该可以正常显示视频&lt;/span&gt; &lt;span&gt;了&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503231132878-2110341532.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　 &lt;span&gt;我们&lt;span&gt;点击&lt;/span&gt;html &lt;span&gt;查看源码，似乎也正常，&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503231220563-20251780.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;但是，再点击显示回来，发现视频又变图片了，但是图片也不显示（占位）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　 &lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503231255898-2016804263.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　 &lt;span&gt;发现bug,继续修改&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;第三：在&lt;/span&gt;&lt;span&gt;ueditor.all.js&lt;/span&gt; &lt;span&gt;这文件找到 &lt;/span&gt;&lt;span&gt;me.commands[&quot;insertvideo&quot;] &lt;/span&gt;&lt;span&gt;方法，大概在&lt;/span&gt;17780&lt;span&gt;行；找到：注悉以下代码；如图所示&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503231503795-1791985030.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　这样基本解决视频上传的问题了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　个人还有建议修改：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　在&lt;/span&gt;ueditor.all.js &lt;span&gt;这文件，找到&lt;/span&gt;UE.plugins['video'] &lt;span&gt;这个方法，大概在&lt;/span&gt;17632&lt;span&gt;行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　将  去掉：type=&quot;application/x-shockwave-flash&quot; class=&quot; + classname + &quot;pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot;' &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503231619061-53715063.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;至此，视频的问题&lt;/span&gt;ok &lt;span&gt;了&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;span&gt;第二个问题：&lt;span&gt;上传本地音频和上传音频不显示&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;&lt;span&gt;主要修改支持本地上传&lt;/span&gt;mp3 &lt;span&gt;音频问题&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;非常简单，本地上传音频也是&lt;/span&gt; &lt;span&gt;在上传视频面板那里上传，所以只需判断文件类型就可以了&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在 &lt;/span&gt;&lt;span&gt;ueditor.all.js &lt;/span&gt; &lt;span&gt;这文件 找到 &lt;/span&gt;&lt;span&gt;UE.plugins['video'] &lt;/span&gt; &lt;span&gt;这个方法，大概在&lt;/span&gt;17632&lt;span&gt;行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;将原来的：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503232137251-2140916426.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;改为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503232159024-120358784.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;源码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;case&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;video&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;       &lt;span&gt;var&lt;/span&gt; ext = url.substr(url.lastIndexOf(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;) + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; (ext == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ogv&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;) ext = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ogg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; (ext == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mp3&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;            str = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;audio&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + (id ? &lt;span&gt;'&lt;/span&gt;&lt;span&gt; id=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + id + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; : &lt;span&gt;''&lt;/span&gt;) + &lt;span&gt;'&lt;/span&gt;&lt;span&gt; class=&quot; audio-js&quot; &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + (align ? &lt;span&gt;'&lt;/span&gt;&lt;span&gt; style=&quot;float:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + align + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; : &lt;span&gt;''&lt;/span&gt;) +&lt;span&gt;'&lt;/span&gt;&lt;span&gt; controls preload=&quot;none&quot; width=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + width + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; height=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + height + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; src=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + url + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&amp;gt;&quot; /&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;       } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;              str = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;video&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + (id ? &lt;span&gt;'&lt;/span&gt;&lt;span&gt; id=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + id + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; : &lt;span&gt;''&lt;/span&gt;) + (align ? &lt;span&gt;'&lt;/span&gt;&lt;span&gt; style=&quot;float:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + align + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; : &lt;span&gt;''&lt;/span&gt;) + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;controls width=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + width + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; height=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + height + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; src=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + url + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; data-setup=&quot;{}&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;source src=&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + url + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; type=&quot;video/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + ext + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot; /&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;     }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;      &lt;span&gt;break&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　到这里修改ok ,&lt;span&gt;上传一个&lt;/span&gt;mp3 &lt;span&gt;文件：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1143388/201805/1143388-20180503232442509-567753139.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; 　　&lt;span&gt;至此，音频的本地上传也解决了，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　但是发现，内置的在线音频插入的音频地址都是报错的，不知道为什么了。有哪位大神能解决这问题，希望留言，跪谢&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;完结。。。。谢谢&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 03 May 2018 15:36:00 +0000</pubDate>
<dc:creator>天高任鸟飞吧</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/beyonds/p/8988207.html</dc:identifier>
</item>
<item>
<title>解决：MySQL 报错：1045 - Access denied for user 'root'@'localhost'(using password YES) - compassblog</title>
<link>http://www.cnblogs.com/compassblog/p/8988148.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/compassblog/p/8988148.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/5/3/163268d5a4749f27?w=5184&amp;amp;h=3456&amp;amp;f=jpeg&amp;amp;s=1131102&quot;/&gt;&lt;/p&gt;

&lt;p&gt;今年疯狂迷上了开源，只要看到好的开源项目，就会不顾一切一股脑扎进去研究，五一期间发现一个很好的关于众筹的开源项目，但不巧，这个项目竟然是 PHP 写的，没学过 PHP，自然对这个开源项目毫无头绪了，但我竟然为了这个项目，毅然决定入坑 PHP，于是就出事了...&lt;/p&gt;
&lt;p&gt;说时迟那时快， 2 小时入门 PHP，2 小时入门 ThinkPHP，鉴于我一直在研究 Java 的原因，所以不费吹灰之力就顺利入坑。通过了解，PHP 开发必备环境是 PHP、Apache、MySQL以及一个好用的 IDE ，IDE 还是很好找的，我选择了 JetBrains 的 PhpStorm，而其他环境就是集全部功能于一身的 WampServer 了，安装完准备建数据库建表，打开 Navicat ，错误开始...&lt;/p&gt;


&lt;pre&gt;
&lt;code&gt;MySQL 报错：1045- Access denied for user 'root'@'localhost'(using password YES)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/5/3/163266e593e0c0d0?w=483&amp;amp;h=135&amp;amp;f=png&amp;amp;s=6719&quot;/&gt;&lt;/p&gt;


&lt;p&gt;安装了 WampServer 这个集 PHP 开发环境于一身的神器后，里面的 MySQL 网页管理软件 phpMyAdmin 使得数据库的 root 用户权限发生改变，也可以说是由于两者的密码不一致导致密码错乱有了这个错误（我自己理解），因为 phpMyAdmin 安装完成后的默认密码是空的。&lt;/p&gt;

&lt;p&gt;直接充值密码即可解决数据这个报错问题。&lt;/p&gt;
&lt;p&gt;首先，停止掉数据的运行，这个我相信大家都可以做到了，可以直接从管理服务程序中停止，也可以直接在 cmd 命令窗口输入命令 net stop mysql 来停止。&lt;/p&gt;
&lt;p&gt;然后进入 MySQL 的安装路径，找到并打开 my.ini 文件，找到 [mysqld] 字段，在这个字段下面增加下面这个语句：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;skip_grant_tables&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;紧接着重启数据库，这个我相信大家也可以做到了，可以直接在管理服务程序中开启，也可以直接在 cmd 命令窗口中输入命令 net start mysql 来开启，进而在命令窗口执行一下命令，重置密码：&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;update user set password='root' where user='root'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当然，我是直接将密码重置为 root，反正这个密码大家自定义就好，不过要记住密码。&lt;/p&gt;
&lt;p&gt;最后就是再次停止数据库的运行，返回前面提到的 my.ini 文件去掉 skip_grant_tables 字段后保存，再次重启数据库就可以成功解决这个 MySQL 的报错了。&lt;/p&gt;

&lt;p&gt;我在第四部完美的解决了命令窗口启动进入数据的这种报错，然后当我重新进入 Navicat 打开本地建立的连接的时候，继续报同样的错误，也就是说错误并没有解决，很纳闷，为啥命令行可以顺利操作数据库不报错，进入 Navicat 客户端就报错呢？&lt;/p&gt;
&lt;p&gt;折腾半天，发现在 root 权限错乱而重置密码之后，在 Navicat 中已经建立的连接是不可逆的。&lt;/p&gt;
&lt;p&gt;折腾半天，发现解决办法也很简单，要么删除连接后重新建一个连接，当然，删除连接后并不会已经建立的数据库，要么重装 Navicat ，至于选哪一种，自行选择，我都试过，都可以成功解决 Navicat 报这个错误。&lt;/p&gt;

&lt;p&gt;当本地的错误完美解决之后，我打开 phpMyAdmin 网页，竟然报了一个与前面的错误很相似却又有异的错误，错误如下：&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;1045- Access denied for user 'root'@'localhost'(using password NO)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;当我把本地的 phpMyAdmin 配置文件中的密码也设置为 MySQL 数据库的密码后，打开后还是继续报同样的错误，不断打开不断报错，又折腾半天，最后在 StackOverFlow 上找到了解决办法：直接清除浏览器的 Cookie 缓存就可以解决这个问题。也就是说，我本地的配置是没有任何错误的，而打开网页继续报错的原因是之前报错时浏览器已经把 phpMyAdmin 的登录密码缓存到了 Cookie之中。&lt;/p&gt;
&lt;p&gt;好了，所有问题完美解决，特此记录。&lt;/p&gt;
&lt;p&gt;解决完这个问题我们明白，如果遇到某些错误精心想想，而不是一股脑扎进错误之中研究错误，可能半小时就可以解决问题了，也不至于折腾一个半天后又折腾一个半天咯。&lt;/p&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;p&gt;-----------------------------------------&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/5/3/163268c1e35f699c?w=258&amp;amp;h=258&amp;amp;f=jpeg&amp;amp;s=27341&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 03 May 2018 15:19:00 +0000</pubDate>
<dc:creator>compassblog</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/compassblog/p/8988148.html</dc:identifier>
</item>
<item>
<title>CSS3实现多样的边框效果 - laixiangran</title>
<link>http://www.cnblogs.com/laixiangran/p/8988090.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/laixiangran/p/8988090.html</guid>
<description>&lt;h2 id=&quot;半透明边框&quot;&gt;半透明边框&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实现效果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/5ABB2565211A4895A86A790D1BAF6E8F?method=download&amp;amp;shareKey=adf96734e2f24ee661986322fb29f6a0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
你能看到半透明的边框吗？
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;div &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/* 关键代码 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;rgba(255&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;.5)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;background:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;background-clip:&lt;/span&gt; padding-box&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;co&quot;&gt;/* 其它样式 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;20em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;padding:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2em&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;font:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100%&lt;/span&gt;/&lt;span class=&quot;dt&quot;&gt;1.5&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;实现要点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;设置边框为半透明，这是还看不到半透明边框，因为默认情况下，背景会延伸到边框所在的区域下层，也就是背景是被边框的外沿框裁切掉。&lt;/li&gt;
&lt;li&gt;通过设置 &lt;code&gt;background-clip: padding-box&lt;/code&gt; （初始值是 border-box） 让背景不要延伸到边框所在的区域下层，也就是让内边距的外沿来裁切背景。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;多重边框&quot;&gt;多重边框&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实现效果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/AF4ECF0A693F42D1AFEEDA7DC9F2EC03?method=download&amp;amp;shareKey=adf96734e2f24ee661986322fb29f6a0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;co&quot;&gt;/* box-shadow 实现方案 */&lt;/span&gt;
div &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/* 关键代码 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;box-shadow:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#655&lt;/span&gt;,
            &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;15px&lt;/span&gt; deeppink,
            &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;15px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;rgba(0&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;.6)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;co&quot;&gt;/* 其它样式 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;60px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;25px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;background:&lt;/span&gt; yellowgreen&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;/* border/outline 实现方案 */&lt;/span&gt;
div &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/* 关键代码 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#655&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;outline:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; deeppink&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;co&quot;&gt;/* 其它样式 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;60px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;25px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;background:&lt;/span&gt; yellowgreen&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;实现要点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;box-shadow&lt;/code&gt; 实现方案使用的是 box-shadow 的第四个参数（扩张半径）。一个正值的扩张半径加上两个为零的偏移量以及为零的模糊值，得到的“投影”其实就像一道实线边框。而借助 box-shadow 支持逗号分割语法，可创建任意数量的投影，因此我们就可实现多重边框效果。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;border/outline&lt;/code&gt; 实现方案是使用 border 设置一层边框，再使用 outline 设置一层边框。这个方案可实现虚线边框，但它只能实现两层边框。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;边框内圆角&quot;&gt;边框内圆角&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实现效果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/893643A1DAEB481186D5BB2BDD705D52?method=download&amp;amp;shareKey=adf96734e2f24ee661986322fb29f6a0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;我有一个漂亮的内圆角&lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;div &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;outline:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;.6em&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#655&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;box-shadow:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;.4em&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#655&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;/* 关键代码 */&lt;/span&gt;
    
    &lt;span class=&quot;kw&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;10em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;border-radius:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;.8em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;padding:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;background:&lt;/span&gt; tan&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;font:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100%&lt;/span&gt;/&lt;span class=&quot;dt&quot;&gt;1.5&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;实现要点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;outline 不会跟着元素的圆角走（因而显示出直角），但 box-shadow 确实会的，因此，将两者叠加到一起，box-shadow（其扩张值大概等于 border-radius 值的一半） 会刚好填补 outline 和容器圆角之间的空隙，因此可达到我们想要的效果。&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Thu, 03 May 2018 15:09:00 +0000</pubDate>
<dc:creator>laixiangran</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/laixiangran/p/8988090.html</dc:identifier>
</item>
<item>
<title>前端技术之_CSS详解第三天 - 我举个栗子</title>
<link>http://www.cnblogs.com/wanghui1234/p/8987973.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wanghui1234/p/8987973.html</guid>
<description>&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2.1 同一个标签，携带了多个类名，有冲突：&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        .spec2&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;
        }&lt;span&gt;
        .spec1&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;red&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;p class=&quot;spec1 spec2&quot;&amp;gt;我是什么颜色？&amp;lt;/p&amp;gt;
    &amp;lt;p class=&quot;spec2 spec1&quot;&amp;gt;我是什么颜色？&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     &amp;lt;p class=&quot;spec1 spec2&quot;&amp;gt;我是什么颜色？&amp;lt;/p&amp;gt;

2     &amp;lt;p class=&quot;spec2 spec1&quot;&amp;gt;我是什么颜色？&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     .spec2&lt;/span&gt;{&lt;span&gt;
2     color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;&lt;span&gt;
3     &lt;/span&gt;}&lt;span&gt;
4     .spec1&lt;/span&gt;{&lt;span&gt;
5     color&lt;/span&gt;:&lt;span&gt;red&lt;/span&gt;;&lt;span&gt;
6     &lt;/span&gt;}&lt;span&gt;
7     &amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;红色的。因为&lt;/span&gt;&lt;span&gt;css中red写在后面。&lt;/span&gt;和在标签中的挂类名的书序无关，只和&lt;/span&gt;css的顺序有关：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221408094-1946769166.png&quot; alt=&quot;&quot; width=&quot;735&quot; height=&quot;420&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2.2 !important标记&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        p&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;red !important&lt;/span&gt;;&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 100px &lt;/span&gt;;
        }&lt;span&gt;
        #para1&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 50px&lt;/span&gt;;
        }&lt;span&gt;
        .spec&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;green&lt;/span&gt;;&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 20px&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;p id=&quot;para1&quot; class=&quot;spec&quot;&amp;gt;文字&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     &amp;lt;style type=&quot;text/css&quot;&amp;gt;
2     p&lt;/span&gt;{&lt;span&gt;
3    color&lt;/span&gt;:&lt;span&gt;red !important&lt;/span&gt;;&lt;span&gt;
4     &lt;/span&gt;}&lt;span&gt;
5     #para1&lt;/span&gt;{&lt;span&gt;
6     color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;&lt;span&gt;
7     &lt;/span&gt;}&lt;span&gt;
8     .spec&lt;/span&gt;{&lt;span&gt;
9     color&lt;/span&gt;:&lt;span&gt;green&lt;/span&gt;;&lt;span&gt;
10     &lt;/span&gt;}&lt;span&gt;
11     &amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 k:v !important;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;来给一个属性提高权重。这个属性的权重就是无穷大。important是英语里面的“重要的”的意思。我们可以通过语法：&lt;/p&gt;
&lt;p&gt;一定要注意语法：&lt;/p&gt;
&lt;p&gt;正确的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 font-size:60px !important;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 错误的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 font-size:60px; !important;     → 不能把!important写在外面
1 font-size:60px important;      →  不能忘记感叹号&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;!important需要强调3点：&lt;/p&gt;
&lt;p&gt;1） !important提升的是一个属性，而不是一个选择器&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     p&lt;/span&gt;{&lt;span&gt;
2     color&lt;/span&gt;:&lt;span&gt;red !important&lt;/span&gt;;&lt;span&gt;   → 只写了这一个!important，所以就字体颜色属性提升权重
3     font-size&lt;/span&gt;:&lt;span&gt; 100px &lt;/span&gt;;&lt;span&gt;      → 这条属性没有写!important，所以没有提升权重
     &lt;/span&gt;}&lt;span&gt;
5     #para1&lt;/span&gt;{&lt;span&gt;
6     color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;&lt;span&gt;
7    font-size&lt;/span&gt;:&lt;span&gt; 50px&lt;/span&gt;;&lt;span&gt;
8     &lt;/span&gt;}&lt;span&gt;
9     .spec&lt;/span&gt;{&lt;span&gt;
10     color&lt;/span&gt;:&lt;span&gt;green&lt;/span&gt;;&lt;span&gt;
11     font-size&lt;/span&gt;:&lt;span&gt; 20px&lt;/span&gt;;&lt;span&gt;
12     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;所以，综合来看，字体颜色是&lt;/span&gt;red（听important的）；字号是50px（听id的）;&lt;/p&gt;
&lt;p&gt;2） !important无法提升继承的权重，该是0还是0&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如&lt;/span&gt;HTML结构：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     &amp;lt;div&amp;gt;
2     &amp;lt;p&amp;gt;哈哈哈哈哈哈哈哈&amp;lt;/p&amp;gt;
3     &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     div&lt;/span&gt;{&lt;span&gt;
2     color&lt;/span&gt;:&lt;span&gt;red !important&lt;/span&gt;;&lt;span&gt;
3     &lt;/span&gt;}&lt;span&gt;
4     p&lt;/span&gt;{&lt;span&gt;
5     color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;&lt;span&gt;

6     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;由于&lt;/span&gt;&lt;span&gt;div是通过继承性来影响文字颜色的，所以!important无法提升它的权重，权重依然是0。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;red !important&lt;/span&gt;;
        }&lt;span&gt;
        p&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;blue&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;哈哈哈哈哈哈哈哈&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;有&lt;/span&gt;CSS样式：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;干不过&lt;/span&gt;p标签，因为p标签是实实在在选中了，所以字是蓝色的（以p为准）。&lt;/p&gt;
&lt;p&gt;3）!important不影响就近原则&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;red !important&lt;/span&gt;;
        }&lt;span&gt;
        ul&lt;/span&gt;{&lt;span&gt;
            color&lt;/span&gt;:&lt;span&gt;green&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;猜猜我是什么颜色&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;如果大家都是继承来的，按理说应该按照&lt;/span&gt;“就近原则”，那么important能否影响就近原则呢？&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答案是：不影响。远的，永远是远的。不能给远的写一个&lt;/span&gt;important，干掉近的。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;! important做站的时候，不允许使用。因为会让css写的很乱。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;现在，我们知道层叠性能比较很多东西：&lt;/p&gt;
&lt;p&gt;选择器的写法权重，谁离的近，谁写在下面。&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2.3 权重计算的总结&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;还要知道   ! important 的性质。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221530514-190976634.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3.1 盒子中的区域&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221552378-1366463622.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt;1px solid red&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;一个盒子中主要的属性就&lt;/span&gt;5个：width、height、padding、border、margin。&lt;/p&gt;
&lt;p&gt;width是“宽度”的意思，CSS中width指的是内容的宽度，而不是盒子的宽度。&lt;/p&gt;
&lt;p&gt;height是“高度”的意思，CSS中height指的是内容的高度，而不是盒子的高度&lt;/p&gt;
&lt;p&gt;padding是“内边距”的意思&lt;/p&gt;
&lt;p&gt;border是“边框”&lt;/p&gt;
&lt;p&gt;margin是“外边距”&lt;/p&gt;
&lt;p&gt;盒模型的示意图：&lt;/p&gt;

&lt;p&gt;代码演示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221609905-217269838.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;这个盒子&lt;/strong&gt;&lt;strong&gt;width:200px; height:200px; 但是真实占有的宽高是302*302。 这是因为还要加上padding、border。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;宽度和真实占有宽度，不是一个概念！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        .box1&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt; 1px solid red&lt;/span&gt;;
        }&lt;span&gt;

        .box2&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 250px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 250px&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 25px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt;1px solid red&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&quot;box1&quot;&amp;gt;文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box2&quot;&amp;gt;文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3.2 认识width、height&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;一定要知道，在前端开发工程师眼中，世界中的一切都是不同的：&lt;/p&gt;
&lt;p&gt;比如丈量一个包子多宽？前端开发工程师，只会丈量包子馅：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221635090-1436936716.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;丈量稿纸，前端开发工程师只会丈量内容宽度：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221646715-1333849086.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;丈量人脸，只会丈量五官：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221659656-939694407.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面这两个盒子，真实占有宽高，完全相同，都是&lt;/span&gt;302*302：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     .box1&lt;/span&gt;{&lt;span&gt;
2     width&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
3     height&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
4     padding&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
5     border&lt;/span&gt;:&lt;span&gt; 1px solid red&lt;/span&gt;;&lt;span&gt;
6     &lt;/span&gt;}&lt;span&gt;
7 
8     .box2&lt;/span&gt;{&lt;span&gt;
9     width&lt;/span&gt;:&lt;span&gt; 250px&lt;/span&gt;;&lt;span&gt;
10     height&lt;/span&gt;:&lt;span&gt; 250px&lt;/span&gt;;&lt;span&gt;
11     padding&lt;/span&gt;:&lt;span&gt; 25px&lt;/span&gt;;&lt;span&gt;
12     border&lt;/span&gt;:&lt;span&gt;1px solid red&lt;/span&gt;;&lt;span&gt;
13     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这两个盒子的盒模型图，见下表：&lt;strong&gt;&lt;span&gt;真实占有宽度&lt;/span&gt;=  左border  +  左padding  +  width  +  右padding  +  右border&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;答案（答案有无穷多种，我们只写其中三种）：&lt;/strong&gt;小练习，大家自己写三个&lt;/span&gt;402*402的盒子&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 .box1&lt;/span&gt;{&lt;span&gt;
2     width&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
3     height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
4     border&lt;/span&gt;:&lt;span&gt; 1px solid red&lt;/span&gt;;&lt;span&gt;
5 &lt;/span&gt;}&lt;span&gt;
6 .box2&lt;/span&gt;{&lt;span&gt;
7     width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
8     height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
9     border&lt;/span&gt;:&lt;span&gt; 6px solid red&lt;/span&gt;;&lt;span&gt;
10     padding&lt;/span&gt;:&lt;span&gt; 95px&lt;/span&gt;;&lt;span&gt;
11 &lt;/span&gt;}&lt;span&gt;
12 .box3&lt;/span&gt;{&lt;span&gt;
13     width&lt;/span&gt;:&lt;span&gt; 0px&lt;/span&gt;;&lt;span&gt;
14     height&lt;/span&gt;:&lt;span&gt; 0px&lt;/span&gt;;&lt;span&gt;
15     padding&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
16     border&lt;/span&gt;:&lt;span&gt; 1px solid red&lt;/span&gt;;&lt;span&gt;
17 &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 这三个盒子的盒模型图：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果想保持一个盒子的真是占有宽度不变，那么加&lt;/span&gt;width就要减padding。加padding就要减width。&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3.3 认识padding&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;padding就是内边距。padding的区域有背景颜色，css2.1前提下，并且背景颜色一定和内容区域的相同。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;也就是说，&lt;/span&gt;background-color将填充所有boder以内的区域。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221805971-537730321.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;padding是4个方向的，所以我们能够分别描述4个方向的padding。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt; 1px solid red&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; pink&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;方法有两种，第一种写小属性；第二种写综合属性，用空格隔开。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;padding-top: 30px;
            padding-right: 20px;
            padding-bottom: 40px;
            padding-left: 100px;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;padding:30px 20px 40px 100px;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;padding: 20px 30px 40px;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 30px 40px&lt;/span&gt;;&lt;span&gt;

            border&lt;/span&gt;:&lt;span&gt; 1px solid red&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;小属性：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding-top: 30px;
2 padding-right: 20px;
3 padding-bottom: 40px;
4 padding-left: 100px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这种属性，就是复合属性。比如不写&lt;/span&gt;padding-left那么就是没有左内边距。top上、right右、bottom下、left左。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;快捷键就是&lt;/span&gt;pdt、pdr、pdb、pdl 然后按tab。&lt;/p&gt;
&lt;p&gt;综合属性：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果写了&lt;/span&gt;4个值：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding:30px 20px 40px 100px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上、右、下、左 &lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221828289-1149026072.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;空格隔开的，四个数字就是上、右、下、左。&lt;/p&gt;
&lt;p&gt;也就是说，前端开发工程师眼中的顺序不一样。&lt;/p&gt;
&lt;p&gt;老百姓：上下左右&lt;/p&gt;
&lt;p&gt;强调开发工程师：上、右、下、左&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果只写&lt;/span&gt;3个值：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding: 20px 30px 40px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;上、右、下、&lt;/span&gt;??和右一样&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221848956-5574326.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;如果只写2个值：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding: 30px 40px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503221919796-33926953.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;也就是说， &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding: 30px 40px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 等价于：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding-top: 30px;
2 padding-bottom: 30px;
3 padding-left: 40px;
4 padding-right: 40px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要懂得，用小属性层叠大属性：&lt;/p&gt;
&lt;p&gt; 对应的盒模型图：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding: 20px;
2 padding-left: 30px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面的写法错误：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding-left: 30px;
2 padding: 20px;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 不能把小属性，写在大属性前面。&lt;/p&gt;
&lt;p&gt;下面的题，会做了，说明你听懂了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            padding-left&lt;/span&gt;:&lt;span&gt; 10px&lt;/span&gt;;&lt;span&gt;
            padding-right&lt;/span&gt;:&lt;span&gt; 20px&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt;40px 50px 60px&lt;/span&gt;;&lt;span&gt;
            padding-bottom&lt;/span&gt;:&lt;span&gt; 30px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt; 1px solid #000&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;        &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;题目&lt;/span&gt;1，说出下面盒子真实占有宽高，并画出盒模型图：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     div&lt;/span&gt;{&lt;span&gt;

2     width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;

3     height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;

4     padding&lt;/span&gt;:&lt;span&gt; 10px 20px 30px&lt;/span&gt;;&lt;span&gt;

5     padding-right&lt;/span&gt;:&lt;span&gt; 40px&lt;/span&gt;;&lt;span&gt;

6     border&lt;/span&gt;:&lt;span&gt; 1px solid #000&lt;/span&gt;;&lt;span&gt;

7     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222003509-1719141793.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; &lt;span&gt;真实占有宽度&lt;/span&gt; = 200 + 20 + 40 + 1 + 1 = 262px&lt;/p&gt;
&lt;p&gt;&lt;span&gt;题目&lt;/span&gt;2，说出下面盒子真实占有宽高，并画出盒模型图：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     div&lt;/span&gt;{&lt;span&gt;
2     width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
3     height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
4     padding-left&lt;/span&gt;:&lt;span&gt; 10px&lt;/span&gt;;&lt;span&gt;
5     padding-right&lt;/span&gt;:&lt;span&gt; 20px&lt;/span&gt;;&lt;span&gt;
6     padding&lt;/span&gt;:&lt;span&gt;40px 50px 60px&lt;/span&gt;;&lt;span&gt;
7     padding-bottom&lt;/span&gt;:&lt;span&gt; 30px&lt;/span&gt;;&lt;span&gt;
8     border&lt;/span&gt;:&lt;span&gt; 1px solid #000&lt;/span&gt;;&lt;span&gt;
9     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222019344-1122362476.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; padding-left:10px； 和padding-right:20px; 没用，因为后面的padding大属性，层叠掉了他们。&lt;/p&gt;
&lt;p&gt;强调一点，padding-left 不是padding-left-width&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 padding-left:10px;  √
2 padding-left-width:30px; ×&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第3题，我现在给你盒模型图，请写出代码，试着用最最简单的方法写&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222050370-563519491.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;width:123px;
height:123px;
padding:20px 40px;
border:1px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第4题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222129117-535872838.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;width:123px;
height:123px;
padding:20px;
padding-right:40px;
border:1px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;一些元素，默认带有&lt;/span&gt;padding，比如ul标签。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222148818-1202152780.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;所以，我们为了做站的时候，便于控制，总是喜欢清除这个默认的padding：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     *&lt;/span&gt;{&lt;span&gt;
2     margin&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
3     padding&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
4     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td&lt;/span&gt;{&lt;span&gt;
2     margin&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;;&lt;span&gt;
3     padding&lt;/span&gt;:&lt;span&gt;0
4 &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; *的效率不高，所以我们使用并集选择器，罗列所有的标签（不用背，有专业的清除默认样式的样式表，今后学习）：&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3.4 border&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;就是边框。边框有三个要素：粗细、线型、颜色。&lt;/p&gt;
&lt;p&gt;颜色如果不写，默认是黑色。另外两个属性不写，要命了，显示不出来边框。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            border-width&lt;/span&gt;:&lt;span&gt;10px 20px&lt;/span&gt;;&lt;span&gt;
            border-style&lt;/span&gt;:&lt;span&gt;solid dashed dotted&lt;/span&gt;;&lt;span&gt;
            border-color&lt;/span&gt;:&lt;span&gt;red green blue yellow&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border: 1px dashed red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所有的线型： &lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222225597-898234491.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;比如，border:10px ridge red;  在chrome和firefox、IE中有细微差别：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222242111-266012801.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;如果公司里面的设计师，处女座的，追求极高的页面还原度，那么不能使用css来制作边框。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;就要用到图片，就要切图了。所以，比较稳定的就几个：&lt;/span&gt;solid、dashed、dotted&lt;/p&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot;/&gt;
border是一个大综合属性，&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:1px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;border属性能够被拆开，有两大种拆开的方式：&lt;/span&gt;就是把&lt;/span&gt;4个边框，都设置为1px宽度、线型实线、red颜色。&lt;/p&gt;
&lt;p&gt;1） 按3要素:border-width、border-style、border-color&lt;/p&gt;
&lt;p&gt;2） 按方向：border-top、border-right、border-bottom、border-left&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;

            border-top-width&lt;/span&gt;:&lt;span&gt;10px&lt;/span&gt;;&lt;span&gt;
            border-top-style&lt;/span&gt;:&lt;span&gt;solid&lt;/span&gt;;&lt;span&gt;
            border-top-color&lt;/span&gt;:&lt;span&gt;red&lt;/span&gt;;&lt;span&gt;
            border-right-width&lt;/span&gt;:&lt;span&gt;10px&lt;/span&gt;;&lt;span&gt;
            border-right-style&lt;/span&gt;:&lt;span&gt;solid&lt;/span&gt;;&lt;span&gt;
            border-right-color&lt;/span&gt;:&lt;span&gt;red&lt;/span&gt;;&lt;span&gt;
            border-bottom-width&lt;/span&gt;:&lt;span&gt;10px&lt;/span&gt;;&lt;span&gt;
            border-bottom-style&lt;/span&gt;:&lt;span&gt;solid&lt;/span&gt;;&lt;span&gt;
            border-bottom-color&lt;/span&gt;:&lt;span&gt;red&lt;/span&gt;;&lt;span&gt;
            border-left-width&lt;/span&gt;:&lt;span&gt;10px&lt;/span&gt;;&lt;span&gt;
            border-left-style&lt;/span&gt;:&lt;span&gt;solid&lt;/span&gt;;&lt;span&gt;
            border-left-color&lt;/span&gt;:&lt;span&gt;red&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;按&lt;/span&gt;3要素拆开：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border-width:10px;    → 边框宽度
2 border-style:solid;     → 线型
3 border-color:red;      → 颜色。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:10px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在心里要明白，&lt;strong&gt;&lt;span&gt;原来一个&lt;/span&gt;border是由三个小属性综合而成：&lt;/strong&gt;等价于：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;border-width  border-style   border-color。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果某一个小要素后面是空格隔开的多个值，那么就是&lt;strong&gt;上右下左&lt;/strong&gt;的顺序：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222311811-875394539.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border-width:10px 20px;

2 border-style:solid dashed dotted;

3 border-color:red green blue yellow;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按方向来拆&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border-top:10px solid red;

2 border-right:10px solid red;

3 border-bottom:10px solid red;

4 border-left:10px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 等价于&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:10px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按方向还能再拆一层&lt;span&gt;，就是把每个方向的，每个要素拆开，一共&lt;/span&gt;12条语句：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border-top-width:10px;

2 border-top-style:solid;

3 border-top-color:red;

4 border-right-width:10px;

5 border-right-style:solid;

6 border-right-color:red;

7 border-bottom-width:10px;

8 border-bottom-style:solid;

9 border-bottom-color:red;

10 border-left-width:10px;

11 border-left-style:solid;

12 border-left-color:red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 等价于&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:10px solid red;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;工作中到底用什么？很简答：什么简单用什么？&lt;/p&gt;
&lt;p&gt; &lt;span&gt;写法：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:10px solid red;

2 border-right-color:blue;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;写法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:10px solid red;

2 border-style:solid dashed;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;border可以没有， &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border:none;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;也可以调整左边边框的宽度为&lt;/span&gt;0：某一条边没有：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border-left: none;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 border-left-width: 0;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;宏观的讲，我们的&lt;/span&gt;web页面和photoshop等设计软件有本质的区别：web页面的制作，是个“流”，必须从上而下，像“织毛衣”。而设计软件，想往哪里画个东西，都能画。&lt;/p&gt;
&lt;p&gt;我们要看看标准流有哪些微观现象：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        span&lt;/span&gt;{&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 90px&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;p&amp;gt;
        人人人人 人人&amp;lt;span&amp;gt;姚明&amp;lt;/span&amp;gt;人人人人人人人
        &amp;lt;img src=&quot;images/0.jpg&quot; alt=&quot;&quot; /&amp;gt;
        &amp;lt;img src=&quot;images/1.jpg&quot; alt=&quot;&quot; /&amp;gt;
    &amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1） 空白折叠现象：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如，如果我们想让&lt;/span&gt;img标签之间没有空隙，必须紧密连接：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 &amp;lt;img src=&quot;images/0.jpg&quot; /&amp;gt;
2 &amp;lt;img src=&quot;images/1.jpg&quot; /&amp;gt;
3 &amp;lt;img src=&quot;images/2.jpg&quot; /&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2） 高矮不齐，底边对齐： &lt;/p&gt;
&lt;p&gt;3） 自动换行，一行写不满，换行写。&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;4.1 块级元素和行内元素&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        h1&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 90px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; pink&lt;/span&gt;;
        }&lt;span&gt;
        span&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 90px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; pink&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;哈哈哈哈&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;嘻嘻嘻嘻&amp;lt;/h1&amp;gt;


    &amp;lt;span&amp;gt;哈哈哈哈&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;嘻嘻嘻嘻&amp;lt;/span&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;学习的初期，你就要知道，&lt;span&gt;标准文档流等级森严&lt;/span&gt;。标签分为两种等级：&lt;/p&gt;
&lt;p&gt;1） 块级元素&lt;/p&gt;
&lt;p&gt;● 霸占一行，不能与其他任何元素并列&lt;/p&gt;
&lt;p&gt;● 能接受宽、高&lt;/p&gt;
&lt;p&gt;● 如果不设置宽度，那么宽度将默认变为父亲的100%。&lt;/p&gt;
&lt;p&gt;2） 行内元素&lt;/p&gt;
&lt;p&gt;● 与其他行内元素并排&lt;/p&gt;
&lt;p&gt;● 不能设置宽、高。默认的宽度，就是文字的宽度。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;HTML中，我们已经将标签分过类，当时分为了：文本级、容器级。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;文本级：&lt;/span&gt;p、span、a、b、i、u、em&lt;/p&gt;
&lt;p&gt;&lt;span&gt;容器级：&lt;/span&gt;div、h系列、li、dt、dd&lt;/p&gt;
&lt;p&gt;CSS的分类和上面的很像，就p不一样：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所有的文本级标签，都是行内元素，除了&lt;/span&gt;p，p是个文本级，但是是个块级元素。&lt;/p&gt;
&lt;p&gt;所有的容器级标签都是块级元素。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222418302-2136540703.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;4.2 块级元素和行内元素的相互转换&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;块级元素可以设置为行内元素&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            display&lt;/span&gt;:&lt;span&gt; inline&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; pink&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 500px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 500px&lt;/span&gt;;
        }&lt;span&gt;
        h1&lt;/span&gt;{&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; greenyellow&lt;/span&gt;;&lt;span&gt;
            display&lt;/span&gt;:&lt;span&gt; inline&lt;/span&gt;;&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 20px&lt;/span&gt;;&lt;span&gt;
            font-weight&lt;/span&gt;:&lt;span&gt; normal&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;我是一个div&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;我是一个div&amp;lt;/div&amp;gt;

    &amp;lt;h1&amp;gt;我&amp;lt;/h1&amp;gt;&amp;lt;h1&amp;gt;爱&amp;lt;/h1&amp;gt;&amp;lt;h1&amp;gt;你&amp;lt;/h1&amp;gt;&amp;lt;h1&amp;gt;们&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;行内元素可以设置为块级元素&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('af360c9a-8304-4479-9720-4b4fee31010e')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_af360c9a-8304-4479-9720-4b4fee31010e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_af360c9a-8304-4479-9720-4b4fee31010e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('af360c9a-8304-4479-9720-4b4fee31010e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_af360c9a-8304-4479-9720-4b4fee31010e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        span&lt;/span&gt;{&lt;span&gt;
            display&lt;/span&gt;:&lt;span&gt; block&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; pink&lt;/span&gt;;
        }&lt;span&gt;
        a&lt;/span&gt;{&lt;span&gt;
            display&lt;/span&gt;:&lt;span&gt; block&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 250px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 40px&lt;/span&gt;;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;文本居中：&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
            text-align&lt;/span&gt;:&lt;span&gt; center&lt;/span&gt;;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;行高40，和盒子一样高，所以就垂直居中了，后面讲&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
            line-height&lt;/span&gt;:&lt;span&gt; 40px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; orange&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;a href=&quot;http://www.163.com&quot;&amp;gt;点击我去网易&amp;lt;/a&amp;gt;

    &amp;lt;span&amp;gt;我是一个span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是一个span&amp;lt;/span&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     div&lt;/span&gt;{&lt;span&gt;
2     display&lt;/span&gt;:&lt;span&gt; inline&lt;/span&gt;;&lt;span&gt;
4     width&lt;/span&gt;:&lt;span&gt; 500px&lt;/span&gt;;&lt;span&gt;
5     height&lt;/span&gt;:&lt;span&gt; 500px&lt;/span&gt;;&lt;span&gt;
6     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;inline就是“行内”。display是“显示模式”的意思，用来改变元素的行内、块级性质&lt;/p&gt;
&lt;p&gt;一旦，给一个标签设置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1 display: inline;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;● 此时这个div不能设置宽度、高度；&lt;/span&gt;那么，这个标签将立即变为行内元素。此时它和一个&lt;/span&gt;span无异：&lt;/p&gt;
&lt;p&gt;● 此时这个div可以和别人并排了&lt;/p&gt;
&lt;p&gt;同样的道理，&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     span&lt;/span&gt;{&lt;span&gt;
2     display&lt;/span&gt;:&lt;span&gt; block&lt;/span&gt;;&lt;span&gt;
3     width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
4     height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
5 
6     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;让标签变为块级元素。此时这个标签，和一个&lt;/span&gt;div无异：“block”是“块”的意思&lt;/p&gt;
&lt;p&gt;● 此时这个span能够设置宽度、高度&lt;/p&gt;
&lt;p&gt;● 此时这个span必须霸占一行了，别人无法和他并排&lt;/p&gt;
&lt;p&gt;● 如果不设置宽度，将撑满父亲&lt;/p&gt;
&lt;p&gt;标准流里面限制非常多，标签的性质恶心。比如，我们现在就要并排、并且就要设置宽高。&lt;/p&gt;
&lt;p&gt;所以，移民！脱离标准流！&lt;/p&gt;
&lt;p&gt;css中一共有三种手段，使一个元素脱离标准文档流：&lt;/p&gt;
&lt;p&gt;1） 浮动&lt;/p&gt;
&lt;p&gt;2） 绝对定位&lt;/p&gt;
&lt;p&gt;3） 固定定位&lt;/p&gt;

&lt;p&gt;&lt;span&gt;浮动是&lt;/span&gt;css里面布局用的最多的属性。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('6f981375-657b-4f4a-9054-8460dc57ba1e')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_6f981375-657b-4f4a-9054-8460dc57ba1e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_6f981375-657b-4f4a-9054-8460dc57ba1e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('6f981375-657b-4f4a-9054-8460dc57ba1e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_6f981375-657b-4f4a-9054-8460dc57ba1e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        .box1&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; yellowgreen&lt;/span&gt;;
        }&lt;span&gt;
        .box2&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; skyblue&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&quot;box1&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box2&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222608239-758496174.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     .box1&lt;/span&gt;{&lt;span&gt;
2     float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
3     width&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
4     height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
6     &lt;/span&gt;}&lt;span&gt;
7     .box2&lt;/span&gt;{&lt;span&gt;
8     float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
9     width&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
10     height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt; 
12     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;两个元素并排了，并且两个元素都能够设置宽度、高度了（这在刚才的标准流中，不能实现）。 &lt;/p&gt;
&lt;p&gt;浮动想学好，一定要知道三个性质。&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;5.1 浮动的元素脱标&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;证明&lt;/span&gt;1：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d85c8e43-18db-4c51-9f1f-6fd3f69fc4cc')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_d85c8e43-18db-4c51-9f1f-6fd3f69fc4cc&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d85c8e43-18db-4c51-9f1f-6fd3f69fc4cc&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d85c8e43-18db-4c51-9f1f-6fd3f69fc4cc',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d85c8e43-18db-4c51-9f1f-6fd3f69fc4cc&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        .box1&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; yellowgreen&lt;/span&gt;;
        }&lt;span&gt;
        .box2&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 350px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 350px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; skyblue&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&quot;box1&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box2&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222637394-1915482686.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;证明2：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('fd85c47c-52a5-4265-9cd7-8c7a421d732d')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_fd85c47c-52a5-4265-9cd7-8c7a421d732d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_fd85c47c-52a5-4265-9cd7-8c7a421d732d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('fd85c47c-52a5-4265-9cd7-8c7a421d732d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_fd85c47c-52a5-4265-9cd7-8c7a421d732d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        span&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; orange&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;一个&lt;/span&gt;span标签不需要转成块级元素，就能够设置宽度、高度了。所以能够证明一件事儿，就是所有标签已经不区分行内、块了。也就是说，&lt;strong&gt;&lt;span&gt;一旦一个元素浮动了，那么，将能够并排了，并且能够设置宽高了。无论它原来是个&lt;/span&gt;div还是个span。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     span&lt;/span&gt;{&lt;span&gt;
2     float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
3     width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
4     height&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
6     &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;5.2 浮动的元素互相贴靠&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222744077-1093862039.png&quot; alt=&quot;&quot; width=&quot;639&quot; height=&quot;339&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果有足够空间，那么就会靠着&lt;/span&gt;2哥。如果没有足够的空间，那么会靠着1号大哥。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果没有足够的空间靠着&lt;/span&gt;1号大哥，自己去贴左墙。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;右浮动：&lt;/span&gt;   float:right; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('165c771b-6a5b-4599-8b74-97366843be46')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_165c771b-6a5b-4599-8b74-97366843be46&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_165c771b-6a5b-4599-8b74-97366843be46&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('165c771b-6a5b-4599-8b74-97366843be46',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_165c771b-6a5b-4599-8b74-97366843be46&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        body&lt;/span&gt;{&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 60px&lt;/span&gt;;
        }&lt;span&gt;
        .box1&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; yellowgreen&lt;/span&gt;;
        }&lt;span&gt;
        .box2&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 120px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 220px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; gold&lt;/span&gt;;
        }&lt;span&gt;
        .box3&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 340px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; skyblue&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&quot;box1&quot;&amp;gt;1&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box2&quot;&amp;gt;2&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box3&quot;&amp;gt;3&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222803587-1151077094.png&quot; alt=&quot;&quot; width=&quot;424&quot; height=&quot;349&quot;/&gt;&lt;/p&gt;


&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5c9bd455-acba-4c27-92f0-67119149b773')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_5c9bd455-acba-4c27-92f0-67119149b773&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5c9bd455-acba-4c27-92f0-67119149b773&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5c9bd455-acba-4c27-92f0-67119149b773',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5c9bd455-acba-4c27-92f0-67119149b773&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        body&lt;/span&gt;{&lt;span&gt;
            font-size&lt;/span&gt;:&lt;span&gt; 60px&lt;/span&gt;;
        }&lt;span&gt;
        .box1&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt;right&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; yellowgreen&lt;/span&gt;;
        }&lt;span&gt;
        .box2&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; right&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 120px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 220px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; gold&lt;/span&gt;;
        }&lt;span&gt;
        .box3&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; right&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 340px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; skyblue&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&quot;box1&quot;&amp;gt;1&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box2&quot;&amp;gt;2&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;box3&quot;&amp;gt;3&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;h2&gt;&lt;span&gt;&lt;strong&gt;5.3 浮动的元素有“字围”效果&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('6f60dfcf-d920-4d4b-9507-30f2a7efcd35')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_6f60dfcf-d920-4d4b-9507-30f2a7efcd35&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_6f60dfcf-d920-4d4b-9507-30f2a7efcd35&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('6f60dfcf-d920-4d4b-9507-30f2a7efcd35',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_6f60dfcf-d920-4d4b-9507-30f2a7efcd35&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        div&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 344px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 516px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; orange&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;img src=&quot;images/1.jpg&quot; alt=&quot;&quot; /&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;p&amp;gt;123文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;HTML：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1     &amp;lt;div&amp;gt;
2     &amp;lt;img src=&quot;images/1.jpg&quot; alt=&quot;&quot; /&amp;gt;
3     &amp;lt;/div&amp;gt;
4     &amp;lt;p&amp;gt;123文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文字文字文字文字文字文字
5 　　&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1322549/201805/1322549-20180503222830657-1741737120.png&quot; alt=&quot;&quot; width=&quot;449&quot; height=&quot;344&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;让&lt;/span&gt;div浮动，p不浮动：&lt;/p&gt;
&lt;p&gt;div挡住了p，但是p中的文字不会被挡住，形成“字围”效果。&lt;/p&gt;
&lt;p&gt;关于浮动我们要强调一点，浮动这个东西，我们在初期一定要遵循一个原则：&lt;/p&gt;
&lt;p&gt;永远不是一个东西单独浮动，浮动都是一起浮动，要浮动，大家都浮动。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        *&lt;/span&gt;{&lt;span&gt;
            margin&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;
        }&lt;span&gt;
        div&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 400px&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; pink&lt;/span&gt;;
        }&lt;span&gt;
        .para1&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; yellowgreen&lt;/span&gt;;
        }&lt;span&gt;
        .para2&lt;/span&gt;{&lt;span&gt;
            float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 280px&lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            padding&lt;/span&gt;:&lt;span&gt; 10px&lt;/span&gt;;&lt;span&gt;
            background-color&lt;/span&gt;:&lt;span&gt; skyblue&lt;/span&gt;;
        }&lt;span&gt;
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p class=&quot;para1&quot;&amp;gt;1&amp;lt;/p&amp;gt;
        &amp;lt;p class=&quot;para2&quot;&amp;gt;
            &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Thu, 03 May 2018 14:47:00 +0000</pubDate>
<dc:creator>我举个栗子</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wanghui1234/p/8987973.html</dc:identifier>
</item>
<item>
<title>CRM客户关系管理系统（十一） - zhang_derek</title>
<link>http://www.cnblogs.com/derek1184405959/p/8985067.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/derek1184405959/p/8985067.html</guid>
<description>&lt;h2&gt;第十一章、学员报名流程开发&lt;/h2&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;11.1.面包屑的制作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;        &lt;a href=&quot;https://v3.bootcss.com/components/#navbar&quot;&gt;Boorstrap路径导航条&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503123539338-946163832.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; （1）table_obj_list.html页面面包屑&lt;/p&gt;
&lt;p&gt;def table_obj_list&lt;/p&gt;
&lt;pre&gt;
返回数据改成locals()
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503124150677-876880427.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;table_obj_list.html&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503140251014-1466971587.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;kingadmin_tags.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@register.simple_tag
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; get_model_verbose_name(admin_class):

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; admin_class.model._meta.verbose_name
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; （2）change页面的面包屑&lt;/p&gt;
&lt;p&gt;table_obj_change.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ol &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;breadcrumb&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/kingadmin/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Home&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/kingadmin/{{ app_name }}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ app_name }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/kingadmin/{{ app_name }}/{{ model_name }}/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{% get_model_verbose_name admin_class %}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ form_obj.instance }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ol&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h4 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;page-header&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;修改{{ form_obj.instance }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（3）add页面的面包屑&lt;/p&gt;
&lt;p&gt;因为add和change共用tags和html。所以要添加判断是add还是change&lt;/p&gt;
&lt;p&gt;table__obj_change_component.html&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503140628578-1638815780.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; kingadmin_tags.py&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503140802545-1874838348.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503140827911-855764713.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; table_obj_add.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ol &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;breadcrumb&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/kingadmin/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Home&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/kingadmin/{{ app_name }}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ app_name }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/kingadmin/{{ app_name }}/{{ model_name }}/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{% get_model_verbose_name admin_class %}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ADD {{ model_name }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ol&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;page-header&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{% get_model_name admin_class %}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h4 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;page-header&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;添加{% get_model_name admin_class %}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;11.2.报名流程和models设计&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;（1）后台修改左侧“客户库”的url&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503141816039-1520898187.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）左侧menu菜单添加“active”样式&lt;/p&gt;
&lt;p&gt; kingadmin/index.html&lt;/p&gt;
&lt;p&gt;如果当前的url 跟menu的url_name就添加“active”&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav nav-sidebar&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    {% for role in  request.user.userprofile.role.select_related %}
                        {% for menu in role.menus.select_related %}
                            {% if request.path == menu.url_name %}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;{% if menu.url_type == 0 %}{{ menu.url_name }}{% else %}{% url menu.url_name %}{% endif %}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ menu.name }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {% else %}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;{% if menu.url_type == 0 %}{{ menu.url_name }}{% else %}{% url menu.url_name %}{% endif %}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ menu.name }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {% endif %}
                        {% endfor %}
                    {% endfor %}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;报名流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;销售   发起报名流程，选择班级，发报名链接给学员&lt;/li&gt;
&lt;li&gt;学员   填写在线报名表，提交gerenxinxi，上传证件信息，同意培训协议&lt;/li&gt;
&lt;li&gt;销售    审核报名表，审核通过后，创建一条缴费记录，自动把学员添加到相应的班级，报名成功&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;models设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;添加三张表 crm/models.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;51&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ContractTemplate(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;存储合同模板&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    name &lt;/span&gt;= models.CharField(max_length=64&lt;span&gt;)
    content &lt;/span&gt;=&lt;span&gt; models.TextField()
    date &lt;/span&gt;= models.DateField(auto_now_add=&lt;span&gt;True)


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudentEnrollment(models.Model):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;学员报名表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    customer &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;CustomerInfo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    class_grade &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ClassList&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    consultant &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    contract_agreed &lt;/span&gt;= models.BooleanField(default=&lt;span&gt;False)
    contract_signed_date &lt;/span&gt;= models.DateTimeField(blank=True,null=&lt;span&gt;True)
    contract_approved &lt;/span&gt;= models.BooleanField(default=&lt;span&gt;False)
    consultant_approved_date &lt;/span&gt;= models.DateTimeField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;合同审核时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,blank=True,null=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        unique_together &lt;/span&gt;= (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;customer&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;class_grade&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;%s&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%&lt;span&gt; self.customer


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; PaymentRecord(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;存储学员缴费记录&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    enrollment &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;StudentEnrollment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    payment_type_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;报名费&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;学费&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;退费&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    payment_type &lt;/span&gt;= models.SmallIntegerField(choices=payment_type_choices,default=&lt;span&gt;0)
    amount &lt;/span&gt;= models.IntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;费用&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,default=500&lt;span&gt;)
    consultant &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    date &lt;/span&gt;= models.DateTimeField(auto_now_add=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;%s&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; %self.enrollment
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 班级关联合同表&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503155006121-732394762.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 修改student跟customer为一对一的关系&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503155053899-1503528134.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;11.3.报名页面&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;销售填写客户跟班级，点“下一步”提交&lt;/li&gt;
&lt;li&gt;后台获取到客户id和班级id，在数据库中创建记录，并生成一个报名链接，返回到前端&lt;/li&gt;
&lt;li&gt;前端显示报名链接，然后销售把报名链接发给用户&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（1）crm/urls.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; crm/urls.py&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; django.conf.urls &lt;span&gt;import&lt;/span&gt;&lt;span&gt; url,include
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; crm &lt;span&gt;import&lt;/span&gt;&lt;span&gt; views

urlpatterns &lt;/span&gt;=&lt;span&gt; [
    url(r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, views.dashboard,name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;sales_dashboard&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;学员报名&lt;/span&gt;
    url(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^stu_enrollment/$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, views.stu_enrollment,name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;stu_enrollment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）crm/views.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@login_required
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; stu_enrollment(request):

    customers &lt;/span&gt;=&lt;span&gt; models.CustomerInfo.objects.all()
    class_lists &lt;/span&gt;=&lt;span&gt; models.ClassList.objects.all()

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; request.method == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;获取提交的客户id和班级id，然后生成报名链接&lt;/span&gt;
        customer_id = request.POST.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;customer_id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        class_grade_id &lt;/span&gt;= request.POST.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;class_grade_id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        enrollment_obj &lt;/span&gt;=&lt;span&gt; models.StudentEnrollment.objects.create(
            customer_id &lt;/span&gt;=&lt;span&gt; customer_id,
            class_grade_id &lt;/span&gt;=&lt;span&gt; class_grade_id,
            consultant_id &lt;/span&gt;=&lt;span&gt; request.user.userprofile.id
        )
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;生成链接返回到前端&lt;/span&gt;
        enrollment_link = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://localhost:8000/crm/enrollment/%s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt; enrollment_obj.id

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; render(request,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;crm/stu_enrollment.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,locals())
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（3）新建templates/crm/stu_enrollment.html&lt;/p&gt;
&lt;p&gt;crm/index.html&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503185950340-815496051.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;crm/stu_enrollment.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{#templates/crm/stu_enrollment.html#}

{% extends 'index.html' %}


{% block right-content-container %}

    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学员报名页&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-horizontal&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    {% csrf_token %}
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;inputEmail3&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-2 control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-10&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;customer_id&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                {% for customer in customers  %}
                    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;{{ customer.id }}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ customer }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                {% endfor %}
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;inputEmail3&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-2 control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;报名班级&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-10&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;class_grade_id&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                {% for class_grade in class_lists  %}
                    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;{{ class_grade.id }}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ class_grade }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                {% endfor %}
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-success pull-right&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;下一步&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

    {% if enrollment_link %}
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;请将此报名链接复制并发送给学员填写 {{ enrollment_link }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    {% endif %}

{% endblock %}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503190520813-779797665.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;11.4.学员填写报名信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt; 添加学员注册url&lt;/li&gt;
&lt;li&gt;添加CustomerInfo字段，身份证信息，紧急联络人，性别&lt;/li&gt;
&lt;li&gt;有些字段是只读的，填写信息的时候不能修改，因为如果设置了只读(添加属性disabled=true)，提交的时候会报这些字段为空，导致提交错误&lt;/li&gt;
&lt;li&gt;所以在前段添加了js代码，&lt;span&gt;&lt;em id=&quot;__mceDel&quot;&gt;BeforeFormSubmit  在提交前去掉disable=true（因为数据库中有默认值，提交的时候就不会报错）&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;防止用户通过前端改html代码的方式改只读字段的信息，所以在form.py里面添加了一个自定义的验证方法（clean）,如果只读字段提交的时候信息跟数据库中默认的不一样，就报错&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;（1）crm/urls.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; crm/urls.py&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; django.conf.urls &lt;span&gt;import&lt;/span&gt;&lt;span&gt; url,include
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; crm &lt;span&gt;import&lt;/span&gt;&lt;span&gt; views

urlpatterns &lt;/span&gt;=&lt;span&gt; [
    url(r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, views.dashboard,name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;sales_dashboard&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;学员报名&lt;/span&gt;
    url(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^stu_enrollment/$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, views.stu_enrollment,name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;stu_enrollment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;学员注册&lt;/span&gt;
    url(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^enrollment/(\d+)/$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, views.enrollment,name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;enrollment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）crm/models.py&lt;/p&gt;
&lt;p&gt;CustomerInfo表 添加字段&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503222159802-980223254.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; （3）crm/form.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; crm/form.py&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; django.forms &lt;span&gt;import&lt;/span&gt;&lt;span&gt; ModelForm
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; crm &lt;span&gt;import&lt;/span&gt;&lt;span&gt; models
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; django &lt;span&gt;import&lt;/span&gt;&lt;span&gt; forms

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerForm(ModelForm):
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        model &lt;/span&gt;=&lt;span&gt; models.CustomerInfo
        fields &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;__all__&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt;不显示的字段&lt;/span&gt;
        exclude = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;consult_content&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;status&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;consult_courses&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;只读的字段&lt;/span&gt;
        readonly_fields = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;contact_type&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;contact&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;consultant&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;referral_from&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;django是通过“__new__”方法，找到ModelForm里面的每个字段的，然后循环出每个字段添加自定义样式&lt;/span&gt;
    &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__new__&lt;/span&gt;(cls, *args, **&lt;span&gt;kwargs):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;cls.base_fields是一个元祖，里面是 所有的  【(字段名，字段的对象),(),()】&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt; field_name &lt;span&gt;in&lt;/span&gt;&lt;span&gt; cls.base_fields:
            field_obj &lt;/span&gt;=&lt;span&gt; cls.base_fields[field_name]
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;添加属性&lt;/span&gt;
            field_obj.widget.attrs.update({&lt;span&gt;'&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:&lt;span&gt;'&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;})

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; field_name &lt;span&gt;in&lt;/span&gt;&lt;span&gt; cls.Meta.readonly_fields:
                field_obj.widget.attrs.update({&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;disabled&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:&lt;span&gt;'&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;})
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; ModelForm.&lt;span&gt;__new__&lt;/span&gt;&lt;span&gt;(cls)

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;只读字段不让用户通过浏览器改html代码的方式改&lt;/span&gt;
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; clean(self):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 表单级别的错误&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt; self.errors:
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; forms.ValidationError((&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Please fix errors before re-submit.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; means this is a change form ,should check the readonly fields&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; self.instance.id &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; None:
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;取出只读字段，是一个字符串形式&lt;/span&gt;
            &lt;span&gt;for&lt;/span&gt; field &lt;span&gt;in&lt;/span&gt;&lt;span&gt; self.Meta.readonly_fields:
                &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;通过反射取出字段的值（数据库里的数据）&lt;/span&gt;
                old_field_val =&lt;span&gt; getattr(self.instance, field)
                &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;提交过来的数据&lt;/span&gt;
                form_val =&lt;span&gt; self.cleaned_data.get(field)
                &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;如果两个数据不匹配&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt; old_field_val !=&lt;span&gt; form_val:
                    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;就提示只读字段不能修改&lt;/span&gt;
                    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;add_error是字段级别的错误&lt;/span&gt;
                    self.add_error(field, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Readonly Field: field should be '{value}' ,not '{new_value}' &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;. \
                                   format(&lt;/span&gt;**{&lt;span&gt;'&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: old_field_val, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;new_value&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: form_val}))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; （4）crm/views.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; enrollment(request,enrollment_id):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;学员在线报名表地址&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;

    enrollment_obj &lt;/span&gt;= models.StudentEnrollment.objects.get(id=&lt;span&gt;enrollment_id)

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; request.method == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
        customer_form &lt;/span&gt;= form.CustomerForm(instance=enrollment_obj.customer,data=&lt;span&gt;request.POST)
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; customer_form.is_valid():
            customer_form.save()
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; HttpResponse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;你已成功提交报名信息，请等待审核，欢迎加入仙剑奇侠传&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        customer_form &lt;/span&gt;= form.CustomerForm(instance=&lt;span&gt;enrollment_obj.customer)

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; render(request,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;crm/enrollment.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,locals())
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（4）crm/enrollment.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{#templates/crm/enrollment.html#}

{% extends 'index.html' %}

{% block body %}

    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;仙剑奇侠传|学员报名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel panel-primary&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-heading&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-title&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学员在线报名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-body&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt; onsubmit&lt;/span&gt;&lt;span&gt;=&quot;return BeforeFormSubmit(this)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    {% csrf_token %}
                    {% for field in customer_form %}
                        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group col-lg-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-2 control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ field.label }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-10&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                {{ field }}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ field.errors.0 }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    {% endfor %}

                    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group col-lg-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-2 control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;报名班级&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-10&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {{ enrollment_obj.class_grade }}
                        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group col-lg-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-2 control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-10&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {{ enrollment_obj.class_grade.course.price }}
                        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-offset-11 col-sm-2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-success &quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-footer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;http://www.cnblogs.com/derek1184405959/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;zhang_derek&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;function&lt;/span&gt;&lt;span&gt; BeforeFormSubmit(ele) {
        $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:disabled&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).removeAttr(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;disabled&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

{% endblock %}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; &lt;strong&gt;&lt;span&gt;在线报名填表页面&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503223239509-1200922855.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 修改只读字段会报错&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180503223201540-531000686.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 03 May 2018 14:34:00 +0000</pubDate>
<dc:creator>zhang_derek</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/derek1184405959/p/8985067.html</dc:identifier>
</item>
<item>
<title>ASP.NET Core 使用UrlFirewall对请求进行过滤 - 晓晨Master</title>
<link>http://www.cnblogs.com/stulzq/p/8987632.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/stulzq/p/8987632.html</guid>
<description>&lt;h2 id=&quot;一.-前言&quot;&gt;一. 前言&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;UrlFirewall&lt;/code&gt; 是一个开源、轻便的对http请求进行过滤的中间件，可使用在webapi或者网关（比如Ocelot）,由我本人编写，并且开源在github：&lt;a href=&quot;https://github.com/stulzq/UrlFirewall&quot; class=&quot;uri&quot;&gt;https://github.com/stulzq/UrlFirewall&lt;/a&gt; 欢迎star.&lt;/p&gt;
&lt;h2 id=&quot;二.urlfirewall-介绍&quot;&gt;二.UrlFirewall 介绍&lt;/h2&gt;
&lt;p&gt;UrlFirewall 是一款http请求过滤中间件，可以和网关（Ocelot）搭配，实现屏蔽外网访问内部接口，只让内部接口之间相互通讯，而不暴露到外部。它支持黑名单模式和白名单模式，支持自定义http请求响应代码。具有良好的扩展性，可自己实现验证逻辑，从数据库或者Redis缓存等介质实现对规则的检索。&lt;/p&gt;
&lt;h2 id=&quot;三.使用&quot;&gt;三.使用&lt;/h2&gt;
&lt;h3 id=&quot;从nuget添加组件到你的asp.net-core项目&quot;&gt;1.从Nuget添加组件到你的ASP.NET Core项目&lt;/h3&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;Install-Package UrlFirewall.AspNetCore&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;配置di&quot;&gt;2.配置DI&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;public void ConfigureServices(IServiceCollection services)
{
    services.AddUrlFirewall(options =&amp;gt;
    {
        options.RuleType = UrlFirewallRuleType.Black;
        options.SetRuleList(Configuration.GetSection(&quot;UrlBlackList&quot;));
        options.StatusCode = HttpStatusCode.NotFound;
    });
    services.AddMvc();
    //...
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;配置中间件&quot;&gt;3.配置中间件&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;UrlFirewall中间件的位置必须放在第一个&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;public void Configure(IApplicationBuilder app, IHostingEnvironment env)
{
    //Configure url firewall middleware. Top most.
    app.UseUrlFirewall();

    if (env.IsDevelopment())
    {
        app.UseDeveloperExceptionPage();
    }

    app.UseMvc();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;配置规则&quot;&gt;4.配置规则&lt;/h3&gt;
&lt;p&gt;根据步骤2，使用的Section名称·&lt;code&gt;UrlBlackList&lt;/code&gt;·我们在appsettings.json/appsettings.Devolopment.json文件中添加以下配置;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;sourceCode json&quot;&gt;
&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;Logging&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;&quot;IncludeScopes&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;&quot;LogLevel&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;Debug&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;System&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;Information&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;Information&quot;&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;UrlBlackList&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Url&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/api/cart/add&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Method&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;All&quot;&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Url&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/api/cart/del&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Method&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;Post&quot;&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Url&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/api/cart/list&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Method&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;Get&quot;&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Url&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/api/product/*&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;&quot;Method&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;All&quot;&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;ot&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Url 字段表示要拦截的http请求url,支持通配符&lt;code&gt;*&lt;/code&gt;和&lt;code&gt;?&lt;/code&gt;，&lt;code&gt;*&lt;/code&gt;表示匹配任意个数任意字符，&lt;code&gt;?&lt;/code&gt;表示匹配一个任意字符。&lt;code&gt;Method&lt;/code&gt;表示http请求方法，&lt;code&gt;All&lt;/code&gt;代表所有，还有&lt;code&gt;Get Post Delete Put&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;四.扩展&quot;&gt;四.扩展&lt;/h2&gt;
&lt;p&gt;如果你想要实现自己的验证逻辑，或者从数据库、Redis缓存等介质查询、获取数据来进行验证；你可以实现&lt;code&gt;IUrlFirewallValidator&lt;/code&gt;接口，然后调用&lt;code&gt;AddUrlFirewallValidator&lt;/code&gt;方法替换默认实现即可。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;services.AddUrlFirewall(options =&amp;gt;
{
    options.RuleType = UrlFirewallRuleType.Black;
    options.SetRuleList(Configuration.GetSection(&quot;UrlBlackList&quot;));
    options.StatusCode = HttpStatusCode.NotFound;
}).AddUrlFirewallValidator&amp;lt;CustomValidator&amp;gt;();&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;五.地址&quot;&gt;五.地址&lt;/h2&gt;
&lt;p&gt;源码和Demo：&lt;a href=&quot;https://github.com/stulzq/UrlFirewall&quot; class=&quot;uri&quot;&gt;https://github.com/stulzq/UrlFirewall&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 03 May 2018 14:31:00 +0000</pubDate>
<dc:creator>晓晨Master</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/stulzq/p/8987632.html</dc:identifier>
</item>
<item>
<title>machine learning 之 Neural Network 2 - Echo_fy</title>
<link>http://www.cnblogs.com/echo-coding/p/8987704.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/echo-coding/p/8987704.html</guid>
<description>&lt;p&gt;整理自Andrew Ng的machine learning 课程 week5.&lt;/p&gt;
&lt;p&gt;目录：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Neural network and classification&lt;/li&gt;
&lt;li&gt;Cost function&lt;/li&gt;
&lt;li&gt;Backpropagation （to minimize cost function）&lt;/li&gt;
&lt;li&gt;Backpropagation in practice&lt;/li&gt;
&lt;li&gt;Gradient checking&lt;/li&gt;
&lt;li&gt;Random initialization&lt;/li&gt;
&lt;li&gt;Assure structure and Train a neural network&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前提：&lt;/p&gt;
&lt;p&gt;训练数据集：${(x^{(1)},y^{(1)}),(x^{(2)},y^{(2)}),...,(x^{(m)},y^{(m)})}$&lt;/p&gt;
&lt;p&gt;L：神经网络的总的层数，total layers，如下图，L=4&lt;/p&gt;
&lt;p&gt;$s_l$：第l层的单元数目，如下图，$s_1=3, s_2=5,...$&lt;/p&gt;
&lt;p&gt;K：输出层的单元数，如下图，K=4&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1226720/201805/1226720-20180503182220025-820500585.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1、neural network and classification&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于二分类问题（binary classification）：输出为0或1，K=1&lt;/p&gt;
&lt;p&gt;对于多分类问题（Multi-class classification）：输出为hot one编码形式，K为类别数目，类似如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1226720/201805/1226720-20180503182650105-555320991.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2、cost function&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;之前的文章中介绍过logistic regression的cost function为：&lt;/p&gt;
&lt;p&gt;$J(\theta)=-\frac{1}{m}[\sum_{i=1}^m y^{(i)}logh_\theta(x^{(i)}) + (1-y^{(i)})log(1-h_\theta(x{(i)}))] +  \frac{\lambda}{2m} \sum_{j=1}^n \theta_j^2$&lt;/p&gt;
&lt;p&gt;more generally，在神经网络中，$h_\Theta(x) \in R^K，(h_\Theta(x))_i是第i个output$，神经网络的cost function为：&lt;/p&gt;
&lt;p&gt;$J(\Theta)=-\frac{1}{m}[\sum_{i=1}^m \sum_{k=1}^K y_k^{(i)}log(h_\Theta(x^{(i)})_k) + (1-y_k^{(i)})log(1-(h_\Theta(x{(i)}))_k)] +  \frac{\lambda}{2m} \sum_{l=1}^{L-1} \sum_{i=1}^{s_l} \sum_{j=1}^{s_{l+1}} (\Theta_{ji}^{(l)})^2$&lt;/p&gt;
&lt;p&gt;相比于logistic regression：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;需要把K个输出的损失相加，所以有了K个累加项；&lt;/li&gt;
&lt;li&gt;在惩罚项里面，需要把除bias unit以外的所有的参数（除$\Theta_0以外的所有\Theta$）都进行惩罚；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;3、Backpropagation&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有了cost function之后，我们就需要minimize cost function，使用的就是backpropagation算法计算出进行参数更新的值（类似于梯度下降的偏导数），也就是神经网络的损失函数的偏导数：&lt;/p&gt;
&lt;p&gt;梯度计算：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;首先进行forward propagation，计算出每一层的单元值（包括输出层的值）；（上一篇文章的内容）&lt;/li&gt;
&lt;li&gt;进行backpropagation：（以前提中的神经网络为例）
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;4、Backpropagation in practice&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;unrolling parameters：把矩阵形式的参数展开成向量，为了使用已有的函数对损失函数进行最小化运算；（matrix to vector）&lt;/p&gt;
&lt;p&gt;reshape：vector to matrix，在计算偏导数和损失函数时，矩阵运算&lt;/p&gt;

&lt;p&gt;&lt;span&gt;5、Gradient checking&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 做了backpropagation计算了损失函数对每个参数的偏导数之后，我们需要做一个checking来确定偏导数的计算是否正确，数值计算梯度如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1226720/201805/1226720-20180503201455850-907361284.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;计算公式为：（$\varepsilon$取一个很小的值，领域的概念）&lt;/p&gt;
&lt;p&gt;$\frac{J(\theta+\varepsilon)-J(\theta-\varepsilon)}{2\varepsilon}$&lt;/p&gt;
&lt;p&gt;对于所有的参数，数值计算偏导数的公式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1226720/201805/1226720-20180503202916463-193590403.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果数值计算的梯度和backpropagation算法计算的梯度是近似相等的话，就说明我们的backpropagation做对了，可以继续用backpropagation去计算梯度，训练模型&lt;/p&gt;
&lt;p&gt;注意：在确定了backpropagation做对了之后，应该停止gradient checking，因为这种数值计算梯度的方法是十分的computational expensive，如果不停止的话，模型训练的速度会相当的慢&lt;/p&gt;

&lt;p&gt;&lt;span&gt;6、Random initalization&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如何设定$\Theta$的初始值？在logistic regression中，初始的参数$\theta$被设定为0，那么如果在neural network中也做这种设定呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1226720/201805/1226720-20180503203933644-942484534.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如上所示，如果设定初始的参数全部为0，那么隐藏层的所有的单元的值都会是一样的（在），同时，由后往前传的error $\delta$也会是一样的，由此一来，损失函数对同一个输入对应的参数的偏导数也是一样的，也就是说，虽说是同步更新参数，但其实在网络中同一输入出发的的参数永远都是一样的，也就是说计算出来的隐含单元的值也永远是一样的，$a_1^{(2)}$永远等于$a_2^{(2)}$，如果有更多的隐含单元的话，也是一样的值。无论隐含层有多少的单元数，它们的值都是相同的，这就是一个极度冗余的现象，而且也根本没有发挥出来多个单元该有的作用。&lt;/p&gt;
&lt;p&gt;以上问题称之为&lt;strong&gt;symmetry breaking&lt;/strong&gt;，解决的办法是random initialization，设定初始参数时不可以设置为0，而是一些较小的随机数&lt;/p&gt;

&lt;p&gt;&lt;span&gt;7、Assure structure and Train a neural network&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于一个neural network的工程，我们首先需要做的是确定这个神经网络的结构（层数，每一层的单元数）：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;输入单元数：$x^{(i)}$的维度（$x^{(i)}$代表第i个训练数据）&lt;/li&gt;
&lt;li&gt;输出单元数：类别数&lt;/li&gt;
&lt;li&gt;每一个隐含层的单元数：通常多多益善&lt;/li&gt;
&lt;li&gt;默认一个hidden layer，如超过了一个hidden layer，那就默认每一层的单元数相同&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;结构确定之后就可以开始训练模型了：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;随机初始化权重参数$\Theta$&lt;/li&gt;
&lt;li&gt;使用forward propagation计算每一层的单元的值（包括输出层的值）&lt;/li&gt;
&lt;li&gt;根据以上公式计算cost function&lt;/li&gt;
&lt;li&gt;使用backpropagation计算偏导数&lt;/li&gt;
&lt;li&gt;使用gradient checking去验证backpropagation是否做的正确，若正确，则立即停止gradient checking&lt;/li&gt;
&lt;li&gt;使用gradient descent或者其他的优化函数去最小化cost function，得到权重参数$\Theta$&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;注意这里的损失函数不是一个凸函数，所以我们很有可能得到的是一个局部最小值，这是ok的。&lt;/p&gt;

</description>
<pubDate>Thu, 03 May 2018 13:58:00 +0000</pubDate>
<dc:creator>Echo_fy</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/echo-coding/p/8987704.html</dc:identifier>
</item>
<item>
<title>2018年，请不要再使用OLE生成EXCEL文件 - 氢氦</title>
<link>http://www.cnblogs.com/hhelibeb/p/8984969.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hhelibeb/p/8984969.html</guid>
<description>&lt;p&gt;输出EXCEL文件是ABAP开发工作中的常见需求，为了学习相关技术，我翻译过一篇文章：&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/hhelibeb/p/5787396.html&quot;&gt;使用OLE2对象创建EXCEL文件&lt;/a&gt;&lt;span class=&quot;postTitle2&quot;&gt;，并且一度乐在其中&lt;/span&gt;&lt;span class=&quot;postTitle2&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;最近几个月，经过与若干EXCEL打印程序的艰苦斗争，以及对abap2xlsx和&lt;a href=&quot;http://www.cnblogs.com/hhelibeb/p/8422711.htm&quot; target=&quot;_blank&quot;&gt;XLSX Workbench的使用&lt;/a&gt;。我逐渐意识到OLE实在是一种不适合输出EXCEL的技术，虽然它似乎是大部分ABAP开发者实现相关功能的首选方案。它的缺点很多，优点则乏善可陈...它的过度使用，对业界是一件不好的事情。为了让一些新人不至于误入歧途、选用不合理的技术进行开发工作，我决定写下这篇文章。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;下面就来逐一列数以OLE方式生成EXCEL文件的各种缺点，以及它的替代品。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;本文链接：&lt;a id=&quot;Editor_Edit_hlEntryLink&quot; title=&quot;view: 2018年的开发者不应再使用OLE生成EXCEL文件&quot; href=&quot;http://www.cnblogs.com/hhelibeb/p/8984969.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/hhelibeb/p/8984969.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;转载请注明&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;OLE的缺点&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;st&quot;&gt;OLE即&lt;a href=&quot;https://en.wikipedia.org/wiki/Object_Linking_and_Embedding&quot; target=&quot;_blank&quot;&gt;Object Linking and Embedding&lt;/a&gt;对象链接与嵌入，通过查阅&lt;a href=&quot;https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenole2.htm&quot; target=&quot;_blank&quot;&gt;ABAP文档&lt;/a&gt;可知，在ABAP中，OLE可以&lt;strong&gt;用于在表示层处理外部对象&lt;/strong&gt;。只支持windows自动化对象。典型的应用场景是与Microsoft Office产品进行交互。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;st&quot;&gt;基于这一信息，我们可以得知两件事情：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;st&quot;&gt;OLE需要在表示层运行（通俗地说，即需要在用户的设备上运行）&lt;br/&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;st&quot;&gt;OLE只能经由SAP客户端与&lt;/span&gt;支持OLE的应用进行交互&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这两个特性是使用OLE方式输出EXCEL时产生各种的问题的重要来源。下面来一一说明这些问题。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;（注：下文中所提到的OLE，如无特指，均指使用生成EXCEL文件时使用的OLE）&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;1，运行速度慢&lt;/h3&gt;
&lt;p&gt;使用OLE生成EXCEL的速度很慢，是每个有过相关开发经验的人都体验到的事情，特别是某些涉及到动态行列的表单（需要用到大量复制/粘贴操作），有时这类程序的99%以上的运行时间都花在OLE操作上面。此外，既然OLE需要在用户的电脑上通过应用程序交互的方式来运作，用户的计算机的性能和可用资源也可能会对程序的运行效率产生一定影响。&lt;/p&gt;
&lt;h3&gt;2，兼容性差&lt;/h3&gt;
&lt;p&gt;OLE的技术原理决定了用户必须装有Office软件和SAP客户端软件（如SAP GUI, NWBC等）才能正常运行相关程序。如果软件安装不正确，或者某些版本之间的兼容性不良好，就可能会导致程序无法正常运行。而且问题会很难排查和解决，最后往往只能请IT支持人员为用户升级Office软件、SAP客户端，甚至重装Windows系统。&lt;/p&gt;
&lt;p&gt;另一方面，如果用户没有安装SAP客户端，而是使用基于Web的客户端访问SAP系统，OLE程序也无法运行。本人在前些天就遇到这样一个需求：把ERP已有的某个打印程序迁移到SAP SRM系统上面。这本来是很简单的事情。但是，由于该打印程序选择了OLE输出EXCEL、调用EXCEL打印预览的方式实现打印功能，因此无法迁移到SRM，因为SRM的用户界面是基于浏览器的，无论是WebDynpro还是SAP GUI for HTML，都不会支持OLE。最终只好用SmartForms重写了打印部分。&lt;/p&gt;
&lt;p&gt;一个速度慢、兼容性差的程序，其用户体验是不好的。&lt;strong&gt;重视用户体验的程序设计者，不应该使用这一技术。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;3，开发效率低&lt;/h3&gt;
&lt;p&gt;ABAP中有几个专门用来处理OLE的关键字：CALL METHOD，CREATE OBJECT，GET PROPERTY，SET PROPERTY，FREE OBJECT。通过它们开发者可以在ABAP中写出类似于VBA的代码。大部分ABAP开发者在写OLE代码之前的第一件是是在EXCEL中录制宏，然后将宏中的代码&quot;翻译&quot;成ABAP代码，对于不了解VBA的开发者来说，这是一个额外的负担。此外，开发者需要将数据从ABAP的数据结构（内表，结构）映射至EXCEL的单元格，很多开发者特别是新入门的开发者在这方面没有很好的组织能力，写出的代码中充满了魔法数、不合理的数据结构。耦合度高、可读性差、也较难改用其它表单输出技术输出。&lt;/p&gt;
&lt;p&gt;由于1和2的存在，开发者自己在调试程序时甚至都要花上不少额外的时间，等待程序完成...综合各种原因，OLE的开发效率是很低的。&lt;strong&gt;重视开发速度的实施项目里，不应该选择使用这一技术。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以下是一段典型的OLE代码，可以看到意义不显明的数字，动态的行操作等...&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;DATA&lt;/span&gt;: c_line &lt;span&gt;TYPE&lt;/span&gt;&lt;span&gt; i.

c_line &lt;/span&gt;= &lt;span&gt;27&lt;/span&gt;&lt;span&gt;.

&lt;/span&gt;&lt;span&gt;DO&lt;/span&gt; &lt;span&gt;3&lt;/span&gt; &lt;span&gt;TIMES&lt;/span&gt;&lt;span&gt;.
  c_line &lt;/span&gt;= c_line + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.
  &lt;/span&gt;&lt;span&gt;ADD&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;TO&lt;/span&gt;&lt;span&gt; lc_row.
  &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; excel_row_insert &lt;span&gt;USING&lt;/span&gt; wsheetobj c_line lc_row &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.
  &lt;/span&gt;&lt;span&gt;CASE&lt;/span&gt; sy-&lt;span&gt;index.
    &lt;span&gt;WHEN&lt;/span&gt; &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row  &lt;span&gt;8&lt;/span&gt;  gw_mseg-&lt;span&gt;dmbtr.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row  &lt;span&gt;9&lt;/span&gt;  gw_mseg-&lt;span&gt;tax.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row  &lt;span&gt;10&lt;/span&gt;  gw_mseg-&lt;span&gt;dmbtr_t.
      &lt;/span&gt;&lt;span&gt;CLEAR&lt;/span&gt;&lt;span&gt; gw_mseg.
    &lt;span&gt;WHEN&lt;/span&gt; &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row &lt;span&gt;1&lt;/span&gt;  &lt;span&gt;'&lt;/span&gt;&lt;span&gt;本次收货总计：&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row &lt;span&gt;4&lt;/span&gt;  lwa_out-&lt;span&gt;menge.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row &lt;span&gt;8&lt;/span&gt;  lwa_out-&lt;span&gt;dmbtr.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row &lt;span&gt;9&lt;/span&gt;  lwa_out-&lt;span&gt;tax1.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row &lt;span&gt;10&lt;/span&gt; lwa_out-&lt;span&gt;dmbtr_t.
      &lt;/span&gt;&lt;span&gt;IF&lt;/span&gt; lc_page &amp;lt;&amp;gt; lwa_out-&lt;span&gt;page.
        &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_delete_row &lt;span&gt;USING&lt;/span&gt;&lt;span&gt; lc_row.
        lc_row &lt;/span&gt;= lc_row - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.
      &lt;/span&gt;&lt;span&gt;ENDIF&lt;/span&gt;&lt;span&gt;.
    &lt;span&gt;WHEN&lt;/span&gt; &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;.
      &lt;/span&gt;&lt;span&gt;PERFORM&lt;/span&gt; frm_fill_xls &lt;span&gt;USING&lt;/span&gt;  lc_row &lt;span&gt;11&lt;/span&gt;&lt;span&gt; gc_name.
    &lt;span&gt;WHEN OTHERS&lt;span&gt;.
  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;ENDCASE&lt;/span&gt;&lt;span&gt;.
&lt;/span&gt;&lt;span&gt;ENDDO&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;4，维护困难&lt;/h3&gt;
&lt;p&gt;如果说开发效率低，会让项目实施人员痛苦一时。那么OLE带来的程序维护困难，则会让接下来的维护人员受到长期的折磨。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;OLE的专有语法使得静态分析工具难以对其进行分析，这就使得代码质量的控制变得困难。我们在实践Code Inspector的时候，只能被迫无视OLE代码的检查结果，因为这种情况下的结果并不正确可靠。&lt;/li&gt;
&lt;li&gt;开发难度大、开发者水平的不足使得程序的可读性和可扩展性可能比较差，修改困难。&lt;/li&gt;
&lt;li&gt;可测试性差。OLE代码的耦合度普遍过高（没有把数据的处理和前端的展示逻辑很好的区分开），所以即便成功修改了程序，要验证修改的正确性也是困难的..&lt;/li&gt;
&lt;li&gt;可能要花大力气处理未来的兼容问题。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;相信每一个开发者都希望自己能成为创造价值的人，而非成为总是在应付不应存在的技术债务的还债人。也就是说，稍具同理心的人，也不应该为程序的维护者留下这样的债务。&lt;strong&gt;尊重劳动者的人，不应该选择使用这一技术。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;5，可控性差&lt;/h3&gt;
&lt;p&gt;本节是专门针对打印功能的讨论。出于对数据一致性、数据安全的控制需求，某些公司希望可以用户的控制打印行为：在打印内容输出到系统外部之后，锁定相关的数据（比如，打印过的采购订单不可以再编辑）。如果是使用SAP自身SmartForms等技术，可以从相关函数的参数获取到表单的输出状态（output_done）。但如果使用OLE技术，则无法实现这样的控制。&lt;/p&gt;
&lt;p&gt;这是因为，对SAP系统而言，SmartForms的打印预览是在SAP系统内进行的，系统可以准确地获知预览内容是否被输出到外部；而相对的，对于任何基于OLE操作EXCEL的打印方式而言，在实际打印发生前，打印内容都必须输出到外部，这使得系统失去了对相关内容的控制能力。以采购订单为例，在运行基于SmartForms开发的打印程序时，用户可以选择预览表单、同时不将其输出，这时系统认为采购订单没有被输出到外部，会保持其可编辑的状态，显然这是合理的；但如果换成OLE操作EXCEL输出内容、调用Excel的打印预览的话，进入打印预览之前，系统就已经将内容输出到外部了（即已经将内容输出到被打开的EXCEL应用中），此时采购订单需要被锁定，可是用户会认为这是不合理的，因为在业务上，用户只是想预览一下内容而已，并不是真的要打印，实际上也没有执行打印动作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;希望对表单内容有更好的控制能力时，不应该选用这一技术。&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;替代品&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;从Office2007开始，微软逐渐推广了&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa338205(v=office.12).aspx&quot; target=&quot;_blank&quot;&gt;Open XML格式&lt;/a&gt;。这一格式的存在催生了新的生成EXCEL文件的技术实现方式。以下介绍我接触过的两种，相比OLE，它们有着相似的优点：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;速度快&lt;/li&gt;
&lt;li&gt;平台独立&lt;/li&gt;
&lt;li&gt;支持后台处理&lt;/li&gt;
&lt;/ul&gt;&lt;h3 align=&quot;left&quot;&gt;XLSX Workbench&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/994049/201805/994049-20180503171650187-1325253394.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;一种可视化表单生成工具，相比复杂的OLE，可以用少量代码+一些拖拽和配置来生成EXCEL报表，性能更好。按XLSX Workbench的文档介绍，它有九大特性：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;无需ABAP编程技能&lt;/li&gt;
&lt;li&gt;可视化设计方式&lt;/li&gt;
&lt;li&gt;高性能&lt;/li&gt;
&lt;li&gt;支持后台处理&lt;/li&gt;
&lt;li&gt;强大的表单格式特性支持&lt;/li&gt;
&lt;li&gt;支持公式&lt;/li&gt;
&lt;li&gt;支持图片&lt;/li&gt;
&lt;li&gt;支持图表&lt;/li&gt;
&lt;li&gt;支持树&lt;/li&gt;
&lt;/ul&gt;&lt;p align=&quot;left&quot;&gt;官方文档：&lt;a href=&quot;https://sites.google.com/site/sapxlwb/home&quot; target=&quot;_blank&quot;&gt;https://sites.google.com/site/sapxlwb/home&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;XLSX Workbench是我眼中的首选方案，因为它的可视化编辑工具真的很方便。通过这个工具，开发者只需要简单地将数据放入设计好的context结构，并且在可视化工具中将context绑定到具体的单元格，就可以生成EXCEL文件了：&lt;span id=&quot;sites-page-title&quot; dir=&quot;ltr&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;DATA&lt;/span&gt;: l_data &lt;span&gt;TYPE&lt;/span&gt;&lt;span&gt; zcontext.

&lt;/span&gt;&lt;span&gt;CALL&lt;/span&gt; &lt;span&gt;FUNCTION&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ZXLWB_CALLFORM&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
  &lt;span&gt;EXPORTING&lt;/span&gt;&lt;span&gt;
    iv_formname    &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ZXLWBFORM&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    iv_context_ref &lt;/span&gt;=&lt;span&gt; l_data
  &lt;/span&gt;&lt;span&gt;EXCEPTIONS&lt;/span&gt;&lt;span&gt;
    OTHERS         &lt;/span&gt;= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;.
&lt;/span&gt;&lt;span&gt;IF&lt;/span&gt; sy-subrc &lt;span&gt;NE&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt; .
  &lt;/span&gt;&lt;span&gt;MESSAGE&lt;/span&gt; &lt;span&gt;ID&lt;/span&gt; sy-msgid &lt;span&gt;TYPE&lt;/span&gt; sy-msgty &lt;span&gt;NUMBER&lt;/span&gt; sy-&lt;span&gt;msgno
          &lt;/span&gt;&lt;span&gt;WITH&lt;/span&gt; sy-msgv1 sy-msgv2 sy-msgv3 sy-&lt;span&gt;msgv4 .
&lt;/span&gt;&lt;span&gt;ENDIF&lt;/span&gt; .
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p&gt;也可以轻松地将表单输出方式切换为SmartForms：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;DATA&lt;/span&gt;: fm_name &lt;span&gt;TYPE&lt;/span&gt;&lt;span&gt; rs38l_fnam,
      l_data  &lt;/span&gt;&lt;span&gt;TYPE&lt;/span&gt;&lt;span&gt; zcontext.

&lt;/span&gt;&lt;span&gt;CALL&lt;/span&gt; &lt;span&gt;FUNCTION&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;SSF_FUNCTION_MODULE_NAME&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
  &lt;span&gt;EXPORTING&lt;/span&gt;&lt;span&gt;
    formname           &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ZSMARTFORM&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
  &lt;span&gt;IMPORTING&lt;/span&gt;&lt;span&gt;
    fm_name            &lt;/span&gt;=&lt;span&gt; fm_name
  &lt;/span&gt;&lt;span&gt;EXCEPTIONS&lt;/span&gt;&lt;span&gt;
    no_form            &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
    no_function_module &lt;/span&gt;= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
    OTHERS             &lt;/span&gt;= &lt;span&gt;3&lt;/span&gt;&lt;span&gt;.

&lt;/span&gt;&lt;span&gt;CALL&lt;/span&gt; &lt;span&gt;FUNCTION&lt;/span&gt;&lt;span&gt; fm_name
  &lt;/span&gt;&lt;span&gt;EXPORTING&lt;/span&gt;&lt;span&gt;
    it_data &lt;/span&gt;= l_data.
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;abap2xlsx&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/994049/201805/994049-20180503173218907-1111228042.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; abap2xlsx的优势：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/994049/201805/994049-20180503172312135-71910961.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可能是最知名的ABAP开源项目。该项目包含很多简单易上手的例子代码。在与XLSX Workbench对比后，我没有选用它，是因为它似乎不能将EXCEL的样式处理和ABAP的数据处理分离，据此我认为，使用它带来的开发难度和维护难度要稍高一点点（当然比OLE好得多）。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/ivanfemia/abap2xlsx&quot; target=&quot;_blank&quot;&gt;https://github.com/ivanfemia/abap2xlsx&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 03 May 2018 13:39:00 +0000</pubDate>
<dc:creator>氢氦</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hhelibeb/p/8984969.html</dc:identifier>
</item>
</channel>
</rss>