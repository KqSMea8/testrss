<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>99%的面试官都会问到的Java面试题 - Java修炼记</title>
<link>http://www.cnblogs.com/Javaba/p/9754673.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Javaba/p/9754673.html</guid>
<description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;最近是招聘季，所谓金九银十，正是跳槽的好几节。今天，给大家整理了一些Java面试常考的经典题目，我们一道一道来分析一下。&lt;/p&gt;

&lt;p&gt;1、谈谈你对 Java 平台的理解？“Java 是解释执行”，这句话正确吗？&lt;/p&gt;
&lt;p&gt;考点分析：对于这类笼统的问题，你需要尽量表现出自己的思维深入并系统化，Java 知识理解得也比较全面，一定要避免让面试官觉得你是个“知其然不知其所以然”的人。毕竟明白基本组成和机制，是日常工作中进行问题诊断或者性能调优等很多事情的基础，相信没有招聘方会不喜欢“热爱学习和思考”的面试者。&lt;/p&gt;
&lt;p&gt;回归正题，对于 Java 平台的理解，可以从很多方面简明扼要地谈一下，例如：Java 语言特性，包括泛型、Lambda 等语言特性；基础类库，包括集合、IO/NIO、网络、并发、安全等基础类库。对于我们日常工作应用较多的类库，面试前可以系统化总结一下，有助于临场发挥。&lt;/p&gt;
&lt;p&gt;下图是我总结的一个相对宽泛的蓝图供你参考。&lt;/p&gt;

&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1080&quot; data-height=&quot;603&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/7564501-c78840661eb5e33b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp&quot; alt=&quot;&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/7564501-c78840661eb5e33b&quot; data-original-width=&quot;1080&quot; data-original-height=&quot;603&quot; data-original-format=&quot;image/jpeg&quot; data-original-filesize=&quot;31814&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;2、对比Hashtable、HashMap、TreeMap有什么不同？&lt;/p&gt;
&lt;p&gt;考点分析：上面的回答，只是对一些基本特征的简单总结，针对Map相关可以扩展的问题很多，从各种数据结构、典型应用场景，到程序设计实现的技术考量，尤其是在Java 8里，HashMap本身发生了非常大的变化，这些都是经常考察的方面。&lt;/p&gt;

&lt;p&gt;很多朋友向我反馈，面试官似乎钟爱考察HashMap的设计和实现细节，所以今天我会增加相应的源码解读，主要专注于下面几个方面：&lt;/p&gt;
&lt;p&gt;理解Map相关类似整体结构，尤其是有序数据结构的一些要点。&lt;/p&gt;
&lt;p&gt;从源码去分析HashMap的设计和实现要点，理解容量、负载因子等，为什么需要这些参数，如何影响Map的性能，实践中如何取舍等。&lt;/p&gt;
&lt;p&gt;理解树化改造的相关原理和改进原因。 &lt;/p&gt;
&lt;p&gt;除了典型的代码分析，还有一些有意思的并发相关问题也经常会被提到，如HashMap在并发环境可能出现无限循环占用CPU、size不准确等诡异的问题。 &lt;/p&gt;
&lt;p&gt;我认为这是一种典型的使用错误，因为HashMap明确声明不是线程安全的数据结构，如果忽略这一点，简单用在多线程场景里，难免会出现问题。&lt;/p&gt;
&lt;p&gt;理解导致这种错误的原因，也是深入理解并发程序运行的好办法。对于具体发生了什么，你可以参考这篇很久以前的分析，里面甚至提供了示意图，我就不再重复别人写好的内容了。 &lt;/p&gt;
&lt;p&gt;3、Java 提供了哪些 IO 方式？ NIO 如何实现多路复用？&lt;/p&gt;
&lt;p&gt;考点分析：在实际面试中，从传统 IO 到 NIO、NIO 2，其中有很多地方可以扩展开来，考察点涉及方方面面，比如：&lt;/p&gt;
&lt;p&gt;基础 API 功能与设计， InputStream/OutputStream 和 Reader/Writer 的关系和区别。&lt;/p&gt;
&lt;p&gt;NIO、NIO 2 的基本组成。&lt;/p&gt;
&lt;p&gt;给定场景，分别用不同模型实现，分析 BIO、NIO 等模式的设计和实现原理。&lt;/p&gt;
&lt;p&gt;NIO 提供的高性能数据操作方式是基于什么原理，如何使用？&lt;/p&gt;
&lt;p&gt;或者，从开发者的角度来看，你觉得 NIO 自身实现存在哪些问题？有什么改进的想法吗？&lt;/p&gt;
&lt;p&gt;IO 的内容比较多，专栏一讲很难能够说清楚。IO 不仅仅是多路复用，NIO 2 也不仅仅是异步 IO，尤其是数据操作部分，会在专栏下一讲详细分析。&lt;/p&gt;
&lt;p&gt;4、后台服务出现明显“变慢”，谈谈你的诊断思路？&lt;/p&gt;
&lt;p&gt;考点分析：今天我选择的是一个常见的并且比较贴近实际应用的的性能相关问题，我提供的回答包括两部分。&lt;/p&gt;
&lt;p&gt;在正面回答之前，先探讨更加精确的问题定义是什么。有时候面试官并没有表达清楚，有必要确认自己的理解正确，然后再深入回答。&lt;/p&gt;
&lt;p&gt;从系统、应用的不同角度、不同层次，逐步将问题域尽量缩小，隔离出真实原因。具体步骤未必千篇一律，在处理过较多这种问题之后，经验会令你的直觉分外敏感。&lt;/p&gt;
&lt;p&gt;大多数工程师也许并没有全面的性能问题诊断机会，如果被问到也不必过于紧张，你可以向面试官展示诊断问题的思考方式，展现自己的知识和综合运用的能力。接触到一个陌生的问题，通过沟通，能够条理清晰地将排查方案逐步确定下来，也是能力的体现。&lt;/p&gt;
&lt;p&gt;面试官可能会针对某个角度的诊断深入询问，兼顾工作和面试的需求，我会针对下面一些方面进行介绍。目的是让你对性能分析有个整体的印象，在遇到特定领域问题时，即使不知道具体细节的工具和手段，至少也可以找到探索、查询的方向。&lt;/p&gt;
&lt;p&gt;我将介绍业界常见的性能分析方法论。&lt;/p&gt;
&lt;p&gt;从系统分析到JVM、应用性能分析，把握整体思路和主要工具。对于线程状态、JVM内存使用等很多方面，我在专栏前面已经陆陆续续介绍了很多，今天这一讲也可以看作是聚焦性能角度的一个小结。&lt;/p&gt;
&lt;p&gt;5、谈谈你的GC调优思路？&lt;/p&gt;
&lt;p&gt;考点分析：今天考察的GC调优问题是JVM调优的一个基础方面，很多JVM调优需求，最终都会落实在GC调优上或者与其相关，我提供的是一个常见的思路。&lt;/p&gt;
&lt;p&gt;真正快速定位和解决具体问题，还是需要对JVM和GC知识的掌握，以及实际调优经验的总结，有的时候甚至是源自经验积累的直觉判断。面试官可能会继续问项目中遇到的真实问题，如果你能清楚、简要地介绍其上下文，然后将诊断思路和调优实践过程表述出来，会是个很好的加分项。&lt;/p&gt;
&lt;p&gt;专栏虽然无法提供具体的项目经验，但是可以帮助你掌握常见的调优思路和手段，这不管是面试还是在实际工作中都是很有帮助的。另外，我会还会从下面不同角度进行补充：&lt;/p&gt;
&lt;p&gt;涉及具体的GC类型，JVM的实际表现要更加复杂。目前，G1已经成为新版JDK的默认选择，所以值得你去深入理解。&lt;/p&gt;
&lt;p&gt;因为G1 GC一直处在快速发展之中，我会侧重它的演进变化，尤其是行为和配置相关的变化。并且，同样是因为JVM的快速发展，即使是收集GC日志等方面也发生了较大改进。&lt;/p&gt;
&lt;p&gt;从GC调优实践的角度，理解通用问题的调优思路和手段。&lt;/p&gt;

&lt;p&gt;我在面试候选人中经常能体会到，有些面试者确实是认真努力工作，但坦白说表现出的能力水平却不足以通过面试，通常是两方面原因：&lt;/p&gt;
&lt;p&gt;1、“知其然不知其所以然”。做了多年技术，开发了很多业务应用，但似乎并未思考过种种技术选择背后的逻辑。坦白说，我并不放心把具有一定深度的任务交给他。&lt;/p&gt;
&lt;p&gt;2、知识碎片化，不成系统。在面试中，面试者似乎无法完整、清晰地描述自己所开发的系统，或者使用的相关技术。平时可能埋头苦干，或者过于死磕某个实现细节，并没有抬头审视这些技术。&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 07:30:00 +0000</pubDate>
<dc:creator>Java修炼记</dc:creator>
<og:description>前言 最近是招聘季，所谓金九银十，正是跳槽的好几节。今天，给大家整理了一些Java面试常考的经典题目，我们一道一道来分析一下。 经典面试题 1、谈谈你对 Java 平台的理解？“Java 是解释执行”</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Javaba/p/9754673.html</dc:identifier>
</item>
<item>
<title>小程序webview实践 - 大转转FE</title>
<link>http://www.cnblogs.com/zhuanzhuanfe/p/9754482.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhuanzhuanfe/p/9754482.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/01.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;大家好，我是转转开放业务部前端负责人张所勇，今天主要来跟大家分享小程序webview方面的问题，但我并不会讲小程序的webview原理，而我主要想讲的是小程序内如何嵌入H5。&lt;/p&gt;
&lt;p&gt;那么好多同学会想了，不就是用web-view组件就可以嵌入了吗，是的，如果咱们的小程序和H5的业务比较简单，那直接用webview接入就好了，但我们公司的h5除小程序之外，还运行在转转app、58app、赶集app等多个端，如何能实现一套代码在多端运行，这是我今天主要想分享的，因此今天分享更适合h5页面比较复杂，存在多端运行情况的开发者，期待能给大家提供一些多端兼容的思路。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/02.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面我先跟大家介绍下今天演讲主要的提纲。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;小程序技术演进&lt;/li&gt;
&lt;li&gt;webview VS 小程序&lt;/li&gt;
&lt;li&gt;h5多端兼容方案&lt;/li&gt;
&lt;li&gt;小程序sdk设计&lt;/li&gt;
&lt;li&gt;webview常见问题&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;转转小程序演进过程&quot;&gt;1 转转小程序演进过程&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/03.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;相信在座的很多同学的产品跟转转小程序经历了类似的发展过程，我们转转小程序是从去年五月份开始开发的，那时候也是小程序刚出来不久，我们就快速用原生语法搭建了个demo，功能很简单，就是首页列表页详情页。&lt;/p&gt;
&lt;p&gt;然后我们从7月份开始进入了第二个阶段，这时候各种中大型公司已经意识到了，借助微信的庞大用户群，小程序是一个很好的获客渠道，因此我们也从demo阶段正式的开始了小程序开发。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/9c59a59c-bf61-40c8-ad88-654f82123564.jpg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那时候我们整个团队从北京跑到广州的微信园区里面去封闭开发，我们一方面在做小程序版本的转转，实现了交易核心流程，苦苦的做了两三个月，DAU始终也涨不上去，另一方面我们也在做很多营销活动的尝试，我们做了一款简单的测试类的小游戏，居然几天就刷屏了，上百万的pv，一方面我们很欣喜，另一方面也很尴尬，因为大家都是来玩的，不是来交易的，所以我们就开始了第三阶段。&lt;/p&gt;
&lt;p&gt;这个阶段我们进行了大量的开发工作，让我们的小程序功能和体验接近了转转APP，那到了今年6月份，我们的小程序进入了微信钱包里面，我们的DAU峰值也达到了千万级别，这时候可以说已经成为了一个风口上的新平台，这个时候问题来了，公司的各条线业务都开始想接入到小程序里面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/04.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;于是乎就有了上面这段对话。&lt;br/&gt;所以，为了能够更好接入各业务线存量h5页面和新的活动页，我们开始着手进行多端适配的工作。&lt;/p&gt;
&lt;p&gt;那我们会考虑三种开发方案（我这里只说缺点）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/05.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在webview这个组件出来以前，我们是采用第一种方案，用纯小程序开发所有业务页面，那么适合的框架有现在主流的三种，wepy，mpvue、taro，缺点是不够灵活，开发成本巨大，真的很累，尤其是业务方来找我们想介入小程序，但他们的开发者又不会小程序，当时又不能嵌入H5，所以业务方都希望我们来开发，所有业务都来找，你们可以想想成本又多高，这个方案肯定是不可行，第二种方案，就是一套代码编译出多套页面，在不同端运行，mpvue和taro都可以，我们公司有业务团队在使用mpvue，编译出来的结果不是特别理性，一是性能上面没有达到理想的状态，二是api在多端兼容上面二次改造的成本很高，各个端api差异很大，如果是一个简单的活动页还好，但如果是一个跟端有很大功能交互的页面，那这种方式其实很难实现。&lt;/p&gt;
&lt;p&gt;那我们采用的是第三种方案，目前我们的小程序是作为一个端存在，像app一样，我们只做首页、列表、详情、购买等等核心页面都是用小程序开发，每个业务的页面、活动运营页面都是H5，并且用webview嵌入，这样各个业务接入的成本非常低，但这也有缺点，1是小程序与h5交互和通信比较麻烦，二是我们的app提供了很大功能支持，这些功能在小程序里面都需要对应的实现&lt;/p&gt;
&lt;h2 id=&quot;webview-vs-小程序&quot;&gt;2 webview VS 小程序&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/07.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这张图是我个人的理解。（并不代表微信官方的看法）&lt;br/&gt;把webview和小程序在多个方面做了比对。&lt;/p&gt;
&lt;h2 id=&quot;h5多端兼容方案&quot;&gt;3 h5多端兼容方案&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/09.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;未来除了小程序之外，可能会多的端存在，比如智能小程序等等，那我们期望的结果是什么呢，就是一套H5能运行于各个环境内。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/10.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这可能是最差的一个case，h5判断所在的环境，去调用不同api方法，这个case的问题是，业务逻辑特别复杂，功能耦合非常严重，也基本上没有什么复用性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/11.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那我们转转采取的是什么方案呢？&lt;/p&gt;
&lt;p&gt;分三块，小程序端，用WePY框架，H5这块主要是vue和react，中间通过一个adapter来连接。我们转转的端特别多，除了小程序还包括纯转转app端，58端，赶集端，纯微信端，qq端，浏览器端，所以H5页面需要的各种功能，在每个端都需要对应的功能实现，比如登录、发布、支付、个人中心等等很多功能，这些功能都需要通过adapter这个中间件进行调用，接下来详细来讲。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/12.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我这里就不贴代码了，我只讲下adapter的原理，首先adapter需要初始化，做两件事情，一是产出一个供h5调用的native对象，二是需要检测当前所处的环境，然后根据环境去异步加载sdk文件，这里的关键点是我们要做个api调用的队列，因为sdk加载时异步的过程，如果期间页面内发生了api调用，那肯定得不到正确的响应，因此你要做个调用队列，当sdk初始化完毕之后再处理这些调用，其实adapter原理很简单，如果你想实现多端适配，那么只需要根据所在的环境去加载不同的sdk就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/13.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;做好adapter之后，你需要让每个h5的项目都引入adapter文件，并且在调用api的时候，都统一在native对象下面调用。&lt;/p&gt;
&lt;h2 id=&quot;小程序sdk设计&quot;&gt;4 小程序sdk设计&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/15.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们总结小程序提供给H5的功能大体分为这四种，第一是基于小程序的五种跳转能力，比如关闭当前页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/16.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那我们看到小程序提供了这五种跳转方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/17.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第二是直接使用微信sdk提供的能力，比如扫码，这个比较简单。第三是h5打开小程序的某些页面，这个是最常用的，比如进入下单页等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/18.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对应每个api，小程序这边都需要实现对应的页面功能，大家看这几个图，skipToChat就是进到我们的IM页面，下面依次是进入个人主页，订单详情页，下单页面，其实我们的小程序开发的主要工作也是去做这些基础功能页面，然后提供给H5，各个业务基本都是H5实现，接入到小程序里面来，我们只做一个平台。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/19.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这是进入个人主页方法的实现，其实就是进入了小程序profile这个页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/20.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第四就是h5与小程序直接的通信能力，这个比较集中体现在设置分享信息和登录这块。&lt;/p&gt;
&lt;h3 id=&quot;设置分享&quot;&gt;4.1 设置分享&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/22.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面（adapter）做好了以后，在h5这块调用就一句话就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/23.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;小程序和h5 之间的通信基本上常用两种方式，一个是postMessage，这个方法大家都知道，只有在三种情况才可以触发，后退、销毁和分享，但也有个问题，这个方法是基础库1.7.1才开始支持的，1.7.1以下就只能通过第二种方法来传递数据，也就是设置和检测webview组件的url变化，类似pc时代的iframe的通信方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/24.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;sdk这块怎么做呢，定义一个share方法，首先需要检测下基础库版本，看是否支持postMessage，如果支持直接调用，如果不支持，把分享参数拼接到url当中，然后进行一次重载，所以说通过url传递数据有个缺点，就是页面可能需要刷新一次才能设置成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/25.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们看下分享信息设置这块，小程序这端，首先通过bindmessage事件接收h5传回来的数据，然后在用户分享的时候onShareAppMessage判断有没有回传的数据，如果没有就到webviewurl当中取，否则就是用默认分享数据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/26.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;h5调分享这块，我们也做了一些优化，传统方式是要四步才能掉起分享面板，点页面里的某个按钮，然后给用户个提示层，用户再去点右上角的点点点，再点转发，才能拉起分享面板。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/27.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们后来改成了这样，点分享按钮，把分享信息带到一个专门的小程序页面，这个页面里面放一个button，type=share，点一下就拉起来面板了，虽然是一个小小的改动，但能大幅提高分享成功率的，因为很多用户对右上角的点点点不太敏感。&lt;/p&gt;
&lt;h3 id=&quot;登录&quot;&gt;4.2 登录&lt;/h3&gt;
&lt;p&gt;接下来我们看看登录功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/29.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;分两种情况，接入的H5可能一开始就需要登录态，也可能开始不需要登录态中途需要登录，这两种情况我们约定了h5通过自己的url上一个参数进行控制。&lt;/p&gt;
&lt;ol readability=&quot;1&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;一开始就需要登录态的情况，那么在加载webview之前，首先进行授权登录，然后把登录信息拼接到url里面，再去来加载webview，在h5里面通过adapter来把登录信息提取出来并且存到cookie里，这样h5一进来就是有登陆态的。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;一开始不需要登录态的情况，一进入小程序就直接通过webview加载h5，h5调用login方法的时候，把needLogin这个参数拼接到url中，然后利用api进行重载，就走了第一种情况进行授权登录了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;webview常见问题&quot;&gt;5 webview常见问题&lt;/h2&gt;
&lt;h3 id=&quot;区分环境&quot;&gt;5.1 区分环境&lt;/h3&gt;
&lt;p&gt;第一是你如何区分h5所在的环境是小程序里面的webview还是纯微信浏览器，为什么要区分呢，因为你的H5在不同环境需要不同的api，比如我们的业务，下单的时候，如果是小程序，那么我们需要进入小程序的下单页，如果是纯微信，我们之间进纯微信的下单页，这两种情况的api实现是不一样的，那么为什么难区分，大家可能知道，小程序的组件分为内置组件和原生组件，内置组件就是小程序定义的view、scroll-view这些基本的标签，原生组件就是像map啊这种，这其实是调用了微信的原生能力，webview也是一种类似原生的组件，为什么说是类似原生的组件，微信并没有为小程序专门做一套webview机制，而是直接用微信本身的浏览器，所以小程序webview和微信浏览器的内核都是一样的，包括UA头都是一模一样，cookie、storage本地存储数据都是互通的，都是一套，因此我们很难区分具体是在哪个环境。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/32.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;还好微信提供了一个环境变量，但这个变量不是很准确，加载h5以后第一个页面可以及时拿到，但后续的页面都需要在微信的sdk加载完成以后才能拿到，因此建议大家在wx.ready或者是weixinjsbridgeready事件里面去判断，区别就在于前者需要加载jweixin.js才有，但这里有坑，坑在于h5的开发者可能并不知道你这个检测过程需要时间，是一个异步的过程，他们可能页面一加载就需要调用一些api，这时候就可能会出错，因此你一定要提供一个api调用的队列和等待机制。&lt;/p&gt;
&lt;h3 id=&quot;支付&quot;&gt;5.2 支付&lt;/h3&gt;
&lt;p&gt;第二个常见问题是支付，因为小程序webview里面不支持直接掉起微信支付，所以基本上需要支付的时候，都需要来到小程序里面，支付完再回去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/34.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面做好了以后，在h5这块调用就一句话就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/35.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们转转的业务分两种支付情况，一是有的业务h5有自己完善的交易体系，下单动作在h5里面就可以完成，他们只需要小程序付款，因此我们有一个精简的支付页，进来直接就拉起微信支付，还有一种情况是业务需要小程序提供完整的下单支付流程，那么久可以之间进入我们小程序的收银台来，图上就是sdk里面的基本逻辑，我们通过payOnly这个参数来决定进到哪个页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/36.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们再看下小程序里面精简支付怎么实现的，就是onload之后之间调用api拉起微信支付，支付成功以后根据h5传回来的参数，如果是个小程序页面，那之间跳转过去，否则就刷新上一个webview页面，然后返回回去。&lt;/p&gt;
&lt;h3 id=&quot;formid收集&quot;&gt;5.3 formId收集&lt;/h3&gt;
&lt;p&gt;第三个问题是formId，webview里面没有办法收集formId，这有什么影响呢，没有formId就没法发服务通知，没有服务通知，业务就没办法对新用户进行召回，这对业务来讲是一个很大的损失，目前其实我们也没有很好的方案收集。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/38.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们目前主要通过两种方式收集，访问量比较大的这种webview落地页，我们会做一版小程序的页面或者做一个小程序的中转页，只要用户有任何触摸页面的操作，都可以收集到formid，另外一种就是h5进入小程序页面时候收集，比如支付，IM这些页面，但并不是每个用户都会进到这些页面的，用户可能一进来看不感兴趣，就直接退出了，因此这种方式存在很大的流失。&lt;/p&gt;
&lt;h3 id=&quot;左上角返回&quot;&gt;5.4 左上角返回&lt;/h3&gt;
&lt;p&gt;那怎么解决这种流失呢，我们加了一个左上角返回的功能，。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/40.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;首先进入的是一个空白的中转页，然后进入h5页面，这样左上角就会出现返回按钮了，当用户按左上角的返回按钮时候，页面会被重载到小程序首页去，这个看似简单又微小的动作，对业务其实有很大的影响，我们看两个数字，经过我们的数据统计发现，左上角返回按钮点击率高达70%以上，因为这种落地页一般是被用户分享出来的，以前纯h5的时候只能通过左上角返回，所以在小程序里用户也习惯如此，第二个数字，重载到首页以后，后续页面访问率有10%以上，这两个数字对业务提升其实蛮大的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/41.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其实现原理很简单，都是通过第二次触发onShow时进行处理。&lt;/p&gt;
&lt;p&gt;以上就是我今天全部演讲的内容，谢谢大家！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.zhuanstatic.com/common/img/43.png&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这是我们“大转转FE”的公众号。里面发表了很多FE和小程序方向的原创文章。感兴趣的同学可以关注一下，如果有问题可以在文章底部留言，我们共同探讨。&lt;/p&gt;
&lt;p&gt;同时也感谢掘金举办了这次大会，让我有机会同各位同仁进行交流。在未来的前端道路上，与大家共勉！&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 07:09:00 +0000</pubDate>
<dc:creator>大转转FE</dc:creator>
<og:description>小程序webview实践 张所勇 大家好，我是转转开放业务部前端负责人张所勇，今天主要来跟大家分享小程序webview方面的问题，但我并不会讲小程序的webview原理，而我主要想讲的是小程序内如何嵌</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhuanzhuanfe/p/9754482.html</dc:identifier>
</item>
<item>
<title>day53_BOS项目_05 - 黑泽明军</title>
<link>http://www.cnblogs.com/chenmingjun/p/9754441.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenmingjun/p/9754441.html</guid>
<description>&lt;ul&gt;&lt;li&gt;今天内容安排：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;1、添加定区&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;2、定区分页查询&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;3、hessian入门 --&amp;gt; 远程调用技术&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;4、基于hessian实现定区关联客户&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h1&quot;&gt;&lt;span&gt;&lt;strong&gt;1、添加定区&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;定区可以将取派员、分区、客户信息关联到一起。&lt;br/&gt;页面：WEB-INF/pages/base/decidedzone.jsp&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQ9g9.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第一步：使用下拉框展示取派员数据，需要修改combobox的URL地址，发送请求
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;选择取派员&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;easyui-combobox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;staff.id&quot;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;valueField:'id',textField:'name',&lt;br/&gt;url:'${pageContext.request.contextPath}/staffAction_listajax.action'&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;浏览器效果截图：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQHSq.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第二步：在StaffAction中提供listajax()方法，查询没有作废的取派员，并返回json数据
&lt;pre&gt;
&lt;code class=&quot;hljs php&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String listajax() throws IOException {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;&amp;lt;Staff&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt; = staffService.findListNoDelete();&lt;br/&gt;String[] excludes = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; String[] {&lt;span class=&quot;hljs-string&quot;&gt;&quot;decidedzones&quot;&lt;/span&gt;}; &lt;br/&gt;this.writeList2Json(&lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt;, excludes);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第三步：在StaffService中提供方法查询没有作废的取派员&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Staff&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findListNoDelete&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Staff.class);&lt;br/&gt;detachedCriteria.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(Restrictions.eq(&lt;span class=&quot;hljs-string&quot;&gt;&quot;deltag&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;));&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; staffDao.findByCriteria(detachedCriteria);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第四步：在IBaseDao中提供通用的条件查询方法&lt;br/&gt;IBaseDao.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findByCriteria&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;DetachedCriteria detachedCriteria&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;BaseDaoImpl.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findByCriteria&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;DetachedCriteria detachedCriteria&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().findByCriteria(detachedCriteria);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;浏览器效果截图：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQFaO.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第五步：使用数据表格datagrid展示未关联到定区的分区数据&lt;br/&gt;decidedzone.jsp
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;valign&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;关联分区&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;subareaGrid&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;easyui-datagrid&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:300px;height:300px&quot;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;url:'${pageContext.request.contextPath}/subareaAction_listajax.action',&lt;br/&gt;fitColumns:true,singleSelect:false&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;thead&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;field:'id',width:30,checkbox:true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;编号&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;field:'addresskey',width:150&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;关键字&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;field:'position',width:200,align:'right'&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;位置&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;thead&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;浏览器效果截图：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQ5eu.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第六步：在SubareaAction中提供listajax()方法，查询未关联到定区的分区数据，并返回json数据
&lt;pre&gt;
&lt;code class=&quot;hljs php&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String listajax() throws IOException {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;&amp;lt;Subarea&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt; = subareaService.findListNotAssociation();&lt;br/&gt;String[] excludes = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; String[] {&lt;span class=&quot;hljs-string&quot;&gt;&quot;region&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;decidedzone&quot;&lt;/span&gt;}; &lt;br/&gt;this.writeList2Json(&lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt;, excludes);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Service层代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Subarea&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findListNotAssociation&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Subarea.class);&lt;br/&gt;detachedCriteria.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(Restrictions.isNull(&lt;span class=&quot;hljs-string&quot;&gt;&quot;decidedzone&quot;&lt;/span&gt;)); &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; subareaDao.findByCriteria(detachedCriteria);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;浏览器效果截图：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQB0A.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第七步：为添加/修改定区窗口中的&lt;code&gt;保存按钮&lt;/code&gt;绑定事件
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height:31px;overflow:hidden;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;split&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;datagrid-toolbar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;save&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;icon&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;icon-save&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;easyui-linkbutton&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;plain&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;保存&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;br/&gt;$(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#save&quot;&lt;/span&gt;).click(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; v = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#addDecidedzoneForm&quot;&lt;/span&gt;).form(&lt;span class=&quot;hljs-string&quot;&gt;&quot;validate&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (v) {&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#addDecidedzoneForm&quot;&lt;/span&gt;).submit(); &lt;br/&gt;}&lt;br/&gt;});&lt;br/&gt;});&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第八步：提交上面的添加定区的表单，发现id名称冲突&lt;br/&gt;浏览器截图：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQY5r.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;代码截图：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQz6R.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;即：&lt;code&gt;关联分区&lt;/code&gt;中的复选框的field的名称叫id，&lt;code&gt;定区编码&lt;/code&gt;的name名称也叫id，造成冲突，服务器不能够区分开他们哪个id是&lt;code&gt;定区&lt;/code&gt;，还是哪个id是&lt;code&gt;分区&lt;/code&gt;，如何解决呢？&lt;br/&gt;答：我们应该类比于&lt;code&gt;选择取派员&lt;/code&gt;的name的名称staff.id这样，如上图绿色框框中的那样，即我们可以把&lt;code&gt;关联分区&lt;/code&gt;中的复选框的field的名称改为subareaid。&lt;br/&gt;即：我们要在Subarea类中提供getSubareaid()方法，就相当于给Subarea类中的字段id重新起个名字，这样返回的json数据中就含有subareaid字段了。&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQXTe.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;Subarea.java&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQmJd.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;改过之后，浏览器截图：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQjQX.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第十步：创建定区管理的Action，提供add()方法保存定区，提供subareaid数组属性接收多个分区的subareaid
&lt;pre readability=&quot;9.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.bos.web.action;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.context.annotation.Scope;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.stereotype.Controller;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.domain.Decidedzone;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.web.action.base.BaseAction;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Controller&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Scope&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;prototype&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DecidedzoneAction&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseAction&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Decidedzone&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String[] subareaid;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setSubareaid&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] subareaid)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.subareaid = subareaid;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;decidedzoneService.save(model, subareaid);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;list&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Service层代码：&lt;/p&gt;
&lt;pre readability=&quot;11&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;16&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.bos.service.impl;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.stereotype.Service;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.transaction.annotation.Transactional;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.dao.IDecidedzoneDao;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.dao.ISubareaDao;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.domain.Decidedzone;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.domain.Subarea;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.bos.service.IDecidedzoneService;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Transactional&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DecidedzoneServiceImpl&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;IDecidedzoneService&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Autowired&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; IDecidedzoneDao decidedzoneDao;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Autowired&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ISubareaDao subareaDao;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Decidedzone model, String[] subareaid)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;decidedzoneDao.save(model);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (String sid : subareaid) {&lt;br/&gt;Subarea subarea = subareaDao.findById(sid); &lt;br/&gt;subarea.setDecidedzone(model); &lt;/p&gt;&lt;p&gt;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第十一步：配置struts.xml&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;decidedzoneAction_*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;decidedzoneAction&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;{1}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;/WEB-INF/pages/base/decidedzone.jsp&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;action&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;h2&quot;&gt;&lt;span&gt;&lt;strong&gt;2、定区分页查询&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;第一步：decidedzone.jsp页面修改datagrid的URL&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;    &lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;'#grid'&lt;/span&gt;).datagrid( {&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;iconCls&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;'icon-forward'&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;fit&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;border&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;rownumbers&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;striped&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pageList&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;],&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pagination&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;toolbar&lt;/span&gt; : toolbar,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/decidedzoneAction_pageQuery.action&quot;&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;idField&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;'id'&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;columns&lt;/span&gt; : columns,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;onDblClickRow&lt;/span&gt; : doDblClickRow&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第二步：在DecidedzoneAction中提供分页查询方法&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs java&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;pageQuery&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;decidedzoneService.pageQuery(pageBean);&lt;br/&gt;String[] excludes = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; String[] {&lt;span class=&quot;hljs-string&quot;&gt;&quot;currentPage&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageSize&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;detachedCriteria&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;subareas&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;decidedzones&quot;&lt;/span&gt;};&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.writePageBean2Json(pageBean, excludes);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第三步：修改Decidedzone.hbm.xml文件，取消懒加载&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQ0OY.png&quot; alt=&quot;&quot;/&gt;&lt;h2 id=&quot;h3hessian&quot;&gt;&lt;span&gt;&lt;strong&gt;3、hessian入门 --&amp;gt; 远程调用技术&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul readability=&quot;8&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Hessian是一个轻量级的 remoting on http 工具，使用简单的方法提供了&lt;code&gt;RMI(Remote Method Invocation 远程方法调用)&lt;/code&gt;的功能。相比WebService，Hessian更简单、快捷。采用的是二进制&lt;code&gt;RPC协议(Remote Procedure Call Protocol 远程过程调用协议)&lt;/code&gt;，因为采用的是二进制协议，所以它很&lt;code&gt;适合于发送二进制数据&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;常见的远程调用的技术：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;1、webservice（CXF框架、axis框架），偏传统，基于soap（简单对象访问协议）协议，传输的是xml格式的数据，数据冗余比较大，传输效率低。现在也支持json。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;2、httpclient --&amp;gt; 电商项目：淘淘商城，大量使用&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;3、hessian --&amp;gt; http协议、传输的是二进制数据，冗余较少，传输效率较高。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;4、dubbo --&amp;gt; 阿里巴巴&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;Dubbo是阿里巴巴SOA服务化治理方案的核心框架，每天为2,000+个服务提供3,000,000,000+次访问量支持，并被广泛应用于阿里巴巴集团的各成员站点。自开源后，已有不少非阿里系公司在使用Dubbo。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Tengine是由淘宝网发起的Web服务器项目。它在&lt;code&gt;Nginx&lt;/code&gt;的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;hessian有两种发布服务的方式：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;1、使用hessian框架自己提供的HessianServlet发布：com.caucho.hessian.server.HessianServlet&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;2、和spring整合发布服务：org.springframework.web.servlet.DispatcherServlet&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hessian入门案例&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;服务端开发：&lt;br/&gt;第一步：创建一个java web项目，并导入hessian的jar包&lt;br/&gt;第二步：创建一个接口&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HelloService&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;sayHello&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String name&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAllUser&lt;/span&gt;()&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第三步：提供上面接口的实现类&lt;/p&gt;
&lt;pre readability=&quot;5.5&quot;&gt;
&lt;code class=&quot;hljs php&quot; readability=&quot;5&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HelloServiceImpl&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HelloService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String sayHello(String name) {&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sayHello方法被调用了&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello &quot;&lt;/span&gt; + name;&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;&amp;lt;User&amp;gt; findAllUser() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;&amp;lt;User&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;User&amp;gt;();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt;.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;小艺&quot;&lt;/span&gt;));&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt;.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;小军&quot;&lt;/span&gt;));&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;list&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第四步：在web.xml中配置服务&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;hessian&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.caucho.hessian.server.HessianServlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;home-class&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;com.itheima.HelloServiceImpl&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;home-api&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;com.itheima.HelloService&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;hessian&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/hessian&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;客户端开发：&lt;br/&gt;第一步：创建一个客户端项目(普通java项目即可)，并导入hessian的jar包&lt;br/&gt;第二步：创建一个接口（和服务端接口对应）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HelloService&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;sayHello&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String name&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAllUser&lt;/span&gt;()&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第三步：使用hessian提供的方式创建代理对象调用服务&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;10&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Test&lt;/span&gt; &lt;/span&gt;{&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] args) throws MalformedURLException {&lt;br/&gt;HessianProxyFactory &lt;span class=&quot;hljs-keyword&quot;&gt;factory&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; HessianProxyFactory();&lt;br/&gt;HelloService proxy = (HelloService) &lt;span class=&quot;hljs-keyword&quot;&gt;factory&lt;/span&gt;.create(HelloService.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:8080/hessian_server/hessian&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; ret = proxy.sayHello(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;);&lt;br/&gt;System.out.println(ret);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;User&amp;gt; list = proxy.findAllUser();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (User user : list) {&lt;br/&gt;System.out.println(user.getId() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;---&quot;&lt;/span&gt; + user.getName());&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;h4hessian&quot;&gt;&lt;span&gt;&lt;strong&gt;4、基于hessian实现定区关联客户&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h41crm&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1、发布crm服务并测试访问&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;第一步：创建动态的web项目crm，导入hessian的jar&lt;br/&gt;第二步：创建一个crm数据库和t_customer表&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQQei.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;第三步：在web.xml中配置spring的DispatcherServlet
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;remoting&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;load-on-startup&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;load-on-startup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;remoting&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/remoting/*&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第四步：提供接口CustomerService和Customer类、Customer.hbm.xml映射文件&lt;br/&gt;CustomerService.java&lt;/p&gt;
&lt;pre readability=&quot;7.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;9&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; cn.itcast.crm.service;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cn.itcast.crm.domain.Customer;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CustomerService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Customer&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findnoassociationCustomers&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Customer&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findhasassociationCustomers&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String decidedZoneId)&lt;/span&gt;&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;assignCustomersToDecidedZone&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Integer[] customerIds, String decidedZoneId)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第五步：为上面的CustomerService接口提供实现类&lt;/p&gt;
&lt;pre readability=&quot;22&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;38&quot;&gt;package cn.itcast.crm.service.impl;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.hibernate.Session;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cn.itcast.crm.domain.Customer;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cn.itcast.crm.service.CustomerService;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cn.itcast.crm.utils.HibernateUtils;&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CustomerServiceImpl&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CustomerService&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;Customer&amp;gt; findnoassociationCustomers() {&lt;br/&gt;Session session = HibernateUtils.openSession();&lt;br/&gt;session.beginTransaction();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; hql = &lt;span class=&quot;hljs-string&quot;&gt;&quot;from Customer where decidedzone_id is null&quot;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;Customer&amp;gt; customers = session.createQuery(hql).list();&lt;/p&gt;&lt;p&gt;session.getTransaction().commit();&lt;br/&gt;session.close();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; customers;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;Customer&amp;gt; findhasassociationCustomers(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; decidedZoneId) {&lt;br/&gt;Session session = HibernateUtils.openSession();&lt;br/&gt;session.beginTransaction();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; hql = &lt;span class=&quot;hljs-string&quot;&gt;&quot;from Customer where decidedzone_id = ?&quot;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;Customer&amp;gt; customers = session.createQuery(hql).setParameter(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, decidedZoneId).list();&lt;/p&gt;&lt;p&gt;session.getTransaction().commit();&lt;br/&gt;session.close();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; customers;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; assignCustomersToDecidedZone(Integer[] customerIds, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; decidedZoneId) {&lt;br/&gt;Session session = HibernateUtils.openSession();&lt;br/&gt;session.beginTransaction();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; hql2 = &lt;span class=&quot;hljs-string&quot;&gt;&quot;update Customer set decidedzone_id=null where decidedzone_id=?&quot;&lt;/span&gt;;&lt;br/&gt;session.createQuery(hql2).setParameter(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, decidedZoneId).executeUpdate();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; hql = &lt;span class=&quot;hljs-string&quot;&gt;&quot;update Customer set decidedzone_id=? where id =?&quot;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (customerIds != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (Integer id : customerIds) {&lt;br/&gt;session.createQuery(hql).setParameter(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, decidedZoneId).setParameter(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, id).executeUpdate();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;session.getTransaction().commit();&lt;br/&gt;session.close();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第六步：在WEB-INF目录提供spring的配置文件remoting-servlet.xml&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;4&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;customerService&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cn.itcast.crm.service.impl.CustomerServiceImpl&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/customer&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.remoting.caucho.HessianServiceExporter&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;service&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;customerService&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;serviceInterface&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cn.itcast.crm.service.CustomerService&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第七步：发布crm服务&lt;br/&gt;第八步：在hessian_client客户端调用crm服务获得客户数据&lt;br/&gt;注意：拷贝接口CustomerService代码文件放到客户端中，同时必须在hessian_client客户端新建和crm服务端一样的实体Bean目录，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/08/5TQWgy.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;hessian_client客户端调用代码如下：
&lt;pre readability=&quot;9&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;12&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.net.MalformedURLException;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.caucho.hessian.client.HessianProxyFactory;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cn.itcast.crm.domain.Customer;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TestService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;test1&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; MalformedURLException &lt;/span&gt;{&lt;br/&gt;HessianProxyFactory factory = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; HessianProxyFactory();&lt;br/&gt;CustomerService proxy = (CustomerService) factory.create(CustomerService.class, &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:8080/crm/remoting/customer&quot;&lt;/span&gt;);&lt;br/&gt;List&amp;lt;Customer&amp;gt; list = proxy.findnoassociationCustomers();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (Customer customer : list) {&lt;br/&gt;System.out.println(customer);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;客户端控制台输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs perl&quot;&gt;cn.itcast.crm.domain.Customer@59b746f&lt;br/&gt;cn.itcast.crm.domain.Customer@20f92649&lt;br/&gt;cn.itcast.crm.domain.Customer@45409388&lt;br/&gt;cn.itcast.crm.domain.Customer@1295e93d&lt;br/&gt;cn.itcast.crm.domain.Customer@3003ad53&lt;br/&gt;cn.itcast.crm.domain.Customer@41683cc5&lt;br/&gt;cn.itcast.crm.domain.Customer@226dcb0f&lt;br/&gt;cn.itcast.crm.domain.Customer@562e5771&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;服务端控制台输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;Hibernate: &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;&lt;br/&gt;customer0_.id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; id0_,&lt;br/&gt;customer0_.name &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; name0_,&lt;br/&gt;customer0_.station &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; station0_,&lt;br/&gt;customer0_.telephone &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; telephone0_,&lt;br/&gt;customer0_.address &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; address0_,&lt;br/&gt;customer0_.decidedzone_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; decidedz6_0_ &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;&lt;br/&gt;t_customer customer0_ &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;&lt;br/&gt;customer0_.decidedzone_id &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h42boscrm&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2、在bos项目中调用crm服务获得客户数据&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;第一步：在bos项目中导入hessian的jar&lt;br/&gt;第二步：从crm项目中复制CustomerService接口和Customer类到bos项目中&lt;br/&gt;第三步：在spring配置文件中配置一个远程服务代理对象，调用crm服务&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;customerService&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.remoting.caucho.HessianProxyFactoryBean&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;serviceInterface&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.bos.crm.CustomerService&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;serviceUrl&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:8080/crm/remoting/customer&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第四步：将上面的代理对象通过注解方式注入到BaseAction中&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;    @&lt;span class=&quot;hljs-keyword&quot;&gt;Autowired&lt;/span&gt; &lt;br/&gt;protected CustomerService customerService;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第五步：为定区列表页面中的“关联客户”按钮绑定事件，发送2次ajax请求访问DecidedzoneAction，在DecidedzoneAction中调用hessian代理对象，通过代理对象可以远程访问crm获取客户数据，获取数据后进行解析后，填充至左右下拉框中去&lt;/p&gt;
&lt;pre readability=&quot;12&quot;&gt;
&lt;code class=&quot;hljs javascript&quot; readability=&quot;18&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; decidedzoneid;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;doAssociations&lt;/span&gt;()&lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rows = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#grid&quot;&lt;/span&gt;).datagrid(&lt;span class=&quot;hljs-string&quot;&gt;&quot;getSelections&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rows.length == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#customerWindow&quot;&lt;/span&gt;).window(&lt;span class=&quot;hljs-string&quot;&gt;'open'&lt;/span&gt;);&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#noassociationSelect&quot;&lt;/span&gt;).empty();&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationSelect&quot;&lt;/span&gt;).empty();&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url1 = &lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/decidedzoneAction_findnoassociationCustomers.action&quot;&lt;/span&gt;;&lt;br/&gt;$.post(url1, {}, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; data.length; i++) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; id = data[i].id;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = data[i].name;&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#noassociationSelect&quot;&lt;/span&gt;).append(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;option value='&quot;&lt;/span&gt; + id + &lt;span class=&quot;hljs-string&quot;&gt;&quot;'&amp;gt;&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/option&amp;gt;&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}, &lt;span class=&quot;hljs-string&quot;&gt;'json'&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;decidedzoneid = rows[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].id;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url2 = &lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/decidedzoneAction_findhasassociationCustomers.action&quot;&lt;/span&gt;;&lt;br/&gt;$.post(url2, {&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;:decidedzoneid}, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; data.length; i++) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; id = data[i].id;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = data[i].name;&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationSelect&quot;&lt;/span&gt;).append(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;option value='&quot;&lt;/span&gt; + id + &lt;span class=&quot;hljs-string&quot;&gt;&quot;'&amp;gt;&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/option&amp;gt;&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}, &lt;span class=&quot;hljs-string&quot;&gt;'json'&lt;/span&gt;);&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;$.messager.alert(&lt;span class=&quot;hljs-string&quot;&gt;&quot;提示信息&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;请选择一条定区记录进行操作&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;warning&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第六步：为“左右移动按钮”绑定事件&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;》》&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;toRight&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;《《&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;toLeft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;br/&gt;$(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#toRight&quot;&lt;/span&gt;).click(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationSelect&quot;&lt;/span&gt;).append($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#noassociationSelect option:selected&quot;&lt;/span&gt;));&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationSelect&amp;gt;option&quot;&lt;/span&gt;).removeAttr(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selected&quot;&lt;/span&gt;); &lt;br/&gt;});&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#toLeft&quot;&lt;/span&gt;).click(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#noassociationSelect&quot;&lt;/span&gt;).append($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationSelect option:selected&quot;&lt;/span&gt;));&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#noassociationSelect&amp;gt;option&quot;&lt;/span&gt;).removeAttr(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selected&quot;&lt;/span&gt;); &lt;br/&gt;});&lt;br/&gt;});&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第七步：为关联客户窗口中的“关联客户”按钮绑定事件&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;br/&gt;$(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationBtn&quot;&lt;/span&gt;).click(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#associationSelect option&quot;&lt;/span&gt;).attr(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selected&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;selected&quot;&lt;/span&gt;); &lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input[name=id]&quot;&lt;/span&gt;).val(decidedzoneid);&lt;br/&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#customerForm&quot;&lt;/span&gt;).submit();&lt;br/&gt;});&lt;br/&gt;});&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第八步：在定区Action中接收提交的参数，调用crm服务实现定区关联客户的业务功能&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs cpp&quot; readability=&quot;4&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Integer[] customerIds;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setCustomerIds&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Integer[] customerIds)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.customerIds = customerIds;&lt;br/&gt;}&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;assignCustomersToDecidedZone&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;customerService.assignCustomersToDecidedZone(customerIds, model.getId());&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;list&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 08 Oct 2018 07:05:00 +0000</pubDate>
<dc:creator>黑泽明军</dc:creator>
<og:description>今天内容安排： 1、添加定区 2、定区分页查询 3、hessian入门 --&gt; 远程调用技术 4、基于hessian实现定区关联客户 1、添加定区 定区可以将取派员、分区、客户信息关联到一起。页</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenmingjun/p/9754441.html</dc:identifier>
</item>
<item>
<title>解析！2018软件测试官方行业报告 - Vincent83</title>
<link>http://www.cnblogs.com/yingyingja/p/9753616.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yingyingja/p/9753616.html</guid>
<description>&lt;p&gt;前段时间，来自QA Intelligence的2018年度软件测试行业年度调查报告已经隆重出炉了。&lt;/p&gt;
&lt;p&gt;《软件测试行业现状报告》旨在为测试行业和全球测试社区提供最准确的信息，是全球最大的测试行业调研报告，来自80多个国家的约1500名受访者参与了此次调研。&lt;/p&gt;
&lt;p&gt;这份报告针对软件测试的年度行业现状进行了调研，并给出了非常具体的数据统计。对于软件测试从业人员而言，是一个很好的可以用来了解行业趋势、职业状态的窗口，能为我们职业发展的方向提供强有力的数据支撑。&lt;/p&gt;
&lt;p&gt;下面就跟大家一起来解析这份报告都告诉了我们一些什么事情。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.　　首先我们关注的是，测试人员的入行途径：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008111037690-210626394.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以看到相当部分的入行者对于软件测试这个行业有着直观的兴趣，并且很多是从其他行业和职位转行而来。这说明软件测试工程师这样的职位越来越被知晓和了解，而且对于这个行业很多人持看好的态度。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.　　测试工作占工作时间的百分比：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008111715444-335085119.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个数据统计分析的潜台词其实是：“软件测试人员是否是专职测试”。从图标中的高占比可以看出，独立专职的测试仍然是业界主流。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.　　测试人员的薪资状况：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008112140756-877250685.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们最关注的当然是中国测试从业人员的薪资，从图表中我们可以明显看出，中国测试从业人员的起步薪资处在比较低的水平。但随着经验的积累，大于五年经验的测试工程师在薪资水平上有可观的提升。整体薪资虽然只是北美和西欧的一半左右，但是也处在一个比较不错的水准。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.　　软件测试的职能定位和团队规模：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008112839958-620005555.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以看到，测试团队的规模正在逐渐呈现缩减的状态。这与IT行业本身的发展大趋势保持一致，研发节奏的加快，敏捷理念的普遍应用，都使得小规模的团队构成变得越来越流行。&lt;/p&gt;
&lt;p&gt;这一行业现状也可以解释测试人员正越来越多的受到项目经理和开发经理的直接领导。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.　　测试人员的额外工作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008113330992-448858599.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自动化测试工作的高占比是一个很好的现象，也说明了自动化测试技术在项目内受到了更多的重视和成功应用。而其他工作的高占比也说明，软件测试职位正在渐渐摆脱传统的误解和偏见--即将软件测试简单的与功能测试和测试执行等同起来的偏见。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.　　测试方法和方法论：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008113827300-147033367.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;探索性/基于会话的测试仍然是测试方法中的主流。值得注意的是，一些比较新的尝试方法已经在实际工作环境中得到了应用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.　　静态测试：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008114325723-131063641.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;测试人员对于静态测试，各种评审会议的投入明显增加。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.　　测试人员技能提升方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008114608125-433984377.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以看出，测试人员在技能提升这个领域里，对书籍的依赖有所降低。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9.　　测试人员需要的技能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008115044257-155458705.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;沟通能力，自动化技术能力，通用测试方法论占据了前三甲。这些能力你掌握得怎么样呢？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10.　　软件测试的对象：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008115309800-1023342887.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网页测试项目仍然是最主流，而手机项目所占比重已经令人惊讶的超过了桌面应用。网页，APP相关的测试技能是我们测试从业人员的攻坚重点。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11.　　软件开发模式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008115619457-2124047014.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;敏捷和类敏捷型项目已经占到了已经极高的百分比，而DevOps模式的使用已经持续数年稳定增长，看来DevOps有必要成为我们测试进修课程上的必备项目。&lt;/p&gt;

&lt;p&gt; &lt;strong&gt;12.　　自动化测试的应用趋势：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008120058634-1091570151.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自动化测试在研发项目里被使用的比例基本保持稳定，而85%的高占比很好的体现了自动化技术的流行。我们还能看出，自动化技术应用最广的领域仍然是功能和回归测试方面。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;最后我们来看看测试经理对于测试人员素质最关注的要点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1451355/201810/1451355-20181008120353382-755434024.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;想要转行从业测试，或者想要跳槽寻求进一步发展的同学，可以关注一下这些内容啦。&lt;/p&gt;

&lt;p&gt;好了，2018行业报告的解析就到这里，希望可以对从业测试的你有所帮助和启发！&lt;/p&gt;

</description>
<pubDate>Mon, 08 Oct 2018 05:32:00 +0000</pubDate>
<dc:creator>Vincent83</dc:creator>
<og:description>前段时间，来自QA Intelligence的2018年度软件测试行业年度调查报告已经隆重出炉了。 《软件测试行业现状报告》旨在为测试行业和全球测试社区提供最准确的信息，是全球最大的测试行业调研报告，</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yingyingja/p/9753616.html</dc:identifier>
</item>
<item>
<title>使用Python解决Teamviewer被误认为商业用途的问题 - 银河使者</title>
<link>http://www.cnblogs.com/nokiaguy/p/9753800.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/nokiaguy/p/9753800.html</guid>
<description>&lt;p&gt;Teamviewer是一款非常酷的远程控制系统，可以远程协同工作，分为个人版本和商业版本。个人版本可以基于非商业目的自由使用，商业版本需要付费（至少一个月49美元）。&lt;/p&gt;
&lt;p&gt;Teamviewer会根据一套算法检测当前是否用于商业用途，可能根据在线时间，是否跨网段远程访问，当前操作系统是否为专业或企业版，以及其他因素进行检测，具体算法不得而知，不过有时明明只是个人非盈利目的使用，却弹出下面的对话框，在1到5分钟后就会自动断开，然后就连不上了，触发重新运行Teamviewer。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/13614258-cc04eee8325d448a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其实解决这个问题也很简单，Teamviewer是怎么知道哪台机器疑似商业用途的呢？为什么每次运行Teamviewer，密码每次都不一样，但ID是一样的呢？&lt;/p&gt;
&lt;p&gt;如下图，这是Teamviewer的主界面。之所以Teamviewer能控制每一个客户端，是因为ID已经与本机绑定。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/13614258-d169e5c285bb7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;ID通常与本机的Mac地址（网卡的地址）以及其他信息有关（如配置文件中的属性值），不同操作系统不同。本文将通过Python语言自动修改这个ID，只要ID改变了，即使被识别出了商业用途，再次启动，由于ID已经改变，就相当于重新在一台全新的机器上运行，再识别出商业用途，再改变一次ID就可以了。&lt;/p&gt;
&lt;p&gt;本文解决Mac版本的Teamviewer的疑似商业用途问题，Windows版的问题请见本文最后的部分。&lt;/p&gt;
&lt;p&gt;本文使用Python 2.7编写，为什么使用Python 2.7呢，因为本文的读者并不都是Python程序员，Mac OS X默认自带Python 2.7，所以直接就可以运行本文提供的脚本。如果读者机器上安装了Python 3.x，请切换到Python 2.7，然后再运行本文提供的脚本。建议读者使用Anaconda，这样可以很容易地在Python 2.7和Python 3.x之间切换。&lt;/p&gt;
&lt;p&gt;其实更改ID的基本原理就是必须要用root权限执行脚本（在普通用户状态使用sudo切换到root权限），然后获取当前用户对应的目录，删除一些配置文件，然后修改一些配置文件中的ID值。具体的文件和操作直接看后面的代码吧。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; glob
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; platform
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; re
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; random
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; string

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
--------------------------------
修改Teamviewer for Mac的ID
--------------------------------
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;  必须是Mac系统，否则本脚本无效&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; platform.system() != &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Darwin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;必须是MAC OS X系统.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    sys.exit();

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; os.geteuid() !=&lt;span&gt; 0:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;必须用root权限执行脚本.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    sys.exit();
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;  如果在root权限，os.environ['SUDO_USER']返回用户名，如lining&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; os.environ.has_key(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;SUDO_USER&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    USERNAME &lt;/span&gt;= os.environ[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;SUDO_USER&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; USERNAME == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
       &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;请通过sudo命令切换到root权限&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
       sys.exit();
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;请通过sudo命令切换到root权限&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    sys.exit();
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;  下面两个目录是要搜索包含teamviewer字样的文件&lt;/span&gt;
HOMEDIRLIB = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/Users/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + USERNAME  + &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/library/preferences/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
GLOBALLIB  &lt;/span&gt;=  &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/library/preferences/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

CONFIGS &lt;/span&gt;=&lt;span&gt; []

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;  获取配置文件的完全路径&lt;/span&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; listdir_fullpath(d):
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; [os.path.join(d, f) &lt;span&gt;for&lt;/span&gt; f &lt;span&gt;in&lt;/span&gt;&lt;span&gt; os.listdir(d)]

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; file &lt;span&gt;in&lt;/span&gt;&lt;span&gt; listdir_fullpath(HOMEDIRLIB):
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;teamviewer&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;.lower() &lt;span&gt;in&lt;/span&gt;&lt;span&gt; file.lower():
        CONFIGS.append(file)

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; CONFIGS:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; (&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
为发现配置文件，没什么可以删除的
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 删除配置文件&lt;/span&gt;
&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;发现配置文件:\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; file &lt;span&gt;in&lt;/span&gt;&lt;span&gt; CONFIGS:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; file

    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
这些配置文件将被永久删除
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;)
    raw_input(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请按&amp;lt;Enter&amp;gt;键盘删除文件或按&amp;lt;CTR+C&amp;gt;组合键退出程序&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; file &lt;span&gt;in&lt;/span&gt;&lt;span&gt; CONFIGS:
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
            os.remove(file)    &lt;/span&gt;//&lt;span&gt;  删除文件
        &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;不能删除文件，是否权限不够?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
            sys.exit();
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;搞定!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 下面的文件会替换里面的值&lt;/span&gt;
TMBINARYES =&lt;span&gt; [
&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/Applications/TeamViewer.app/Contents/MacOS/TeamViewer&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/Applications/TeamViewer.app/Contents/MacOS/TeamViewer_Service&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/Applications/TeamViewer.app/Contents/Helpers/TeamViewer_Desktop&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
]
&lt;/span&gt;//&lt;span&gt;  这些文件必须存在，否则退出程序
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; file &lt;span&gt;in&lt;/span&gt;&lt;span&gt; TMBINARYES:
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; os.path.exists(file):
        &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;
    &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;File not found: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; file)
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Install TeamViewer correctly&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        sys.exit();

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;  开始替换上述文件中的值&lt;/span&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; idpatch(fpath,platf,serial):
    file &lt;/span&gt;= open(fpath, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;r+b&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    binary &lt;/span&gt;=&lt;span&gt; file.read()
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 定义模板&lt;/span&gt;
    PlatformPattern = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IOPlatformExpert.{6}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    SerialPattern &lt;/span&gt;=  &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IOPlatformSerialNumber%s%s%sUUID&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 开始替换&lt;/span&gt;
    binary =&lt;span&gt; re.sub(PlatformPattern, platf, binary)
    binary &lt;/span&gt;= re.sub(SerialPattern % (chr(0), &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[0-9a-zA-Z]{8,8}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, chr(0)), SerialPattern%&lt;span&gt;(chr(0), serial, chr(0)), binary)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 更新待修改的文件&lt;/span&gt;
    file = open(fpath,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;wb&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).write(binary)
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; True
&lt;/span&gt;//&lt;span&gt;  产生随机数，用于生成随机的ID
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt; random_generator(size=8, chars=string.ascii_uppercase +&lt;span&gt; string.digits):
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;''&lt;/span&gt;.join(random.choice(chars) &lt;span&gt;for&lt;/span&gt; _ &lt;span&gt;in&lt;/span&gt;&lt;span&gt; range(size))

RANDOMSERIAL &lt;/span&gt;=&lt;span&gt; random_generator()
RANDOMPLATFORM &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IOPlatformExpert&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + random_generator(6&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;  开始依次替换前面文件中的内容&lt;/span&gt;
&lt;span&gt;for&lt;/span&gt; file &lt;span&gt;in&lt;/span&gt;&lt;span&gt; TMBINARYES:
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
            idpatch(file,RANDOMPLATFORM,RANDOMSERIAL)
        &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;错误：不能修改： &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; file
            sys.exit();

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PlatformDevice: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; RANDOMPLATFORM
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PlatformSerial: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; RANDOMSERIAL

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
ID需要成功
!!! 必须重启计算机才能生效，good luck !!!!
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;将上面的代码保存在change_id.py文件中，然后在Python2.7环境下执行如下命令：&lt;/p&gt;
&lt;p&gt;sudo python change_id.py&lt;/p&gt;
&lt;p&gt;按一下&amp;lt;Enter&amp;gt;键，就搞定了，最后重启一下机器，会发现ID改变了。现在不会有人来打扰你了，尽管用Teamviewer吧。&lt;/p&gt;
&lt;p&gt;如果使用Windows，可以按下面步骤搞定。&lt;/p&gt;
&lt;p&gt;本文以最新的teamviewer13为例，步骤如下：&lt;/p&gt;
&lt;p&gt;step1：&lt;/p&gt;
&lt;p&gt;卸载teamviewer13&lt;/p&gt;
&lt;p&gt;step2：&lt;/p&gt;
&lt;p&gt;删除下面2个目录&lt;br/&gt;C:\Program Files (x86)\TeamViewer&lt;br/&gt;C:\Users\Administrator\AppData\Roaming\TeamViewer&lt;/p&gt;
&lt;p&gt;step3：&lt;/p&gt;
&lt;p&gt;在注册表中删除下面的键值，如果没有就不用删除了。&lt;/p&gt;
&lt;p&gt;HKEY_LOCAL_MACHINE\SOFEWARE\Wow6432Node\TeamViewer&lt;br/&gt;HKEY_CURRENT_USERS\Software\TeamViewer&lt;br/&gt;HKEY_LOCAL_MACHINE\SOFTWARE\TeamViewer&lt;/p&gt;
&lt;p&gt;step4：&lt;/p&gt;
&lt;p&gt;修改电脑网卡的Mac地址，这个有专门的软件，也可也在硬件设备中找到网卡进行修改，不过有的驱动不支持修改Mac地址。&lt;/p&gt;
&lt;p&gt;step5：&lt;/p&gt;
&lt;p&gt;如果成功修改了Mac地址，重新安装teamviewer13。&lt;/p&gt;
&lt;p&gt;这样ID就变了，如果过段时间再被误认为商业用途，重复这一过程即可。&lt;/p&gt;
&lt;p&gt;如果读者觉得太麻烦，就直接用下面的版本好了。&lt;/p&gt;
&lt;p&gt;如果读者觉得太麻烦，可以关注“极客起源”公众号，输如teamviewer下载经过处理的teamviewer版本，包括一个ID自动修改工具。&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 05:24:00 +0000</pubDate>
<dc:creator>银河使者</dc:creator>
<og:description>Teamviewer是一款非常酷的远程控制系统，可以远程协同工作，分为个人版本和商业版本。个人版本可以基于非商业目的自由使用，商业版本需要付费（至少一个月49美元）。 Teamviewer会根据一套</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/nokiaguy/p/9753800.html</dc:identifier>
</item>
<item>
<title>记录一次垃圾短信网站短链分析 - lonecloud</title>
<link>http://www.cnblogs.com/lonecloud/p/9753785.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lonecloud/p/9753785.html</guid>
<description>

&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;最近天天收到叫我办理某银行的信用卡的短信，让我们感觉和真的一样，其实，很多都是套路，都是别人拿来套用户的信息的。下面我们来&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;images/message.png&quot;&gt;&lt;img src=&quot;file://d/md/note/随笔/10月/images/message.png?lastModify=1538975622&quot; alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;看下短信&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/917948/201810/917948-20181008131433672-472904282.png&quot; alt=&quot;&quot; width=&quot;394&quot; height=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;常理分析&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;分析一下下面这条短信，首先乍一看这个短信好像很真实的感觉，广发银行，并且带有申请链接。并且号码并不是手机号码，而是短信中心的号码。&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;深度分析&lt;/span&gt;&lt;/h2&gt;
&lt;ol class=&quot;ol-list&quot; start=&quot;&quot; readability=&quot;-2&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;上网查询该中心号码：&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;images/20181008130123.png&quot;&gt;&lt;img src=&quot;file://d/md/note/随笔/10月/images/20181008130123.png?lastModify=1538975622&quot; alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/917948/201810/917948-20181008131451780-1248287379.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;可以断定该短信为垃圾短信了&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol class=&quot;ol-list&quot; start=&quot;2&quot; readability=&quot;-2&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;网址分析&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;通过浏览器访问打开短信中的链接可以看到如下页面跳转&lt;img src=&quot;https://img2018.cnblogs.com/blog/917948/201810/917948-20181008131505516-513089136.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;images/analyse.png&quot;&gt;&lt;img src=&quot;file://d/md/note/随笔/10月/images/analyse.png?lastModify=1538975622&quot; alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;有以下操作：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;短连接跳转到该网站，应该是一个呗用来做日志请求的&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;以上是一个请求过程，其实这个过程大概是这样，短连接-&amp;gt;请求真实网址-&amp;gt;进行网站数据统计-&amp;gt;跳转广发申请信用卡页面，然后你再去填写相关信息。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;ol-list&quot; start=&quot;3&quot;&gt;
&lt;ol class=&quot;ol-list&quot; start=&quot;3&quot;&gt;&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;其中危机：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;ol-list&quot; readability=&quot;1&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;由于为短连接，可能黑客可能在中途拦截，或者注入一些抓取数据的脚本，导致用户信息泄露&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;当你访问该网站时候，你的用户的IP会被CNZZ统计&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;虽然说现在该网站最终请求的是一个真正的广发银行信用卡申请的网站，这是推广的一个网站&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;思考&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;ol-list&quot; readability=&quot;-1&quot;&gt;&lt;li class=&quot;md-list-item md-focus-container&quot; readability=&quot;1&quot;&gt;
&lt;p class=&quot;md-end-block md-focus&quot;&gt;&lt;span class=&quot;md-expand&quot;&gt;现在的垃圾短信众多，其实办理信用卡的短信一般也不会发送到你的手机上，一般这种短信百分之90都是假的，要么是套取你的个人信息，要么就是推荐你办理信用卡赚取佣金的&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 08 Oct 2018 05:16:00 +0000</pubDate>
<dc:creator>lonecloud</dc:creator>
<og:description>垃圾办信用卡短信数据分析 最近天天收到叫我办理某银行的信用卡的短信，让我们感觉和真的一样，其实，很多都是套路，都是别人拿来套用户的信息的。下面我们来看下短信 常理分析 分析一下下面这条短信，首先乍一看</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lonecloud/p/9753785.html</dc:identifier>
</item>
<item>
<title>HRMS(人力资源管理系统)-SaaS架构设计-概要设计实践 - 何戈洲</title>
<link>http://www.cnblogs.com/hegezhou_hot/p/9753733.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hegezhou_hot/p/9753733.html</guid>
<description>&lt;h2&gt;&lt;span&gt;一、开篇&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;      &lt;span&gt;前期我们针对架构准备阶段及需求分析这块我们写了2篇内容《&lt;/span&gt;&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/p/9682677.html&quot;&gt;&lt;span&gt;HRMS(人力资源管理系统)-从单机应用到SaaS应用-架构分析(功能性、非功能性、关键约束)-上篇&lt;/span&gt;&lt;/a&gt;&lt;span&gt;》《&lt;/span&gt;&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/p/9691597.html&quot;&gt;&lt;span&gt;HRMS(人力资源管理系统)-从单机应用到SaaS应用-架构分析(功能性、非功能性、关键约束)-下篇&lt;/span&gt;&lt;/a&gt;&lt;span&gt;》内容来展开说明。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       &lt;span&gt;本篇主将详细的阐述架构设计过程中概要架构设计要点来和大家共同交流，掌握后续如何强化概要架构设计在架构设计中作用，帮助我们快速确认架构的方向及核心大框架。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;      &lt;strong&gt;&lt;span&gt;在阐述具体的概要架构工作方法之前，还请大家先参考我们限定的业务场景：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;     &lt;strong&gt;&lt;span&gt;1、HRMS系统的介绍？（涵盖哪些功能？价值和作用是什么？行业什么情况？）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;      请阅读&lt;span&gt;《&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/p/9655146.html&quot;&gt;&lt;span&gt;HRMS(人力资源管理系统)-从单机应用到SaaS应用-系统介绍&lt;/span&gt;&lt;/a&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;      &lt;strong&gt;2、本章分析的内容将围绕4类企业代表的业务场景，（区分不同规模企业的关注点，规模将决定系统的设计方案）&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;      本篇将围绕4类企业代表来阐述不同规模企业对于HRMS的需求及应用&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;    &lt;strong&gt;  A、100人以下的中小企业&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span&gt;      B、500人以下的大中型企业&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span&gt;      C、1000人以上的集团化大企业&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span&gt;      D、全球类型的公司体系（几万人）&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;      &lt;strong&gt;3、架构师在设计该系统时的职责及具备的核心能力是什么？&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;      请阅读&lt;span&gt;《&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/category/260425.html&quot;&gt;&lt;span&gt;系统架构系列-开篇介绍&lt;/span&gt;&lt;/a&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;一、关于概要架构阶段&lt;/h2&gt;

&lt;h3&gt;1.1、概要架构的定义&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;       概念架构就是对系统设计的最初构想，就是把系统最关键的设计要素及交互机制确定下来，然后再考虑具体的技术应用，设计出实际架构。概念架构阶段主抓大局，不拘小节，不过分关注设计实现的细节内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;       概要架构阶段的特点：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;Ø满足“架构=组件+交互”的基本定义(所有架构都逃离不了该模式)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ø对高层组件的“职责”进行笼统界定，并给出高层组件的相互关系&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ø不应涉及接口细节&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;在讲具体的概要架构设计实践之前，请大家思考以下问题：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;Ø&lt;/span&gt;&lt;span&gt;不同系统的架构，为什么不同？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ø&lt;/span&gt;&lt;span&gt;架构设计中，应何时确立架构大方向的不同？&lt;span&gt;（功能、质量、约束&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;1.2、行业现状&lt;/h3&gt;
&lt;h4&gt;1.2.1、误将“概要架构”等同于“理想架构”&lt;/h4&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;架构设计是功能需求驱动的，对吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;架构设计是用例驱动的，对吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;实际上架构设计的驱动力：功能+质量+约束&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;1.2.2、误把“阶段”当“视图”&lt;/h4&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;span&gt;概要架构阶段还是概念视图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;阶段体现先后关系，视图体现并列关系&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;概要架构阶段根据重大需求、特殊需求、高风险需求形成稳定的高层架构设计成果&lt;/span&gt;&lt;/p&gt;

&lt;/blockquote&gt;
&lt;h3&gt;1.3、主要工作内容及目标&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125016845-873852174.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125017425-1952927229.png&quot; alt=&quot;image&quot; width=&quot;621&quot; height=&quot;329&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       概念架构是一个架构设计阶段，必须在细化架构设计阶段之前，针对重大需求，特色需求、高风险需求、形成文档的高层架构设计成果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       重大需求塑造概念架构，这里的重大需求涵盖功能、质量、约束等3类需求的关键内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       如果只考虑功能需求来设计概念架构，将导致概念架构沦为“理想化的架构”，这个脆弱的架构不久就会面临“大改”的压力，甚至直接导致项目失败。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;二、概要架构阶段的方法及科学实践过程是什么？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125018118-295108052.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125018659-197267607.png&quot; alt=&quot;image&quot; width=&quot;836&quot; height=&quot;399&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;整体可分为3个阶段：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span&gt;1、通过鲁棒图：初步设计的目标就是发现职责，运用“职责协作链”原理画鲁棒图&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、高层分割：运用成熟的经验及方法论，结合场景选择合适的架构模式来确定系统的层级关系&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、质疑驱动：考虑非功能性需求来不断驱动概要架构设计过程。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;2.1、&lt;span&gt;初步设计的目标就是发现职责，运用“职责协作链”原理画鲁棒图&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125019158-1255126492.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125019763-2078573891.png&quot; alt=&quot;image&quot; width=&quot;562&quot; height=&quot;293&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;鲁棒图的三种对象：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span&gt;•边界对象对模拟外部环境和未来系统之间的交互进行建模。边界对象负责接 收外部输入、处理内部内容的解释、并表达或传递相应的结果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;•控制对象对行为进行封装，描述用例中事件流的控制行为。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;•实体对象对信息进行描述，它往往来自领域概念，和领域模型中的对象有良好的对应关系。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;span&gt;初步设计原则&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span&gt;•初步设计的目标是“发现职责”，为高层切分奠定基础&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;•初步设计“不是”必须的，但当“待设计系统”对架构师而言并无太多直接 经验时，则强烈建议进行初步设计&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;•基于关键功能（而不是对所有功能）、借助鲁棒图（而不是序列图，序列图太细节）进行初 步设计&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125020163-1215350762.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125020488-1916324182.png&quot; alt=&quot;image&quot; width=&quot;280&quot; height=&quot;69&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       关于这几个对象的区别，请参考《&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/p/9682677.html&quot;&gt;HRMS(人力资源管理系统)-从单机应用到SaaS应用-架构分析(功能性、非功能性、关键约束)-上篇&lt;/a&gt;&lt;span&gt;》中有描述鲁棒图的基本用法说明。后续本文将直接使用不再复述具体的用法。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       大家看完鲁棒图发现鲁棒图也有实体、控制及边界对象，怎么这么类似web系统时用到的MVC模式，那么我们这里对比下这2个模式的异同点:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125021522-1121719936.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125022093-16081952.png&quot; alt=&quot;image&quot; width=&quot;664&quot; height=&quot;375&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;     &lt;span&gt;  通过上面的对比我们发现，鲁棒图能够更全面的体现架构设计过程中涉及的内容，单独的架构模式更侧重其中的部分架构层次，比如逻辑架构采取MVC的模式。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;2.2、高层分割（概念架构形成的具体操作方法）&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1）、直接分层&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125022662-1469931393.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125023268-1852667357.png&quot; alt=&quot;image&quot; width=&quot;612&quot; height=&quot;262&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2）、先划分为子系统，再针对每个子系统分层&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125023725-641094523.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125024378-1838240713.png&quot; alt=&quot;image&quot; width=&quot;817&quot; height=&quot;211&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;针对高层分割，我们可以采取分阶段的模式来进行落地实践：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;1、直接划分层次：直接把系统划分为多个层次，梳理清晰各层次间的关联关系&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、分为2个阶段：先划分为多个子系统，然后再梳理子系统的层次，梳理清晰没格子系统的层次关系&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;针对分层模式的引入，这里分享几类划分模式及方法：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;span&gt;1、逻辑层：&lt;span&gt;逻辑层，上层使用下层观念；&lt;span&gt;不关注物理划分，也不关注通用性&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、物理层：分布部署在不同机器上&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、通用性分层：通用性越多，所处层次越靠下&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;2.2.1、Layer：逻辑层&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Layer：&lt;/strong&gt;逻辑层，上层使用下层观念；&lt;span&gt;不关注物理划分，也不关注通用性。Layer是逻辑上组织代码的形式。比如逻辑分层中表现层，服务层，业务层，领域层，他们是软件功能来划分的。并不指代部署在那台具体的服务器上或者，物理位置。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125025028-1456809649.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125025468-674488942.png&quot; alt=&quot;image&quot; width=&quot;340&quot; height=&quot;544&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;      &lt;span&gt;  多层Layer架构模式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       诸如我们常见的三层架构模式，三层架构&lt;/span&gt;&lt;span&gt;(3-tier architecture) 通常意义上的三层架构就是将整个业务应用划分为：界面层（User Interface layer）、业务逻辑层（Business Logic Layer）、数据访问层（Data access layer）。区分层次的目的即为了“&lt;/span&gt;&lt;span&gt;高内聚低耦合&lt;/span&gt;&lt;span&gt;”的思想。在软件体系架构设计中，分层式结构是最常见，也是最重要的一种结构。微软推荐的分层式结构一般分为三层，从下至上分别为：数据访问层、业务逻辑层（又或称为领域层）、表示层。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;逻辑层次的架构能帮助我们解决逻辑耦合，达到灵活配置，迁移。 &lt;span&gt;一个良好的逻辑分层可以带来：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span&gt;A、逻辑组织代码/代码逻辑的清晰度&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;B、易于维护（可维护性）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;C、代码更好的重用（可重用性）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;D、更好的团队开发体验（开发过程支持）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;2.2.2、Tier：物理层&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;span&gt;Tier：物理层，各分层分布部署在不同机器上，Tier这指代码运行部署的具体位置，是一个物理层次上的划为，Tier就是指逻辑层Layer具体的运行位置。所以逻辑层可以部署或者迁移在不同物理层，一个物理层可以部署运行多个逻辑层。&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125026018-1761160263.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125026880-607176091.png&quot; alt=&quot;image&quot; width=&quot;703&quot; height=&quot;383&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       Tier指代码运行的位置，多个Layer可以运行在同一个Tier上的，不同的Layer也可以运行在不同的Tier上，当然，前提是应用程序本身支持这种架构。以J2EE和.NET平台为例，大多数时候，不同的Layer之间都是直接通过DLL或者JAR包引用来完成调用的（例如：业务逻辑层需要引用数据访问层），这样部署的时候，也只能将多个Layer同时部署在一台服务器上。相反，不同的Layer之间如果是通过RPC的方式来实现通信调用的，部署的时候，便可以将不同的Layer部署在不同的服务器上面，这也是很常见的解耦设计。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;一个良好的物理架构可以带来：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span&gt;A、性能的提升&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;B、可伸缩性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;C、容错性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;D、安全性&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;2.2.3、通用性分层&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;span&gt;采取通用性分层模式，原则是通用性越多，所处层次越靠下&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125027692-1110285245.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125028312-1212148934.png&quot; alt=&quot;image&quot; width=&quot;704&quot; height=&quot;491&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;并且各层的调用关系是自上而下的，越往下通用性越高。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;2.3、质疑驱动，不断完善系统架构（质量属性及约束决定了架构的演变）&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;基于系统中的重大功能来塑造概念架构的高层框架，过程中需要通过质量及约束等非功能性需求不断质疑初步的概念架构，逐步让这个概念架构完善，能够满足及支撑各类质量及约束的要求。具体的操作方法我们可以采取之前篇幅《&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/p/9682677.html&quot;&gt;HRMS(人力资源管理系统)-从单机应用到SaaS应用-架构分析(功能性、非功能性、关键约束)-上篇&lt;/a&gt;&lt;span&gt;》中介绍的 “目标-场景-决策表” 来实现。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Ø通过“目标-场景-决策表”分析非功能需求：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125028740-1912903972.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125029382-1502345114.png&quot; alt=&quot;image&quot; width=&quot;846&quot; height=&quot;478&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;通过分析关键的质量及约束内容，给出具体的场景及应对策略，梳理出清晰的决策表，在概念架构阶段融合决策表中给出的方案，最终给出初步的概念架构设计。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;三、基于前面分析的HRMS系统？我们如何下手开始？&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;结合前面讲的需求梳理的要点内容，我们结合HRMS系统来进行应用实践，逐步形成概要架构设计。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;A、基于RelationRose 来画出鲁棒图、确定系统的边界及关键内容&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1)、分析系统中的参与者及应用功能边界：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125029803-1532137635.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125030323-1483027918.png&quot; alt=&quot;image&quot; width=&quot;859&quot; height=&quot;274&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;基于上面我们能够发现我们的核心功能点：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;49&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;组织管理：&lt;/strong&gt;主要实现对公司组织结构及其变更的管理；对职位信息及职位间工作关系的管理，根据职位的空缺进行人员配备；按照组织结构进行人力规划、并对人事成本进行计算和管理，支持生成机构编制表、组织结构图等&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;人事档案：&lt;/strong&gt;主要实现对员工从试用、转正直至解聘或退休整个过程中各类信息的管理，人员信息的变动管理，提供多种形式、多种角度的查询、统计分析手段&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;劳动合同：&lt;/strong&gt;提供对员工劳动合同的签订、变更、解除、续订、劳动争议、经济补偿的管理。可根据需要设定试用期、合同到期的自动提示&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;招聘管理：&lt;/strong&gt;实现从计划招聘岗位、发布招聘信息、采集应聘者简历，按岗位任职资格遴选人员，管理面试结果到通知试用的全过程管理&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;薪酬福利：&lt;/strong&gt;工资管理系统适用于各类企业、行政、事业及科研单位，直接集成考勤、绩效考核等数据，主要提供工资核算、工资发放、经费计提、统计分析等功能。支持工资的多次或分次发放；支持代扣税或代缴税；工资发放支持银行代发，提供代发数据的输出功能，同时也支持现金发放，提供分钱清单功能。经费计提的内容和计提的比率可以进行设置；福利管理系统提供员工的各项福利基金的提取和管理功能。主要包括定义基金类型、设置基金提取的条件，进行基金的日常管理，并提供相应的统计分析，基金的日常管理包括基金定期提取、基金的补缴、转入转出等。此外，提供向相关管理机关报送相关报表的功能&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;行政管理：&lt;/strong&gt;主要提供对员工出勤情况的管理，帮助企业完善作业制度。主要包括各种假期的设置、班别的设置、相关考勤项目的设置，以及调班、加班、公出、请假的管理、迟到早退的统计、出勤情况的统计等。提供与各类考勤机系统的接口，并为薪资管理系统提供相关数据。支持通知公告分发，支持会议室/车辆等资源预定并同步日历，支持调研和投票问卷，支持活动管理的报名/签到/统计等，支持人员的奖惩管理并与人事档案关联，支持活动的抽奖管理等&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;培训管理：&lt;/strong&gt;根据岗位设置及绩效考核结果，确定必要的培训需求；为员工职业生涯发展制定培训计划；对培训的目标、课程内容、授课教师、时间、地点、设备、预算等进行管理，对培训人员、培训结果、培训费用进行管理&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;绩效管理：&lt;/strong&gt;通过绩效考核可以评价人员配置和培训的效果、对员工进行奖惩激励、为人事决策提供依据。根据不同职位在知识、技能、能力、业绩等方面的要求，系统提供多种考核方法、标准，允许自由设置考核项目，对员工的特征、行为、工作结果等进行定性和定量的考评&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;配置管理：&lt;/strong&gt;系统中为了增强系统的兼容性及灵活性，增加了诸多系统开关及配置，为后续满足各类场景提供支撑。其中需要有配置项的动态分类、动态增加、修改等功能&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;权限管理：&lt;/strong&gt; 通用权限管理系统，支撑组织、员工、角色、菜单、按钮、数据等涵盖功能及数据全面的权限管理功能&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;流程管理：&lt;/strong&gt;提供工作流引擎服务，支持自定义表单及流程，全面支撑HRMS系统中的审批流。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;人力资源规划分析：&lt;/strong&gt;提供全方位的统计分析功能，满足企业人力资源管理及规划，为后续的经营决策提供数据依据。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2)、系统边界&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;基于上述核心功能点，我们可以梳理出系统的边界，包含如下几个方面：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125030917-1752037031.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125031487-891705260.png&quot; alt=&quot;image&quot; width=&quot;736&quot; height=&quot;388&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;i、管理员的系统边界&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       由于管理员的角色定位已经做了限定，所以他需要有专门的运维管理后台，这个后台提供的功能和业务操作人员的后台功能和界面是完全不同的，所以需要单独的入口，其中的功能模块也是有区别的。所以我们可以得出管理员使用系统时的接入方式和边界。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;ii、HR的系统边界&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       HR的角色承担业务管理的相关职责，诸如HR模块中的审批环节，他们既有业务发起的操作又有审批环节的操作，所以相对来说HR角色的使用边界会更广泛，相比员工来说。我们发现HR在使用时需要有单独的系统入口，并且分配给他们对应的业务模块及功能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;iii、员工的系统边界&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       对于员工来说，HRMS系统中只有部分模块式可以操作使用的，诸如考勤、报销、绩效、查看及维护个人信息等，其他的信息都是由HR填写后用户可以查看，所以从操作便捷来看，员工与HR在业务系统入口上可以是统一入口，通过权限来限制访问边界即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;iv、公司管理者的边界&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;       &lt;span&gt;公司的管理者相比员工具有相应的业务及数据管理权限，同时会在审批流环节中承担审核者的身份，诸多业务流程都和管理者相关，所以相比员工来说，公司管理者的业务及操作权限较大，更多的上下级管理方面的业务内容较多，同时还可以完成员工角色操作的相关业务。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3)、数据对象&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125032398-2067253232.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125033186-901746317.png&quot; alt=&quot;image&quot; width=&quot;794&quot; height=&quot;445&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;i、基础数据：&lt;/strong&gt;系统包含的元数据、服务管理、日志、模块、基础配置、数据字典、系统管理等基础数据管理&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;ii、业务数据：&lt;/strong&gt;涵盖机构、员工、HRMS系统业务及流程数据、外部第三方业务联动数据等&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;iii、其他数据：&lt;/strong&gt;涵盖&lt;span&gt;诸如文件、图片、视频等其他类型的数据；统计分析后的结果数据；与第三方系统交互或留存的数据等相关内容。其他诸如log日志等数据信息。&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;B、划分高层子系统&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125033691-246083945.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125034243-1336873225.png&quot; alt=&quot;image&quot; width=&quot;829&quot; height=&quot;475&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       我们基于上面鲁棒图分析后的核心需求，我们给出系统的宏观的架构轮廓，这里仅考虑用户角色及职责链、从而形成上述的高层分割。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;C、&lt;span&gt;&lt;span&gt;质量需求影响架构的基本原理：进一步质疑&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;       结合前面我们已经梳理过的关键的质量及约束，具体请参考《&lt;a href=&quot;https://www.cnblogs.com/hegezhou_hot/p/9691597.html&quot;&gt;HRMS(人力资源管理系统)-从单机应用到SaaS应用-架构分析(功能性、非功能性、关键约束)-下篇&lt;/a&gt;&lt;strong&gt;&lt;span&gt;》，由于篇幅关系我就不详细列举，下面基于这些质量属性及约束我们来进一步完善概要架构：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1)、考虑关键质量属性中的持续可用性及可伸缩性，得出概要架构的中间成果：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125035128-1543535339.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125035763-1160019364.png&quot; alt=&quot;image&quot; width=&quot;827&quot; height=&quot;529&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2)、考虑关键质量属性中的互操作性，进一步优化概要架构的中间成果：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125036865-1094486659.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125038410-1979296690.png&quot; alt=&quot;image&quot; width=&quot;850&quot; height=&quot;536&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3)、考虑高性能，除了高负载，还需要考虑静态化、缓存等提升系统性能：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125040264-1540325065.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125040873-1403793836.png&quot; alt=&quot;image&quot; width=&quot;826&quot; height=&quot;518&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;       上面基本形成了一个概要架构的雏形，不过这还不够，我们还有一项关键的内容没有分析，那就是系统约束，我们需要将之前明确的关键约束进行分析拆解，转化为功能或质量要求：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;D、分析约束影响架构的基本原理：直接制约、转化为功能或质量需求&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125041645-1979797659.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125042378-2103964114.png&quot; alt=&quot;image&quot; width=&quot;864&quot; height=&quot;559&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;分析上述表格的内容，结合上几轮分析后给出的概要架构进行验证，看看这些约束会不会影响该架构内容，然后进行优化调整：&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;i、业务环境及约束&lt;/span&gt;：&lt;/span&gt;&lt;/strong&gt;目前来看，上述概要架构可以支持,不会对于当前的概要架构造成影响。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;ii、使用环境约束：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;之前拟定的PC、App端访问模式已考虑了上述的场景，关于多语言在应用层细节设计时考虑即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;iii、开发环境约束：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;概要架构还不涉及细节内容，当前的约束也不会对于架构产生较大影响&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;iv、技术环境约束：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;无影响，属于细节层面&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;E、基于上面几部走，我们得到了初步的概要架构，基本上符合功能、质量及约束的各类要求及场景，得出以下概要架构设计图。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125043406-825818963.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125044233-1369119073.png&quot; alt=&quot;image&quot; width=&quot;826&quot; height=&quot;517&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;四、概要架构阶段要点总结&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;基于前面对于概要架构设计推演过程的实践，我们总结概要架构过程的3个核心要点内容如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、首先，需要分析找到HRMS系统中的关键功能、质量及约束&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、其次，利用鲁棒图找到系统的用户、关键功能及职责链，形成初步的子系统的拆分、过程中借助高层分割形成分层结构，不断通过质疑+解决方案的模式，应对及完善质量及约束的要求。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、最后，通过1、2步实践过程，最终推导出初步的概要架构，为下一步的细化架构提供基础。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;希望大家通过上面示例的展示，为大家后续在系统架构设计实践的过程中提供一些帮助。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;五、更多信息&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;关于更多的系统架构方面的知识，我已建立了交流群，相关资料会第一时间在群里分享，欢迎大家入群互相学习交流：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;微信群：（扫码入群-名额有限）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125044857-1429715237.png&quot;&gt;&lt;img title=&quot;1538974197(1)&quot; src=&quot;https://img2018.cnblogs.com/blog/46256/201810/46256-20181008125045500-1712683507.png&quot; alt=&quot;1538974197(1)&quot; width=&quot;411&quot; height=&quot;544&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 04:51:00 +0000</pubDate>
<dc:creator>何戈洲</dc:creator>
<og:description>一、开篇 前期我们针对架构准备阶段及需求分析这块我们写了2篇内容《HRMS(人力资源管理系统)-从单机应用到SaaS应用-架构分析(功能性、非功能性、关键约束)-上篇》《HRMS(人力资源管理系统)-</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hegezhou_hot/p/9753733.html</dc:identifier>
</item>
<item>
<title>Vue+koa2开发一款全栈小程序(5.服务端环境搭建和项目初始化） - 雪落忆海</title>
<link>http://www.cnblogs.com/xuepangzi/p/9744031.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuepangzi/p/9744031.html</guid>
<description>&lt;h2&gt;腾讯云的开发环境是给免费的一个后台，但是只能够用于开发，如果用于生产是需要花钱的，我们先用开发环境吧&lt;/h2&gt;
&lt;h2&gt;1.用小程序开发邮箱账号登录微信公众平台&lt;/h2&gt;
&lt;h2&gt;2.【设置】→【开发者工具】→第一次是git管理，开启腾讯云关联&lt;/h2&gt;
&lt;h2&gt;3.会一路跳转到腾讯云的【开通开发环境】的流程要走&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181004101919743-1984465470.png&quot; alt=&quot;&quot; width=&quot;594&quot; height=&quot;343&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.已经完成&lt;/p&gt;
&lt;p&gt;2.下载安装微信开发者工具，也已经下载安装了&lt;/p&gt;
&lt;p&gt;3.下载Node.js版本Demo&lt;/p&gt;
&lt;p&gt;将demo中的server文件夹，复制到mpvue项目中&lt;/p&gt;
&lt;p&gt;在项目下的project.config.json中，增加代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&quot;qcloudRoot&quot;:&quot;/server/&quot;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181004114610485-826977994.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 在server文件夹下的config.js中，在pass后填写Appid&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181004231628045-1054063391.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 然后在微信开发者工具中，打开项目，点击右上角的【腾讯云】→【上传测试代码】&lt;/p&gt;
&lt;p&gt;首次上传选【模块上传】，然后如图把相应的地方勾选，以后就选智能上传就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181004114807617-260362974.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;1.安装MySQL数据库&lt;/h2&gt;
&lt;h2&gt;2.配置本地server文件夹下的config.js，加入配置代码&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
    serverHost: 'localhost'&lt;span&gt;,
    tunnelServerUrl: &lt;/span&gt;''&lt;span&gt;,
    tunnelSignatureKey: &lt;/span&gt;'27fb7d1c161b7ca52d73cce0f1d833f9f5b5ec89'&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 腾讯云相关配置可以查看云 API 秘钥控制台：https://console.cloud.tencent.com/capi&lt;/span&gt;
    qcloudAppId: '你的appid'&lt;span&gt;,
    qcloudSecretId: &lt;/span&gt;'你的云api秘钥id'&lt;span&gt;,
    qcloudSecretKey: &lt;/span&gt;'你的云api秘钥key'&lt;span&gt;,
    wxMessageToken: &lt;/span&gt;'weixinmsgtoken'&lt;span&gt;,
    networkTimeout: &lt;/span&gt;30000,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181005010516362-1305993498.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
获取云api秘钥id和key地址：https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;console.cloud.tencent.com/capi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
获取appid的地址：https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;console.cloud.tencent.com/developer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt; 3.新建cAuth数据库&lt;/h2&gt;
&lt;p&gt;打开MySQL控制台，执行命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;create&lt;/span&gt; &lt;span&gt;database&lt;/span&gt; cAuth;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 数据库名cAuth，是与server项目中保持一致。&lt;/p&gt;
&lt;p&gt;如果本地的MySQL设置了密码，将server文件下的config.js中的数据库密码配置，填写你mysql数据库的密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181005013032662-640364556.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;4.启动server服务端&lt;/h2&gt;
&lt;p&gt;打开cmd，cd到server项目目录下，执行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
cnpm install
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
cnpm install -g nodemon
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5.测试一下本地环境是否搭建好了&lt;/h2&gt;
&lt;p&gt;在server项目下controllers目录下，新建demo.js文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
module.exports=async(ctx)=&amp;gt;&lt;span&gt;{
    ctx.state.data&lt;/span&gt;=&lt;span&gt;{
        msg:&lt;/span&gt;'hello 小程序后台'&lt;span&gt;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在server项目目录下的router目录下的index.js中添加路由&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
router.get('/demo',controllers.demo)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181005014201562-1969197162.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 然后执行运行server项目的命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
npm run dev //启动server项目
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;浏览器访问&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;localhost:5757/weapp/demo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181005013818656-467836827.png&quot; alt=&quot;&quot;/&gt;.&lt;/p&gt;




&lt;h2&gt;1.新建mpvue项目 打开cmd，cd到想要存放项目的目录下&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
cnpm install -g vue-cli   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;安装脚手架&lt;/span&gt;
vue init mpvue/mpvue-quickstart mydemo
&lt;span&gt;Project name mydemo
wxmp appid &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;登录微信小程序后台，找到appid&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;然后全都默认即可&lt;/span&gt;
&lt;span&gt;
cd mydemo
cnpm install
npm run dev&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;启动新建的mpvue项目&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.用vscode打开mydemo项目&lt;/h2&gt;
&lt;h3&gt;1.将图片素材库文件夹img复制到mydemo/static目录下&lt;/h3&gt;
&lt;h3&gt;2.在src目录下，新建me目录，目录下新建mian.js和index.vue&lt;/h3&gt;
&lt;p&gt;main.js代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
import Vue from 'vue'&lt;span&gt;
import App from &lt;/span&gt;'./index'&lt;span&gt;

const app &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue(App)
app.$mount()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;index.vue&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        个人中心页面
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
    

}
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.在src目录下，新建books目录，目录下新建mian.js和index.vue&lt;/h3&gt;
&lt;p&gt;main.js代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
import Vue from 'vue'&lt;span&gt;
import App from &lt;/span&gt;'./index'&lt;span&gt;

const app &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue(App)
app.$mount()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;index.vue代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        图书页面
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
    

}
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4.在src目录下，新建comments目录，目录下新建mian.js和index.vue&lt;/h3&gt;
&lt;p&gt;main.js代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
import Vue from 'vue'&lt;span&gt;
import App from &lt;/span&gt;'./index'&lt;span&gt;

const app &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue(App)
app.$mount()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;index.vue代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        评论过的书页面
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
    

}
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;嗯，是的，3，4，5步骤中，main.js 的代码是一样的，index.vue代码基本一样&lt;/h3&gt;
&lt;h3&gt;5.防止代码格式报错导致项目无法启动，先到项目目录下的build目录下的webpack.base.conf.js中，将一段配置代码注释掉&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181005132014182-760904918.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;6.在mydemo项目下的app.json中修改添加配置代码&lt;/h3&gt;
&lt;p&gt;app.json代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&quot;pages&quot;&lt;span&gt;: [
    &lt;/span&gt;&quot;pages/books/main&quot;, &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将哪个页面路径放第一个，哪个页面就是首页，加^根本不好使，而且还报错&lt;/span&gt;
    &quot;pages/comments/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/me/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/index/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/logs/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/counter/main&quot;&lt;span&gt;
  ],
  &lt;/span&gt;&quot;window&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;backgroundTextStyle&quot;: &quot;light&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;navigationBarBackgroundColor&quot;: &quot;#EA5149&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;navigationBarTitleText&quot;: &quot;蜗牛图书&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;navigationBarTextStyle&quot;: &quot;light&quot;&lt;span&gt;
  }

  
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;7.在cmd中重启mydemo项目，在微信开发者工具中打开&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181006155921056-2020683927.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt; 3.底部导航&lt;/h2&gt;
&lt;p&gt;1.微信公众平台小程序全局配置文档地址&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;developers.weixin.qq.com/miniprogram/dev/framework/config.html#全局配置&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.根据官方文档，在app.json填写底部导航配置代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&quot;pages&quot;&lt;span&gt;: [
    &lt;/span&gt;&quot;pages/books/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/comments/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/me/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/index/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/logs/main&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;pages/counter/main&quot;&lt;span&gt;
  ],
  &lt;/span&gt;&quot;window&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;backgroundTextStyle&quot;: &quot;light&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;navigationBarBackgroundColor&quot;: &quot;#EA5149&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;navigationBarTitleText&quot;: &quot;蜗牛图书&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;navigationBarTextStyle&quot;: &quot;light&quot;&lt;span&gt;
  },
  &lt;/span&gt;&quot;tabBar&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;selectedColor&quot;:&quot;#EA5149&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;list&quot;&lt;span&gt;: [{

      &lt;/span&gt;&quot;pagePath&quot;: &quot;pages/books/main&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;text&quot;: &quot;图书&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;iconPath&quot;:&quot;static/img/book.png&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;selectedIconPath&quot;:&quot;static/img/book-active.png&quot;&lt;span&gt;
    },
    {

      &lt;/span&gt;&quot;pagePath&quot;: &quot;pages/comments/main&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;text&quot;: &quot;评论&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;iconPath&quot;:&quot;static/img/todo.png&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;selectedIconPath&quot;:&quot;static/img/todo-active.png&quot;&lt;span&gt;
    },
    {

      &lt;/span&gt;&quot;pagePath&quot;: &quot;pages/me/main&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;text&quot;: &quot;我&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;iconPath&quot;:&quot;static/img/me.png&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;selectedIconPath&quot;:&quot;static/img/me-active.png&quot;&lt;span&gt;
    }
  ]
  }

  
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181006220830326-425245806.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt; 4.代码封装&lt;/h2&gt;
&lt;p&gt; 1.打开cmd，cd到server下，运行后端&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
npm run dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.在mydemo/src 目录下，新建config.js&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;配置项&lt;/span&gt;
&lt;span&gt;
const host&lt;/span&gt;=&quot;http://localhost:5757&quot;&lt;span&gt;

const config&lt;/span&gt;=&lt;span&gt;{
    host
}
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt; config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.在src目录下新建until.js&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;工具函数&lt;/span&gt;
&lt;span&gt;
import config from &lt;/span&gt;'./config'&lt;span&gt;

export &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; get(url){
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Promise((reslove,reject)=&amp;gt;&lt;span&gt;{
        wx.request({
            url:config.host&lt;/span&gt;+&lt;span&gt;url,
            success:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(res.data.code===0&lt;span&gt;){
                    reslove(res.data.data)
                }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                    reject(res.data)
                }
            }
        })
    })
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.App.vue中添加代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;lt;script&amp;gt;&lt;span&gt;
import {get} from &lt;/span&gt;'./until'&lt;span&gt;

export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
  async created () {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 调用API从本地缓存中获取数据&lt;/span&gt;
    const logs = wx.getStorageSync('logs') ||&lt;span&gt; []
    logs.unshift(Date.now())
    wx.setStorageSync(&lt;/span&gt;'logs'&lt;span&gt;, logs)

    const res&lt;/span&gt;=await get('/weapp/demo'&lt;span&gt;)
    console.log(&lt;/span&gt;123&lt;span&gt;,res)
    console.log(&lt;/span&gt;'小程序启动了'&lt;span&gt;)
  }
}
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;&lt;span&gt;
.container {
  height: &lt;/span&gt;100%&lt;span&gt;;
  display: flex;
  flex&lt;/span&gt;-&lt;span&gt;direction: column;
  align&lt;/span&gt;-&lt;span&gt;items: center;
  justify&lt;/span&gt;-content: space-&lt;span&gt;between;
  padding: 200rpx &lt;/span&gt;0&lt;span&gt;;
  box&lt;/span&gt;-sizing: border-&lt;span&gt;box;
}
&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; this rule will be remove &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
*&lt;span&gt; {
  transition: width 2s;
  &lt;/span&gt;-moz-&lt;span&gt;transition: width 2s;
  &lt;/span&gt;-webkit-&lt;span&gt;transition: width 2s;
  &lt;/span&gt;-o-&lt;span&gt;transition: width 2s;
}
&lt;/span&gt;&amp;lt;/style&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181008110752770-354161878.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;5.在微信开发者工具中，在右上角点击【详情】，勾选不校验合法域名&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181008110902863-1650925967.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;6.运行mydemo&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
npm run dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181008111024860-482669217.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt; 5.使用ESLint自动规范代码&lt;/h2&gt;
&lt;p&gt;1.将mydemo/build/webpck.base.conf.js中之前注释的代码恢复&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181008115648087-1595527608.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.在mydemo项目下的package.json中的“lint”配置中加入--fix&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1282071/201810/1282071-20181008120018243-360283766.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3.执行代码，规范代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
npm run lint&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果一般的格式错误，就会自动修改，如果有代码上的错误，则会报出位置错误&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.执行运行代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
npm run dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发现已经不报错啦！&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 04:10:00 +0000</pubDate>
<dc:creator>雪落忆海</dc:creator>
<og:description>1.微信公众平台小程序关联腾讯云 腾讯云的开发环境是给免费的一个后台，但是只能够用于开发，如果用于生产是需要花钱的，我们先用开发环境吧 1.用小程序开发邮箱账号登录微信公众平台 2.【设置】→【开发者</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuepangzi/p/9744031.html</dc:identifier>
</item>
<item>
<title>ASP.NET MVC5+EF6+EasyUI 后台管理系统-WebApi的用法与调试 - ymnets</title>
<link>http://www.cnblogs.com/ymnets/p/9753209.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ymnets/p/9753209.html</guid>
<description>&lt;p&gt;1：&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/ymnets/p/5648459.html&quot;&gt;ASP.NET MVC5+EF6+EasyUI 后台管理系统（1）-WebApi与Unity注入&lt;/a&gt; 使用Unity是为了使用我们后台的BLL和DAL层&lt;/p&gt;
&lt;p&gt;2：&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/ymnets/p/5754744.html&quot;&gt;ASP.NET MVC5+EF6+EasyUI 后台管理系统（2）-WebApi与Unity注入-配置文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3：&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/ymnets/p/5698721.html&quot;&gt;ASP.NET MVC5+EF6+EasyUI 后台管理系统（3）-MVC WebApi 用户验证 (1)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4：&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/ymnets/p/5721137.html&quot;&gt;ASP.NET MVC5+EF6+EasyUI 后台管理系统（4）-MVC WebApi 用户验证 (2)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;以往我们讲了WebApi的基础验证，但是有新手经常来问我使用的方式&lt;/p&gt;
&lt;p&gt;这次我们来分析一下代码的用法，以及调试的方式&lt;/p&gt;
&lt;p&gt;WebApi在一些场景我们会用到，比如：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1.对接各种客户端（移动设备）&lt;/li&gt;
&lt;li&gt;2.构建常见的http微服务 &lt;/li&gt;
&lt;li&gt;3.开放数据 &lt;/li&gt;
&lt;li&gt;4.单点登陆  等...&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;本文主要演示几点：主要也是对以往的回顾整理&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1.使用HelpPage文档&lt;/li&gt;
&lt;li&gt;2.Postman对接口进行调试（之前的样例太过简单，这次加一些参数，让初学者多看到这些场景）&lt;/li&gt;
&lt;li&gt;3.调试接口&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;1.HelpPage Api帮助文档&lt;/h2&gt;
&lt;p&gt;我们新建的WebApi集成了微软自带的&lt;strong&gt;HelpPage&lt;/strong&gt;，即Api的文档，在我们编写好接口之后会自动生成一份文档&lt;/p&gt;
&lt;h4&gt;配置HelpPage，非常简单，分两步&lt;/h4&gt;
&lt;p&gt;设置项目属性的输出XML文档&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721111132258-396588703.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.打开Areas--&amp;gt;HelpPage--&amp;gt;App_Start--&amp;gt;HelpPageConfig.cs&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Register(HttpConfiguration config)
        {
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;/ Uncomment the following to use the documentation from XML documentation file.&lt;/span&gt;
            config.SetDocumentationProvider(&lt;span&gt;new&lt;/span&gt; XmlDocumentationProvider(HttpContext.Current.Server.MapPath(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/bin/Apps.WebApi.XML&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)));
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置Register方法就行，运行地址localhost:1593/help得到如下结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721105409569-2016688094.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出，每一个控制器的接口都会列出来，并根据注释和参数生成文档，全自动&lt;/p&gt;
&lt;p&gt;点击接口可以看到参数和请求方式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721110107126-1868072658.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;2.使用Postman调试&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.getpostman.com/&quot; target=&quot;_blank&quot;&gt;下载地址：https://www.getpostman.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pastman非常易用，我们下面就拿登陆接口来测试&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721111606195-1851808882.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;打开Postman，新建一个请求&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721111634050-1829272828.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;OK，我们已经获得token！注意，新建请求的时候，要设置GET,POST&lt;/p&gt;

&lt;h2&gt;3.验证权限&lt;/h2&gt;
&lt;p&gt;之前的文章，我们是通过令牌的方式+接口权限来访问接口数据的&lt;/p&gt;
&lt;p&gt;打开SupperFilter.cs过滤器代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
//url获取token
            var content = actionContext.Request.Properties[ConfigPara.MS_HttpContext] as&lt;span&gt; HttpContextBase;

            var token =&lt;span&gt; content.Request.QueryString[ConfigPara.Token];
            if (!string&lt;span&gt;.IsNullOrEmpty(token))
            {
                //解密用户ticket,并校验用户名密码是否匹配

                //读取请求上下文中的Controller,Action,Id
                var routes = new&lt;span&gt; RouteCollection();
                RouteConfig.RegisterRoutes(routes);
                RouteData routeData =&lt;span&gt; routes.GetRouteData(content);
                //取出区域的控制器Action,id
                string controller =&lt;span&gt; actionContext.ActionDescriptor.ControllerDescriptor.ControllerName;
                string action =&lt;span&gt; actionContext.ActionDescriptor.ActionName;
                //URL路径
                string filePath =&lt;span&gt; HttpContext.Current.Request.FilePath;
                //判断token是否有效
                if (!&lt;span&gt;LoginUserManage.ValidateTicket(token))
                {
                    HandleUnauthorizedRequest(actionContext);
                }

                //判断是否角色组授权（如果不需要使用角色组授权可以注释掉这个方法，这样就是登录用户都可以访问所有接口）
                if (!&lt;span&gt;ValiddatePermission(token, controller, action, filePath))
                {
                    HandleUnauthorizedRequest(actionContext);
                }

                //已经登录，有权限
                base.IsAuthorized(actionContext);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;过滤器中会读取到用户传过来的token并进行2个逻辑验证&lt;/p&gt;
&lt;p&gt;1.验证token是否有效&lt;/p&gt;
&lt;p&gt;2.验证接口有没有权限（通过后台分配权限来获取Action）这个操作跟我们授权界面是一样的 &lt;/p&gt;
&lt;p&gt;（注：如果注释掉即所有登陆用户都可以访问所有接口，不受控制，主要看业务场景吧）&lt;/p&gt;

&lt;h2&gt;4.通过Token向其他接口拿数据&lt;/h2&gt;
&lt;p&gt;看到SysSampleController类，这个类和普通MVC里面的样例的接口其实没有什么区别，BLL后的所有都是通用的，所以逻辑就不需要重新写了！按照第二点的获得token，配置到Postman可以获得数据&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721112052041-2145664854.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;1.查询&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721112107765-29227432.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;2.创建&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721112136808-2068198304.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;3.修改&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721112152426-1456794079.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;4.获取明细&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721112206057-1202389714.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;5.删除&lt;/h4&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/439652/201807/439652-20180721112218698-1913907892.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt; 谢谢，从源码直接可以看出，和自己测试或者自己配置一遍，不失是一种体验&lt;/p&gt;
&lt;/blockquote&gt;

</description>
<pubDate>Mon, 08 Oct 2018 03:08:00 +0000</pubDate>
<dc:creator>ymnets</dc:creator>
<og:description>1：ASP.NET MVC5+EF6+EasyUI 后台管理系统（1）-WebApi与Unity注入 使用Unity是为了使用我们后台的BLL和DAL层 2：ASP.NET MVC5+EF6</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ymnets/p/9753209.html</dc:identifier>
</item>
<item>
<title>别被官方文档迷惑了！这篇文章帮你详解yarn公平调度 - 腾讯云+社区</title>
<link>http://www.cnblogs.com/qcloud1001/p/9753183.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qcloud1001/p/9753183.html</guid>
<description>&lt;p&gt;&lt;strong&gt;欢迎大家前往&lt;a href=&quot;https://cloud.tencent.com/developer/?fromSource=waitui&quot;&gt;腾讯云+社区&lt;/a&gt;，获取更多腾讯海量技术实践干货哦~&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;1.9565217391304&quot;&gt;
&lt;p&gt;本文由&lt;a href=&quot;https://cloud.tencent.com/developer/user/2277860?fromSource=waitui&quot;&gt;@edwinhzhang&lt;/a&gt;发表于&lt;a href=&quot;https://cloud.tencent.com/developer/column/1028?fromSource=waitui&quot;&gt;云+社区专栏&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FairScheduler是yarn常用的调度器，但是仅仅参考官方文档，有很多参数和概念文档里没有详细说明，但是这些参明显会影响到集群的正常运行。本文的主要目的是通过梳理代码将关键参数的功能理清楚。下面列出官方文档中常用的参数：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;18&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;7&quot;&gt;&lt;td&gt;yarn.scheduler.fair.update-interval-ms&lt;/td&gt;
&lt;td&gt;The interval at which to lock the scheduler and recalculate fair shares, recalculate demand, and check whether anything is due for preemption. Defaults to 500 ms.&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;7&quot;&gt;&lt;td&gt;maxAMShare&lt;/td&gt;
&lt;td&gt;limit the fraction of the queue’s fair share that can be used to run application masters. This property can only be used for leaf queues. For example, if set to 1.0f, then AMs in the leaf queue can take up to 100% of both the memory and CPU fair share. The value of -1.0f will disable this feature and the amShare will not be checked. The default value is 0.5f.&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;7&quot;&gt;&lt;td&gt;minSharePreemptionTimeout&lt;/td&gt;
&lt;td&gt;number of seconds the queue is under its minimum share before it will try to preempt containers to take resources from other queues. If not set, the queue will inherit the value from its parent queue.&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;7&quot;&gt;&lt;td&gt;fairSharePreemptionTimeout&lt;/td&gt;
&lt;td&gt;number of seconds the queue is under its fair share threshold before it will try to preempt containers to take resources from other queues. If not set, the queue will inherit the value from its parent queue.&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;8&quot;&gt;&lt;td&gt;fairSharePreemptionThreshold&lt;/td&gt;
&lt;td&gt;If the queue waits fairSharePreemptionTimeout without receiving fairSharePreemptionThreshold*fairShare resources, it is allowed to preempt containers to take resources from other queues. If not set, the queue will inherit the value from its parent queue.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;在上述参数描述中，timeout等参数值没有给出默认值，没有告知不设置会怎样。minShare,fairShare等概念也没有说清楚，很容易让人云里雾里。关于这些参数和概念的详细解释，在下面的分析中一一给出。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/2277860/j2c4zpkzoy.png?imageView2/2/w/1620&quot; alt=&quot;img&quot;/&gt; 图（1） FairScheduler 运行流程图&lt;/p&gt;
&lt;p&gt;公平调度器的运行流程就是RM去启动FairScheduler,SchedulerDispatcher两个服务，这两个服务各自负责update线程，handle线程。&lt;/p&gt;
&lt;p&gt;update线程有两个任务：（1）更新各个队列的资源（Instantaneous Fair Share）,（2）判断各个leaf队列是否需要抢占资源（如果开启抢占功能）&lt;/p&gt;
&lt;p&gt;handle线程主要是处理一些事件响应，比如集群增加节点，队列增加APP，队列删除APP，APP更新container等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/2277860/f8fgsyx2d6.png?imageView2/2/w/1620&quot; alt=&quot;img&quot;/&gt;图（2） FairScheduler相关类图&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;队列继承模块&lt;/strong&gt;：yarn通过树形结构来管理队列。从管理资源角度来看，树的根节点root队列（FSParentQueue）,非根节点（FSParentQueue），叶子节点（FSLeaf）,app任务（FSAppAttempt，公平调度器角度的App）都是抽象的资源，它们都实现了Schedulable接口，都是一个&lt;strong&gt;可调度资源对象&lt;/strong&gt;。它们都有自己的fair share（队列的资源量）方法（这里又用到了fair share概念），weight属性（权重）、minShare属性（最小资源量）、maxShare属性(最大资源量)，priority属性(优先级)、resourceUsage属性（资源使用量属性）以及资源需求量属性(demand)，同时也都实现了preemptContainer抢占资源的方法，assignContainer方法（为一个&lt;strong&gt;ACCEPTED&lt;/strong&gt;的APP分配AM的container）。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;public interface Schedulable {
  /**
   * Name of job/queue, used for debugging as well as for breaking ties in
   * scheduling order deterministically.
   */
  public String getName();

  /**
   * Maximum number of resources required by this Schedulable. This is defined as
   * number of currently utilized resources + number of unlaunched resources (that
   * are either not yet launched or need to be speculated).
   */
  public Resource getDemand();

  /** Get the aggregate amount of resources consumed by the schedulable. */
  public Resource getResourceUsage();

  /** Minimum Resource share assigned to the schedulable. */
  public Resource getMinShare();

  /** Maximum Resource share assigned to the schedulable. */
  public Resource getMaxShare();

  /** Job/queue weight in fair sharing. */
  public ResourceWeights getWeights();

  /** Start time for jobs in FIFO queues; meaningless for QueueSchedulables.*/
  public long getStartTime();

 /** Job priority for jobs in FIFO queues; meaningless for QueueSchedulables. */
  public Priority getPriority();

  /** Refresh the Schedulable's demand and those of its children if any. */
  public void updateDemand();

  /**
   * Assign a container on this node if possible, and return the amount of
   * resources assigned.
   */
  public Resource assignContainer(FSSchedulerNode node);

  /**
   * Preempt a container from this Schedulable if possible.
   */
  public RMContainer preemptContainer();

  /** Get the fair share assigned to this Schedulable. */
  public Resource getFairShare();

  /** Assign a fair share to this Schedulable. */
  public void setFairShare(Resource fairShare);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;队列运行模块：从类图角度描述公平调度的工作原理。SchedulerEventDispatcher类负责管理handle线程。FairScheduler类管理update线程，通过QueueManager获取所有队列信息。&lt;/p&gt;
&lt;p&gt;我们从Instantaneous Fair Share 和Steady Fair Share 这两个yarn的基本概念开始进行代码分析。&lt;/p&gt;

&lt;p&gt;Fair Share指的都是Yarn根据每个队列的权重、最大，最小可运行资源计算的得到的可以分配给这个队列的最大可用资源。本文描述的是公平调度，公平调度的&lt;strong&gt;默认策略FairSharePolicy&lt;/strong&gt;的规则是&lt;strong&gt;single-resource&lt;/strong&gt;，即只关注内存资源这一项指标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steady Fair Share&lt;/strong&gt;：是每个队列内存资源量的固定理论值。Steady Fair Share在RM初期工作后不再轻易改变，只有后续在增加节点（addNode）时才会重新计算。RM的初期工作也是handle线程把集群的每个节点添加到调度器中（addNode）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instantaneous Fair Share&lt;/strong&gt;：是每个队列的内存资源量的实际值，是在动态变化的。yarn里的fair share如果没有专门指代，都是指的的Instantaneous Fair Share。&lt;/p&gt;
&lt;h2 id=&quot;steady-fair-share计算方式&quot;&gt;&lt;strong&gt;1 Steady Fair Share计算方式&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/2277860/w8bugr2sc7.png?imageView2/2/w/1620&quot; alt=&quot;img&quot;/&gt; 图（3） steady fair share 计算流程&lt;/p&gt;
&lt;p&gt;handle线程如果接收到&lt;strong&gt;NODE_ADDED&lt;/strong&gt;事件，会去调用addNode方法。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;  private synchronized void addNode(RMNode node) {
    FSSchedulerNode schedulerNode = new FSSchedulerNode(node, usePortForNodeName);
    nodes.put(node.getNodeID(), schedulerNode);
    //将该节点的内存加入到集群总资源
    Resources.addTo(clusterResource, schedulerNode.getTotalResource());
    //更新available资源
    updateRootQueueMetrics();
    //更新一个container的最大分配，就是UI界面里的MAX（如果没有记错的话）
    updateMaximumAllocation(schedulerNode, true);

    //设置root队列的steadyFailr=clusterResource的总资源
    queueMgr.getRootQueue().setSteadyFairShare(clusterResource);
    //重新计算SteadyShares
    queueMgr.getRootQueue().recomputeSteadyShares();
    LOG.info(&quot;Added node &quot; + node.getNodeAddress() +
        &quot; cluster capacity: &quot; + clusterResource);
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;recomputeSteadyShares 使用&lt;strong&gt;广度优先遍历&lt;/strong&gt;计算每个队列的内存资源量，直到叶子节点。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt; public void recomputeSteadyShares() {
    //广度遍历整个队列树
    //此时getSteadyFairShare 为clusterResource
    policy.computeSteadyShares(childQueues, getSteadyFairShare());
    for (FSQueue childQueue : childQueues) {
      childQueue.getMetrics().setSteadyFairShare(childQueue.getSteadyFairShare());
      if (childQueue instanceof FSParentQueue) {
        ((FSParentQueue) childQueue).recomputeSteadyShares();
      }
    }
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;computeSteadyShares方法计算每个队列应该分配到的内存资源，总体来说是根据每个队列的权重值去分配，权重大的队列分配到的资源更多，权重小的队列分配到得资源少。但是实际的细节还会受到其他因素影响，是因为每队列有minResources和maxResources两个参数来限制资源的上下限。computeSteadyShares最终去调用computeSharesInternal方法。比如以下图为例：&lt;/p&gt;
&lt;p&gt;图中的数字是权重，假如有600G的总资源，parent=300G,leaf1=300G,leaf2=210G,leaf3=70G。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/2277860/fwthyxmzxv.png?imageView2/2/w/1620&quot; alt=&quot;img&quot;/&gt;图（4） yarn队列权重&lt;/p&gt;
&lt;p&gt;computeSharesInternal方法概括来说就是通过二分查找法寻找到一个资源比重值R（weight-to-slots），使用这个R为每个队列分配资源（在该方法里队列的类型是Schedulable,再次说明队列是一个资源对象），公式是&lt;strong&gt;steadyFairShare=R * QueueWeights&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;computeSharesInternal是计算Steady Fair Share 和Instantaneous Fair Share共用的方法，根据参数isSteadyShare来区别计算。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之所以要做的这么复杂，是因为队列不是单纯的按照比例来分配资源的（单纯按权重比例，需要maxR,minR都不设置。maxR的默认值是0x7fffffff，minR默认值是0）。如果设置了maxR,minR,按比例分到的资源小于minR,那么必须满足minR。按比例分到的资源大于maxR，那么必须满足maxR。因此想要找到一个R（weight-to-slots）来尽可能满足：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;R*（Queue1Weights + Queue2Weights+...+QueueNWeights） &amp;lt;=totalResource&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;R*QueueWeights &amp;gt;= minShare&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;R*QueueWeights &amp;lt;= maxShare&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;注：QueueNWeights为队列各自的权重，minShare和maxShare即各个队列的minResources和maxResources&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;computcomputeSharesInternal详细来说分为四个步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;确定可用资源：&lt;em&gt;totalResources = min(totalResources-takenResources(fixedShare), totalMaxShare)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;确定R上下限&lt;/li&gt;
&lt;li&gt;二分查找法逼近R&lt;/li&gt;
&lt;li&gt;使用R设置fair Share&lt;/li&gt;
&lt;/ol&gt;&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;  private static void computeSharesInternal(
      Collection&amp;lt;? extends Schedulable&amp;gt; allSchedulables,
      Resource totalResources, ResourceType type, boolean isSteadyShare) {

    Collection&amp;lt;Schedulable&amp;gt; schedulables = new ArrayList&amp;lt;Schedulable&amp;gt;();
    //第一步
    //排除有固定资源不能动的队列,并得出固定内存资源
    int takenResources = handleFixedFairShares(
        allSchedulables, schedulables, isSteadyShare, type);

    if (schedulables.isEmpty()) {
      return;
    }
    // Find an upper bound on R that we can use in our binary search. We start
    // at R = 1 and double it until we have either used all the resources or we
    // have met all Schedulables' max shares.
    int totalMaxShare = 0;
    //遍历schedulables（非固定fixed队列），将各个队列的资源相加得到totalMaxShare
    for (Schedulable sched : schedulables) {
      int maxShare = getResourceValue(sched.getMaxShare(), type);
      totalMaxShare = (int) Math.min((long)maxShare + (long)totalMaxShare,
          Integer.MAX_VALUE);
      if (totalMaxShare == Integer.MAX_VALUE) {
        break;
      }
    }
    //总资源要减去fiexd share
    int totalResource = Math.max((getResourceValue(totalResources, type) -
        takenResources), 0);
    //队列所拥有的最大资源是有集群总资源和每个队列的MaxResource双重限制
    totalResource = Math.min(totalMaxShare, totalResource);
    //第二步:设置R的上下限
    double rMax = 1.0;
    while (resourceUsedWithWeightToResourceRatio(rMax, schedulables, type)
        &amp;lt; totalResource) {
      rMax *= 2.0;
    }

    //第三步：二分法逼近合理R值
    // Perform the binary search for up to COMPUTE_FAIR_SHARES_ITERATIONS steps
    double left = 0;
    double right = rMax;
    for (int i = 0; i &amp;lt; COMPUTE_FAIR_SHARES_ITERATIONS; i++) {
      double mid = (left + right) / 2.0;
      int plannedResourceUsed = resourceUsedWithWeightToResourceRatio(
          mid, schedulables, type);
      if (plannedResourceUsed == totalResource) {
        right = mid;
        break;
      } else if (plannedResourceUsed &amp;lt; totalResource) {
        left = mid;
      } else {
        right = mid;
      }
    }
    //第四步：使用R值设置，确定各个非fixed队列的fairShar,意味着只有活跃队列可以分资源
    // Set the fair shares based on the value of R we've converged to
    for (Schedulable sched : schedulables) {
      if (isSteadyShare) {
        setResourceValue(computeShare(sched, right, type),
            ((FSQueue) sched).getSteadyFairShare(), type);
      } else {
        setResourceValue(
            computeShare(sched, right, type), sched.getFairShare(), type);
      }
    }
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;(1) 确定可用资源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;handleFixedFairShares方法来统计出所有fixed队列的fixed内存资源（fixedShare）相加，并且&lt;strong&gt;fixed队列排除掉不得瓜分系统资源。&lt;/strong&gt;yarn确定fixed队列的标准如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;  private static int getFairShareIfFixed(Schedulable sched,
      boolean isSteadyShare, ResourceType type) {

    //如果队列的maxShare &amp;lt;=0  则是fixed队列，fixdShare=0
    if (getResourceValue(sched.getMaxShare(), type) &amp;lt;= 0) {
      return 0;
    }

    //如果是计算Instantaneous Fair Share,并且该队列内没有APP再跑，
    // 则是fixed队列，fixdShare=0
    if (!isSteadyShare &amp;amp;&amp;amp;
        (sched instanceof FSQueue) &amp;amp;&amp;amp; !((FSQueue)sched).isActive()) {
      return 0;
    }

    //如果队列weight&amp;lt;=0,则是fixed队列
    //如果对列minShare &amp;lt;=0,fixdShare=0,否则fixdShare=minShare
    if (sched.getWeights().getWeight(type) &amp;lt;= 0) {
      int minShare = getResourceValue(sched.getMinShare(), type);
      return (minShare &amp;lt;= 0) ? 0 : minShare;
    }

    return -1;
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;(2)确定R上下限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;R的下限为1.0，R的上限是由resourceUsedWithWeightToResourceRatio方法来确定。该方法确定的资源值&lt;strong&gt;W&lt;/strong&gt;，第一步中确定的&lt;strong&gt;可用资源值T&lt;/strong&gt;：&lt;strong&gt;W&amp;gt;=T&lt;/strong&gt;时，R才能确定。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;//根据R值去计算每个队列应该分配的资源
  private static int resourceUsedWithWeightToResourceRatio(double w2rRatio,
      Collection&amp;lt;? extends Schedulable&amp;gt; schedulables, ResourceType type) {
    int resourcesTaken = 0;
    for (Schedulable sched : schedulables) {
      int share = computeShare(sched, w2rRatio, type);
      resourcesTaken += share;
    }
    return resourcesTaken;
  }
 private static int computeShare(Schedulable sched, double w2rRatio,
      ResourceType type) {
    //share=R*weight,type是内存
    double share = sched.getWeights().getWeight(type) * w2rRatio;
    share = Math.max(share, getResourceValue(sched.getMinShare(), type));
    share = Math.min(share, getResourceValue(sched.getMaxShare(), type));
    return (int) share;
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（3）二分查找法逼近R&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;满足下面两个条件中的一个即可终止二分查找：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;W == T&lt;/strong&gt;(步骤2中的W和T)&lt;/li&gt;
&lt;li&gt;超过25次（COMPUTE_FAIR_SHARES_ITERATIONS）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;（4）使用R设置fair share&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置fair share时，可以看到区分了&lt;strong&gt;Steady Fair Share 和Instantaneous Fair Share。&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;  for (Schedulable sched : schedulables) {
      if (isSteadyShare) {
        setResourceValue(computeShare(sched, right, type),
            ((FSQueue) sched).getSteadyFairShare(), type);
      } else {
        setResourceValue(
            computeShare(sched, right, type), sched.getFairShare(), type);
      }
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;instaneous-fair-share计算方式&quot;&gt;&lt;strong&gt;2 Instaneous Fair Share计算方式&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/2277860/dvpke8qwbn.png?imageView2/2/w/1620&quot; alt=&quot;img&quot;/&gt;图（5）Instaneous Fair Share 计算流程&lt;/p&gt;
&lt;p&gt;该计算方式与steady fair的计算调用栈是一致的，最终都要使用到computeSharesInternal方法，唯一不同的是计算的时机不一样。steady fair只有在&lt;strong&gt;addNode&lt;/strong&gt;的时候才会重新计算一次，而Instantaneous Fair Share是由&lt;strong&gt;update线程&lt;/strong&gt;定期去更新。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;此处强调的一点是，在上文中我们已经分析如果是计算Instantaneous Fair Share，并且队列为空，那么该队列就是fixed队列，也就是非活跃队列，那么计算fair share时，该队列是不会去瓜分集群的内存资源。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;而update线程的更新频率就是由 &lt;strong&gt;yarn.scheduler.fair.update-interval-ms&lt;/strong&gt;来决定的。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;private class UpdateThread extends Thread {

    @Override
    public void run() {
      while (!Thread.currentThread().isInterrupted()) {
        try {
          //yarn.scheduler.fair.update-interval-ms
          Thread.sleep(updateInterval);
          long start = getClock().getTime();
          // 更新Instantaneous Fair Share
          update();
          //抢占资源
          preemptTasksIfNecessary();
          long duration = getClock().getTime() - start;
          fsOpDurations.addUpdateThreadRunDuration(duration);
        } catch (InterruptedException ie) {
          LOG.warn(&quot;Update thread interrupted. Exiting.&quot;);
          return;
        } catch (Exception e) {
          LOG.error(&quot;Exception in fair scheduler UpdateThread&quot;, e);
        }
      }
    }
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;maxamshare意义&quot;&gt;3 maxAMShare意义&lt;/h2&gt;
&lt;p&gt;handle线程如果接收到&lt;strong&gt;NODE_UPDATE&lt;/strong&gt;事件，如果（1）该node的机器内存资源满足条件，（2）并且有ACCEPTED状态的Application，那么将会为该待运行的APP的AM分配一个container，使该APP在所处的queue中跑起来。但在分配之前还需要一道检查canRuunAppAM。能否通过canRuunAppAM,就是由maxAMShare参数限制。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;  public boolean canRunAppAM(Resource amResource) {
    //默认是0.5f
    float maxAMShare =
        scheduler.getAllocationConfiguration().getQueueMaxAMShare(getName());
    if (Math.abs(maxAMShare - -1.0f) &amp;lt; 0.0001) {
      return true;
    }
    //该队的maxAMResource=maxAMShare * fair share(Instantaneous Fair Share)
    Resource maxAMResource = Resources.multiply(getFairShare(), maxAMShare);
    //amResourceUsage是该队列已经在运行的App的AM所占资源累加和
    Resource ifRunAMResource = Resources.add(amResourceUsage, amResource);
    //查看当前ifRunAMResource是否超过maxAMResource
    return !policy
        .checkIfAMResourceUsageOverLimit(ifRunAMResource, maxAMResource);
  }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面代码我们用公式来描述：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;队列中运行的APP为An，每个APP的AM占用资源为R&lt;/li&gt;
&lt;li&gt;ACCEPTED状态（待运行）的APP的AM大小为R1&lt;/li&gt;
&lt;li&gt;队列的fair share为QueFS&lt;/li&gt;
&lt;li&gt;队列的&lt;em&gt;maxAMResource=maxAMShare * QueFS&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ifRunAMResource=A1.R+A2.R+...+An.R+R1&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ifRunAMResource &amp;gt; maxAMResource&lt;/em&gt;，则该队列不能接纳待运行的APP&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;之所以要关注这个参数，是因为EMR很多客户在使用公平队列时会反映集群的总资源没有用满，但是还有APP在排队，没有跑起来，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/2277860/vi3q3su8qf.png?imageView2/2/w/1620&quot; alt=&quot;img&quot;/&gt;图（6） APP阻塞实例&lt;/p&gt;
&lt;p&gt;公平调度默认策略不关心Core的资源，只关心Memory。图中Memory用了292G，还有53.6G的内存没用，APP就可以阻塞。原因就是default队列所有运行中APP的AM资源总和超过了（345.6 * 0.5），导致APP阻塞。&lt;/p&gt;

&lt;p&gt;通过分析fair share的计算流程，搞清楚yarn的基本概念和部分参数，从下面的表格对比中，我们也可以看到官方的文档对概念和参数的描述是比较难懂的。剩余的参数放在第二篇-公平调度之抢占中分析。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;19.5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;10&quot;&gt;&lt;td&gt;Steady Fair Share&lt;/td&gt;
&lt;td&gt;The queue’s steady fair share of resources. These shares consider all the queues irrespective of whether they are active (have running applications) or not. These are computed less frequently and change only when the configuration or capacity changes.They are meant to provide visibility into resources the user can expect, and hence displayed in the Web UI.&lt;/td&gt;
&lt;td&gt;每个非fixed队列内存资源量的固定理论值。Steady Fair Share在RM初期工作后不再轻易改变，只有后续在增加节点改编配置（addNode）时才会重新计算。RM的初期工作也是handle线程把集群的每个节点添加到调度器中（addNode）。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;10&quot;&gt;&lt;td&gt;Instantaneous Fair Share&lt;/td&gt;
&lt;td&gt;The queue’s instantaneous fair share of resources. These shares consider only actives queues (those with running applications), and are used for scheduling decisions. Queues may be allocated resources beyond their shares when other queues aren’t using them. A queue whose resource consumption lies at or below its instantaneous fair share will never have its containers preempted.&lt;/td&gt;
&lt;td&gt;每个非fixed队列(活跃队列)的内存资源量的实际值，是在动态变化的，由update线程去定时更新队列的fair share。yarn里的fair share如果没有专门指代，都是指的的Instantaneous Fair Share。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;10&quot;&gt;&lt;td&gt;yarn.scheduler.fair.update-interval-ms&lt;/td&gt;
&lt;td&gt;The interval at which to lock the scheduler and recalculate fair shares, recalculate demand, and check whether anything is due for preemption. Defaults to 500 ms.&lt;/td&gt;
&lt;td&gt;update线程的间隔时间，该线程的工作是1更新fair share，2检查是否需要抢占资源。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;9&quot;&gt;&lt;td&gt;maxAMShare&lt;/td&gt;
&lt;td&gt;limit the fraction of the queue’s fair share that can be used to run application masters. This property can only be used for leaf queues. For example, if set to 1.0f, then AMs in the leaf queue can take up to 100% of both the memory and CPU fair share. The value of -1.0f will disable this feature and the amShare will not be checked. The default value is 0.5f.&lt;/td&gt;
&lt;td&gt;队列所有运行中的APP的AM资源总和必须不能超过maxAMShare * fair share&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;blockquote readability=&quot;0.56&quot;&gt;
&lt;p&gt;&lt;strong&gt;问答&lt;/strong&gt;&lt;br/&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/ask/173224?fromSource=waitui&quot;&gt;如何将yarn 升级到特定版本？&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;相关阅读&lt;/strong&gt;&lt;br/&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1184125?fromSource=waitui&quot;&gt;Yarn与Mesos&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1193162?fromSource=waitui&quot;&gt;Spark on Yarn | Spark，从入门到精通&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1165289?fromSource=waitui&quot;&gt;YARN三大模块介绍&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/edu/course-1128?fromSource=waitui&quot;&gt;【每日课程推荐】机器学习实战！快速入门在线广告业务及CTR相应知识&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;此文已由作者授权腾讯云+社区发布，更多原文请&lt;a href=&quot;https://cloud.tencent.com/developer/article/1239472?fromSource=waitui&quot;&gt;点击&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;搜索关注公众号「云加社区」，第一时间获取技术干货，关注后回复1024 送你一份技术课程大礼包！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;海量技术实践经验，尽在&lt;a href=&quot;https://cloud.tencent.com/developer?fromSource=waitui&quot;&gt;云加社区&lt;/a&gt;！&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 03:05:00 +0000</pubDate>
<dc:creator>腾讯云+社区</dc:creator>
<og:description>欢迎大家前往</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qcloud1001/p/9753183.html</dc:identifier>
</item>
</channel>
</rss>